{
  "x-generator": "NSwag v13.1.6.0 (NJsonSchema v10.1.2.0 (Newtonsoft.Json v12.0.0.0))",
  "swagger": "2.0",
  "info": {
    "title": "SpeedyCraft REST API",
    "description": "The REST API for SpeedyCraft.\r\n\r\n__How to use Filter, Sort, Page and PageSize by example:__\r\n ```\r\nGET /Customer\r\n?sorts=-rowversion,companyLastname                     // sort by rowversion descending, then by companyLastname\r\n&filters=regemployeeIdExt==1234, Notes@=some note,     // filter by regemployeeIdExt equals to 1234, and by notes that contains the phrase 'some note'\r\n&page=1                                                // get the first page\r\n&pageSize=10                                           // get 10 customer records per page\r\n ```\r\nMore formally:\r\n* sorts is a comma-delimited ordered list of property names to sort by. Adding a - before the name switches to sorting descendingly.\r\n* filters is a comma-delimited list of {Name}{Operator}{Value} where\r\n    * {Name} is the name of a property for the given entity.\r\n        * You can also have multiple names (for OR logic) by enclosing them in brackets and using a pipe delimiter, eg. (Phone|Mobile)==90919293 asks if Phone or Mobile equals 90919293\r\n    * {Operator} is one of the supported Operators (see below for list of Operators).\r\n    * {Value} is the case-insensitive value to use for filtering\r\n        * You can also have multiple values (for OR logic) by using a pipe delimiter, eg. Notes@=new|old will return records with Notes that contain the text 'new' or 'old'.\r\n* page is the number of page to return\r\n* pageSize is the number of items returned per page\r\n\r\n\r\n__Supported Operators:__\r\nOprator | Meaning\r\n--------|--------\r\n==      | Equals\r\n!=      | Not equals\r\n>       | Greater than\r\n<       | Less than\r\n>=      | Greater than or equal to\r\n<=      | Less than or equal to\r\n@=      | Contains \r\n_=      | Starts with\r\n!@=     | Does not contain\r\n!_=     | Does not start with\r\n\r\n\r\n__Some example queries:__\r\n```\r\nhttps://<your-url>/api/Customer?Filters=regemployeeIdExt==2707720,rowversion>349734047,(companyLastname|contactFirstname)@=John,notes_=this is a test&Sorts=rowversion&Page=1&Pagesize=50\r\n```\r\nThe above example filters on \r\n* regemployeeIdExt equal to 2707720\r\n* rowversion greater than 349734047\r\n* companyLastname OR contactFirstname contains John (john would also work as the value search is case-insensitive)\r\n* notes starts with this is a test\r\n\r\nThe result is sorted by rowversion, and page 1 with 50 records is shown.\r\n\r\nHere is an example of how to do filtering with IN(). The IN(..) operator is not supported, but we can use the OR (|) operator instead: \r\n```\r\nhttps:///<your-url>/api/Customer?Filters=customerId==114961|114962|114963&Sorts=rowversion&Page=1&Pagesize=50\r\n```\r\nThe above example finds records where customerId is either 114961, 114962 or 114963. \r\n\r\n__Some special properties (that need a bit more explanation):__\r\n* ```\r\n    TblAssignment.UseService\r\n  ```\r\n  Defines what service hours types are to be shown when adding AssignmentService on Assignment. \r\n  It is important to understand the hierarchy of how UseService is read from database on mobile devices.\r\n  Assignment.UseService has a higher priority than AssignmentType.UseService, so if * or empty string in\r\n  Assignment.UseService, it will look at AssignmentType.UseService.\r\n  Here is an overview on various alternatives:\r\n    * Alternative 1. ”Union with UserProfile”. Assignment.UseService or AssignmentType.UseService without special text\r\n      Example: 15;16;17;65\r\n      gives access to ServiceIDs 15;16;17;65, but ONLY if these are included in the current UserProfile.UseService (using AND with user profile).\r\n      Example: 0\r\n      gives access to no ServiceIDs at all.\r\n    * Alternative 2. ”In addition to UserProfile”. Using both Service Types from UserProfile and in current list from Assignment or AssignmentType.\r\n      Special text UP: Using (ServiceIDs from Assignment / AssignmentType) OR (UserProfile.UseService)\r\n      Example: UP;15;16;17;65\r\n      gives access to ServiceIDs in current user profile plus 15;16;17;65 (using 'OR' to UserProfile)\r\n    * Alternative 3. ”No UserProfile”. Skips the Service Types from UserProfile.UseService, and only gets them from Assignment.UseService / AssignmentType.UseService\r\n      Special text NUP: Using only UseService from Assignment / AssignmentType, ignoring UserProfile completely.\r\n      Example: NUP;15;16;17;65\r\n      gives only access to ServiceIDs 15;16;17;65\r\n        \r\n  Additional comments:\r\n    * Using both NUP and UP gives alternative 2.\r\n    * Setting Assignment.UseService = NUP  (without anything else), gives empty list of service types.\r\n\r\n* ```\r\n    TblAssignment.UseAssignmentListChoice\r\n  ```\r\n  Assignment menu items to appear on this assignment.\r\n  Please note that UseAssignmentListChoice parameter is present in multiple tables. The entries are overridden by this chain of priorities:\r\n    * Assignment\r\n    * AssignmentType\r\n    * UserProfile\r\n  With * or empty string in Assignment, SpeedyCraft looks for the next. Eventually UserProfile fallback value is used.\r\n  This string is semicolon-separated, and can have the following values:\r\n    * '*' = Show all items\r\n    *   = Show none [blank]\r\n    * PRO = Assignment products\r\n    * SER = Assignment services\r\n    * OBJ = Assignment objects\r\n    * OTH = Other\r\n    * INV = Invoice comment\r\n    * JOB = Job description\r\n    * ANO = Assignment notes\r\n    * LTG = Line tag\r\n    * TOT = Total list\r\n    * ECO = Economy info\r\n    * CON = Contact info\r\n\r\n    Example string: 'PRO;JOB;CON' -> Displays assignment products, job description and contact info.\r\n",
    "contact": {
      "name": "Devinco AS",
      "url": "https://devinco.com",
      "email": "aslak@devinco.com"
    },
    "version": "2.0"
  },
  "host": "137.135.134.2",
  "schemes": [
    "https"
  ],
  "paths": {
    "/api/Assignment": {
      "get": {
        "tags": [
          "Assignment"
        ],
        "summary": "Get Assignment entities",
        "operationId": "Assignment_Get",
        "parameters": [
          {
            "type": "string",
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "format": "int32",
            "maximum": 2147483647.0,
            "minimum": 1.0,
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "format": "int32",
            "maximum": 2147483647.0,
            "minimum": 1.0,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TblAssignment"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Assignment"
        ],
        "summary": "Add a new Assignment",
        "operationId": "Assignment_AddAssignment",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "name": "assignment",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TblAssignment"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TblAssignment"
            }
          }
        }
      }
    },
    "/api/Assignment/extended/Id/{assignmentId}": {
      "get": {
        "tags": [
          "Assignment"
        ],
        "summary": "Get Assignment with related entities by AssignmentID",
        "operationId": "Assignment_GetExtendedById",
        "parameters": [
          {
            "type": "integer",
            "name": "assignmentId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "boolean",
            "name": "IncludeCustomer",
            "in": "query",
            "description": "Include Customer data. Default true",
            "x-nullable": false
          },
          {
            "type": "boolean",
            "name": "IncludeEmployee",
            "in": "query",
            "description": "Include Employee data. Default true",
            "x-nullable": false
          },
          {
            "type": "boolean",
            "name": "IncludeAssignmentProduct",
            "in": "query",
            "description": "Include Assignment Product data. Default true",
            "x-nullable": false
          },
          {
            "type": "boolean",
            "name": "IncludeAssignmentService",
            "in": "query",
            "description": "Include Assignment Service data. Default true",
            "x-nullable": false
          },
          {
            "type": "boolean",
            "name": "IncludeAssignmentQualityControl",
            "in": "query",
            "description": "Include Assignment QualityControl data. Default true",
            "x-nullable": false
          },
          {
            "type": "boolean",
            "name": "IncludeAttachment",
            "in": "query",
            "description": "Include Attachment data. Default true",
            "x-nullable": false
          },
          {
            "type": "boolean",
            "name": "IncludeAttachmentFileData",
            "in": "query",
            "description": "Include Attachment file data Only valid if IncludeAttachment=true. Default false",
            "x-nullable": false
          },
          {
            "type": "boolean",
            "name": "IncludeAssignmentNote",
            "in": "query",
            "description": "Include Assignment Note data. Default true",
            "x-nullable": false
          },
          {
            "type": "boolean",
            "name": "IncludeAssignmentObject",
            "in": "query",
            "description": "Include Assignment Object data. Default true",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AssignmentExtended"
            }
          }
        }
      }
    },
    "/api/Assignment/neworchanged/{rowVersion}": {
      "get": {
        "tags": [
          "Assignment"
        ],
        "summary": "Get new or changed Assignment entities",
        "operationId": "Assignment_GetNewOrChanged",
        "parameters": [
          {
            "type": "integer",
            "name": "rowVersion",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "format": "int32",
            "maximum": 2147483647.0,
            "minimum": 1.0,
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "format": "int32",
            "maximum": 2147483647.0,
            "minimum": 1.0,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TblAssignment"
            }
          }
        }
      }
    },
    "/api/Assignment/Id/{assignmentId}": {
      "get": {
        "tags": [
          "Assignment"
        ],
        "summary": "Get Assignment by AssignmentID",
        "operationId": "Assignment_GetById",
        "parameters": [
          {
            "type": "integer",
            "name": "assignmentId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TblAssignment"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Assignment"
        ],
        "summary": "Edit an existing Assignment",
        "operationId": "Assignment_EditAssignmentById",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "assignmentId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "assignment",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TblAssignment"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success"
          }
        }
      }
    },
    "/api/Assignment/IdExt/{assignmentIdExt}": {
      "get": {
        "tags": [
          "Assignment"
        ],
        "summary": "Get Assignment by AssignmentIDExt",
        "operationId": "Assignment_GetByIdExt",
        "parameters": [
          {
            "type": "string",
            "name": "assignmentIdExt",
            "in": "path",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TblAssignment"
            }
          }
        }
      }
    },
    "/api/Assignment/IdExt/{assignmentIdext}": {
      "put": {
        "tags": [
          "Assignment"
        ],
        "summary": "Edit an existing Assignment",
        "operationId": "Assignment_EditAssignmentByIdExt",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "assignmentIdext",
            "in": "path",
            "required": true,
            "x-nullable": true
          },
          {
            "name": "assignment",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TblAssignment"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success"
          }
        }
      }
    },
    "/api/Assignment/{assignmentIdExt}": {
      "delete": {
        "tags": [
          "Assignment"
        ],
        "summary": "Delete an Assignment",
        "operationId": "Assignment_DeleteAssignment",
        "parameters": [
          {
            "type": "string",
            "name": "assignmentIdExt",
            "in": "path",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success"
          }
        }
      }
    },
    "/api/AssignmentService": {
      "get": {
        "tags": [
          "AssignmentService"
        ],
        "summary": "Get Assigment Service entities",
        "operationId": "AssignmentService_Get",
        "parameters": [
          {
            "type": "string",
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "format": "int32",
            "maximum": 2147483647.0,
            "minimum": 1.0,
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "format": "int32",
            "maximum": 2147483647.0,
            "minimum": 1.0,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TblAssignmentService"
            }
          }
        }
      }
    },
    "/api/AssignmentService/Id/{assignmentServiceId}": {
      "get": {
        "tags": [
          "AssignmentService"
        ],
        "summary": "Get AssignmentService by AssignmentServiceID",
        "operationId": "AssignmentService_GetAssignmentServiceById",
        "parameters": [
          {
            "type": "integer",
            "name": "assignmentServiceId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TblAssignmentService"
            }
          }
        }
      }
    },
    "/api/AssignmentService/IdExt/{assignmentServiceIdExt}": {
      "get": {
        "tags": [
          "AssignmentService"
        ],
        "summary": "Get AssignmentService by AssignmentServiceIDExt",
        "operationId": "AssignmentService_GetAssignmentServiceByIdExt",
        "parameters": [
          {
            "type": "string",
            "name": "assignmentServiceIdExt",
            "in": "path",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TblAssignmentService"
            }
          }
        }
      }
    },
    "/api/Customer": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Get Customer entities",
        "operationId": "Customer_Get",
        "parameters": [
          {
            "type": "string",
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "format": "int32",
            "maximum": 2147483647.0,
            "minimum": 1.0,
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "format": "int32",
            "maximum": 2147483647.0,
            "minimum": 1.0,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TblCustomer"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Add a new Customer",
        "operationId": "Customer_AddCustomer",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "name": "customer",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TblCustomer"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TblCustomer"
            }
          }
        }
      }
    },
    "/api/Customer/Id/{customerId}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Get Customer by CustomerID",
        "operationId": "Customer_GetCustomerById",
        "parameters": [
          {
            "type": "integer",
            "name": "customerId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TblCustomer"
            }
          }
        }
      }
    },
    "/api/Customer/IdExt/{customerIdExt}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Get Customer by CustomerIDExt",
        "operationId": "Customer_GetByIdExt",
        "parameters": [
          {
            "type": "string",
            "name": "customerIdExt",
            "in": "path",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TblCustomer"
            }
          }
        }
      }
    },
    "/api/Customer/neworchanged/{rowVersion}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Get new or changed Customer entities",
        "operationId": "Customer_GetNewOrChanged",
        "parameters": [
          {
            "type": "integer",
            "name": "rowVersion",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "format": "int32",
            "maximum": 2147483647.0,
            "minimum": 1.0,
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "format": "int32",
            "maximum": 2147483647.0,
            "minimum": 1.0,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TblCustomer"
            }
          }
        }
      }
    },
    "/api/Customer/{customerId}": {
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Edit an existing Customer",
        "operationId": "Customer_EditCustomer",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "customerId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "customer",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TblCustomer"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success"
          }
        }
      }
    },
    "/api/Customer/{customerIdExt}": {
      "delete": {
        "tags": [
          "Customer"
        ],
        "summary": "Delete a Customer",
        "operationId": "Customer_DeleteCustomer",
        "parameters": [
          {
            "type": "string",
            "name": "customerIdExt",
            "in": "path",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success"
          }
        }
      }
    },
    "/api/Employee": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get Employee entities",
        "operationId": "Employee_Get",
        "parameters": [
          {
            "type": "string",
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "format": "int32",
            "maximum": 2147483647.0,
            "minimum": 1.0,
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "format": "int32",
            "maximum": 2147483647.0,
            "minimum": 1.0,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TblEmployee"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Add a new Employee",
        "operationId": "Employee_AddEmployee",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "name": "employee",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TblEmployee"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TblEmployee"
            }
          }
        }
      }
    },
    "/api/Employee/Id/{employeeId}": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get Employee by EmployeeID",
        "operationId": "Employee_GetById",
        "parameters": [
          {
            "type": "integer",
            "name": "employeeId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TblEmployee"
            }
          }
        }
      }
    },
    "/api/Employee/IdExt/{employeeIdExt}": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get Employee by EmployeeIDExt",
        "operationId": "Employee_GetByIdExt",
        "parameters": [
          {
            "type": "string",
            "name": "employeeIdExt",
            "in": "path",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TblEmployee"
            }
          }
        }
      }
    },
    "/api/Employee/neworchanged/{rowVersion}": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get new or changed Employee entities",
        "operationId": "Employee_GetNewOrChanged",
        "parameters": [
          {
            "type": "integer",
            "name": "rowVersion",
            "in": "path",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "format": "int32",
            "maximum": 2147483647.0,
            "minimum": 1.0,
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "format": "int32",
            "maximum": 2147483647.0,
            "minimum": 1.0,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TblEmployee"
            }
          }
        }
      }
    },
    "/api/Employee/{employeeId}": {
      "put": {
        "tags": [
          "Employee"
        ],
        "summary": "Edit an existing Employee",
        "operationId": "Employee_EditEmployee",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "employeeId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "employee",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TblEmployee"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success"
          }
        }
      }
    },
    "/api/Employee/{employeeIdExt}": {
      "delete": {
        "tags": [
          "Employee"
        ],
        "summary": "Delete an Employee",
        "operationId": "Employee_DeleteEmployee",
        "parameters": [
          {
            "type": "string",
            "name": "employeeIdExt",
            "in": "path",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success"
          }
        }
      }
    },
    "/api/Product": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get Product entities",
        "operationId": "Product_Get",
        "parameters": [
          {
            "type": "string",
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "format": "int32",
            "maximum": 2147483647.0,
            "minimum": 1.0,
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "format": "int32",
            "maximum": 2147483647.0,
            "minimum": 1.0,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TblProduct"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Add a new Product",
        "operationId": "Product_AddProduct",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "name": "product",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TblProduct"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TblProduct"
            }
          }
        }
      }
    },
    "/api/Product/Id/{productId}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get Product by ProductID",
        "operationId": "Product_GetProductById",
        "parameters": [
          {
            "type": "integer",
            "name": "productId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TblProduct"
            }
          }
        }
      }
    },
    "/api/Product/IdExt/{productIdExt}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get Product by ProductIDExt",
        "operationId": "Product_GetProductByIdExt",
        "parameters": [
          {
            "type": "string",
            "name": "productIdExt",
            "in": "path",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TblProduct"
            }
          }
        }
      }
    },
    "/api/Product/{productIdExt}": {
      "delete": {
        "tags": [
          "Product"
        ],
        "summary": "Delete a Product",
        "operationId": "Product_DeleteProduct",
        "parameters": [
          {
            "type": "string",
            "name": "productIdExt",
            "in": "path",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success"
          }
        }
      }
    },
    "/api/Service": {
      "get": {
        "tags": [
          "Service"
        ],
        "summary": "Get Service entities",
        "operationId": "Service_Get",
        "parameters": [
          {
            "type": "string",
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "format": "int32",
            "maximum": 2147483647.0,
            "minimum": 1.0,
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "format": "int32",
            "maximum": 2147483647.0,
            "minimum": 1.0,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TblService"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Service"
        ],
        "summary": "Add a new Service",
        "operationId": "Service_AddService",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "name": "service",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TblService"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TblService"
            }
          }
        }
      }
    },
    "/api/Service/Id/{serviceId}": {
      "get": {
        "tags": [
          "Service"
        ],
        "summary": "Get Service by ServiceID",
        "operationId": "Service_GetServiceById",
        "parameters": [
          {
            "type": "integer",
            "name": "serviceId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TblService"
            }
          }
        }
      }
    },
    "/api/Service/IdExt/{serviceIdExt}": {
      "get": {
        "tags": [
          "Service"
        ],
        "summary": "Get Service by ServiceIDExt",
        "operationId": "Service_GetServiceByIdExt",
        "parameters": [
          {
            "type": "string",
            "name": "serviceIdExt",
            "in": "path",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TblService"
            }
          }
        }
      }
    },
    "/api/Service/{serviceIdExt}": {
      "delete": {
        "tags": [
          "Service"
        ],
        "summary": "Delete a Service",
        "operationId": "Service_DeleteService",
        "parameters": [
          {
            "type": "string",
            "name": "serviceIdExt",
            "in": "path",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success"
          }
        }
      }
    }
  },
  "definitions": {
    "TblAssignment": {
      "type": "object",
      "required": [
        "assignmentId",
        "customerId",
        "assignmentType",
        "rowVer"
      ],
      "properties": {
        "assignmentId": {
          "type": "integer",
          "format": "int32"
        },
        "assignmentIdext": {
          "type": "string"
        },
        "assignmentIdtext": {
          "type": "string"
        },
        "parentAssignmentId": {
          "type": "integer",
          "format": "int32"
        },
        "customerId": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "assignmentDate": {
          "type": "string",
          "format": "date-time"
        },
        "fromDate": {
          "type": "string",
          "format": "date-time"
        },
        "toDate": {
          "type": "string",
          "format": "date-time"
        },
        "invoiceStatusId": {
          "type": "integer",
          "format": "byte"
        },
        "invoiceDate": {
          "type": "string",
          "format": "date-time"
        },
        "invoiceDateDue": {
          "type": "string",
          "format": "date-time"
        },
        "invoiceComment": {
          "type": "string"
        },
        "ourReferenceCode": {
          "type": "string"
        },
        "reference": {
          "type": "string"
        },
        "contact": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "siteAddress": {
          "type": "string"
        },
        "sitePostalNumber": {
          "type": "string"
        },
        "sitePostalPlace": {
          "type": "string"
        },
        "jobDescription": {
          "type": "string"
        },
        "discountProduct": {
          "type": "number",
          "format": "double"
        },
        "discountService": {
          "type": "number",
          "format": "double"
        },
        "assignmentType": {
          "type": "integer",
          "format": "byte"
        },
        "assignmentPriceType": {
          "type": "integer",
          "format": "byte"
        },
        "assignmentPrice": {
          "type": "number",
          "format": "double"
        },
        "officeClerkId": {
          "type": "integer",
          "format": "int32"
        },
        "employeeInChargeId": {
          "type": "integer",
          "format": "int32"
        },
        "requireQualityControl": {
          "type": "boolean"
        },
        "requireServiceCommentIgnore": {
          "type": "boolean"
        },
        "requirePhase": {
          "type": "boolean"
        },
        "requireCostCategory1": {
          "type": "boolean"
        },
        "requireCostCategory2": {
          "type": "boolean"
        },
        "signatureId": {
          "type": "integer",
          "format": "int32"
        },
        "useEmployee": {
          "type": "string",
          "description": "Contains EmployeeID values, e.g. 10;11;12"
        },
        "useService": {
          "type": "string"
        },
        "participants": {
          "type": "string"
        },
        "assignmentProductSyncFilter": {
          "type": "string"
        },
        "assignmentServiceSyncFilter": {
          "type": "string"
        },
        "hierarchyLevel": {
          "type": "integer",
          "format": "byte"
        },
        "regEmployeeId": {
          "type": "integer",
          "format": "int32"
        },
        "showRecord": {
          "type": "boolean"
        },
        "lastSyncPocketPcid": {
          "type": "integer",
          "format": "int32"
        },
        "updateInfoExt": {
          "type": "integer",
          "format": "byte"
        },
        "externalStatus": {
          "type": "integer",
          "format": "byte"
        },
        "unassignedAssignmentEnabled": {
          "type": "integer",
          "format": "byte"
        },
        "useAssignmentListChoice": {
          "type": "string"
        },
        "assignmentCompleteTime": {
          "type": "string",
          "format": "date-time"
        },
        "assignmentComplete": {
          "type": "boolean"
        },
        "gpsposition": {
          "type": "string"
        },
        "assignmentTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "assignmentStatusId": {
          "type": "integer",
          "format": "int32"
        },
        "assignmentPriorityId": {
          "type": "integer",
          "format": "int32"
        },
        "timeEstimate": {
          "type": "number",
          "format": "double"
        },
        "useAssignmentObjectQualityControl": {
          "type": "string"
        },
        "siteName": {
          "type": "string"
        },
        "gpspositionStatus": {
          "type": "integer",
          "format": "byte"
        },
        "gpspositionLat": {
          "type": "number",
          "format": "double"
        },
        "gpspositionLon": {
          "type": "number",
          "format": "double"
        },
        "gpspositionAlt": {
          "type": "number",
          "format": "double"
        },
        "gpspositionAccuracy": {
          "type": "number",
          "format": "double"
        },
        "gpspositionInfo": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "useDimension": {
          "type": "string"
        },
        "lineTagUsage": {
          "type": "integer",
          "format": "byte"
        },
        "workProcess": {
          "type": "string"
        },
        "externalValueInt": {
          "type": "integer",
          "format": "int32"
        },
        "customerSiteId": {
          "type": "integer",
          "format": "int32"
        },
        "rowVer": {
          "type": "integer",
          "format": "int64"
        },
        "serviceApproveRequired": {
          "type": "boolean"
        },
        "useQualityControlRequire": {
          "type": "string"
        },
        "departmentId": {
          "type": "integer",
          "format": "int32"
        },
        "customerIdExt": {
          "type": "string"
        },
        "regEmployeeIdExt": {
          "type": "string"
        },
        "employeeInChargeIdExt": {
          "type": "string"
        },
        "assignmentPriorityIdExt": {
          "type": "string"
        },
        "assignmentTypeIdExt": {
          "type": "string"
        },
        "assignmentStatusIdExt": {
          "type": "string"
        },
        "customerSiteIdExt": {
          "type": "string"
        },
        "parentAssignmentIdExt": {
          "type": "string"
        },
        "signatureIdExt": {
          "type": "string"
        },
        "officeClerkIdExt": {
          "type": "string"
        },
        "departmentIdExt": {
          "type": "string"
        }
      }
    },
    "AssignmentExtended": {
      "type": "object",
      "properties": {
        "assignment": {
          "$ref": "#/definitions/TblAssignment"
        },
        "customer": {
          "$ref": "#/definitions/TblCustomer"
        },
        "employeeInCharge": {
          "$ref": "#/definitions/TblEmployee"
        },
        "assignmentProducts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TblAssignmentProduct"
          }
        },
        "assignmentServices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TblAssignmentService"
          }
        },
        "assignmentQualityControls": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TblAssignmentQualityControl"
          }
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TblAttachment"
          }
        },
        "assignmentNotes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TblAssignmentNote"
          }
        },
        "assignmentObjects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TblAssignmentObject"
          }
        }
      }
    },
    "TblCustomer": {
      "type": "object",
      "required": [
        "customerId",
        "rowVer"
      ],
      "properties": {
        "customerId": {
          "type": "integer",
          "format": "int32"
        },
        "customerIdext": {
          "type": "string"
        },
        "customerIdtext": {
          "type": "string"
        },
        "organizationNumber": {
          "type": "string"
        },
        "companyLastname": {
          "type": "string"
        },
        "contactFirstname": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "postalNumber": {
          "type": "string"
        },
        "postalPlace": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "phone2": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "fax": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "discountProduct": {
          "type": "number",
          "format": "double"
        },
        "discountService": {
          "type": "number",
          "format": "double"
        },
        "status": {
          "type": "integer",
          "format": "byte"
        },
        "departmentIdext": {
          "type": "string"
        },
        "regEmployeeId": {
          "type": "integer",
          "format": "int32"
        },
        "showRecord": {
          "type": "boolean"
        },
        "updateInfoExt": {
          "type": "integer",
          "format": "byte"
        },
        "externalStatus": {
          "type": "integer",
          "format": "byte"
        },
        "gpspositionStatus": {
          "type": "integer",
          "format": "byte"
        },
        "gpspositionLat": {
          "type": "number",
          "format": "double"
        },
        "gpspositionLon": {
          "type": "number",
          "format": "double"
        },
        "gpspositionAlt": {
          "type": "number",
          "format": "double"
        },
        "gpspositionAccuracy": {
          "type": "number",
          "format": "double"
        },
        "gpspositionInfo": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "regEmployeeIDExt": {
          "type": "string"
        },
        "rowVer": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "TblEmployee": {
      "type": "object",
      "required": [
        "employeeId",
        "rowVer"
      ],
      "properties": {
        "employeeId": {
          "type": "integer",
          "format": "int32"
        },
        "employeeIdext": {
          "type": "string"
        },
        "employeeIdtext": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "firstname": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "fax": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "userProfileId": {
          "type": "integer",
          "format": "int32"
        },
        "showRecord": {
          "type": "boolean"
        },
        "updateInfoExt": {
          "type": "integer",
          "format": "byte"
        },
        "pocketPcid": {
          "type": "integer",
          "format": "int32"
        },
        "viaTracksUsername": {
          "type": "string"
        },
        "viaTracksPassword": {
          "type": "string"
        },
        "exchangeUsername": {
          "type": "string"
        },
        "exchangePassword": {
          "type": "string"
        },
        "isOfficeClerk": {
          "type": "boolean"
        },
        "speedyCraftWebUsername": {
          "type": "string"
        },
        "speedyCraftWebPassword": {
          "type": "string"
        },
        "serviceApproveRequired": {
          "type": "boolean"
        },
        "exchangeSyncState": {
          "type": "string"
        },
        "notificationSetup": {
          "type": "string"
        },
        "speedyCraftWebVerificationToken": {
          "type": "string"
        },
        "speedyCraftWebVerificationDate": {
          "type": "string",
          "format": "date-time"
        },
        "departmentId": {
          "type": "integer",
          "format": "int32"
        },
        "departmentIdext": {
          "type": "string"
        },
        "rowVer": {
          "type": "integer",
          "format": "int64"
        },
        "hasMobileDevice": {
          "type": "boolean"
        }
      }
    },
    "TblAssignmentProduct": {
      "type": "object",
      "required": [
        "assignmentProductId",
        "rowVer"
      ],
      "properties": {
        "assignmentProductId": {
          "type": "integer",
          "format": "int32"
        },
        "assignmentProductIdext": {
          "type": "string"
        },
        "assignmentProductIdtext": {
          "type": "string"
        },
        "assignmentId": {
          "type": "integer",
          "format": "int32"
        },
        "assignmentIdext": {
          "type": "string"
        },
        "productId": {
          "type": "integer",
          "format": "int32"
        },
        "productIdext": {
          "type": "string"
        },
        "supplierId": {
          "type": "integer",
          "format": "int32"
        },
        "modProductName": {
          "type": "string"
        },
        "modPriceOut": {
          "type": "number",
          "format": "double"
        },
        "modDiscount": {
          "type": "number",
          "format": "double"
        },
        "modPriceInNet": {
          "type": "number",
          "format": "double"
        },
        "preQuantity": {
          "type": "number",
          "format": "double"
        },
        "quantity": {
          "type": "number",
          "format": "double"
        },
        "storageId": {
          "type": "integer",
          "format": "int32"
        },
        "regDate": {
          "type": "string",
          "format": "date-time"
        },
        "partlyInvoiceStatus": {
          "type": "integer",
          "format": "byte"
        },
        "phaseIdext": {
          "type": "string"
        },
        "costCategory1Idext": {
          "type": "string"
        },
        "costCategory2Idext": {
          "type": "string"
        },
        "priceModified": {
          "type": "integer",
          "format": "byte"
        },
        "orderItemId": {
          "type": "integer",
          "format": "int32"
        },
        "externalStatus": {
          "type": "integer",
          "format": "byte"
        },
        "regEmployeeId": {
          "type": "integer",
          "format": "int32"
        },
        "parentAssignmentProductId": {
          "type": "integer",
          "format": "int32"
        },
        "showRecord": {
          "type": "boolean"
        },
        "lastSyncPocketPcid": {
          "type": "integer",
          "format": "int32"
        },
        "updateInfoExt": {
          "type": "integer",
          "format": "byte"
        },
        "miscData1": {
          "type": "string"
        },
        "miscData2": {
          "type": "string"
        },
        "miscData3": {
          "type": "string"
        },
        "miscData4": {
          "type": "string"
        },
        "prePlanned": {
          "type": "integer",
          "format": "byte"
        },
        "sortOrder": {
          "type": "integer",
          "format": "int32"
        },
        "productIdtext": {
          "type": "string"
        },
        "assignmentObjectId": {
          "type": "integer",
          "format": "int32"
        },
        "assignmentNoteId": {
          "type": "integer",
          "format": "int32"
        },
        "assignmentProductDataDefinition": {
          "type": "string"
        },
        "assignmentProductDataResponse": {
          "type": "string"
        },
        "processed": {
          "type": "boolean"
        },
        "rowVer": {
          "type": "integer",
          "format": "int64"
        },
        "supplierIdext": {
          "type": "string"
        },
        "regEmployeeIdext": {
          "type": "string"
        },
        "storageIdext": {
          "type": "string"
        },
        "orderItemIdext": {
          "type": "string"
        },
        "assignmentObjectIdext": {
          "type": "string"
        },
        "assignmentNoteIdext": {
          "type": "string"
        }
      }
    },
    "TblAssignmentService": {
      "type": "object",
      "required": [
        "assignmentServiceId",
        "assignmentId",
        "serviceId",
        "modPrice",
        "modDiscount",
        "employeeId",
        "partlyInvoiceStatus",
        "priceModified",
        "externalStatus",
        "signatureId",
        "regEmployeeId",
        "lastSyncPocketPcid",
        "updateInfoExt",
        "sortOrder",
        "assignmentObjectId",
        "assignmentNoteId",
        "approved",
        "approvedByEmployeeId",
        "regWeb",
        "rowVer",
        "processed"
      ],
      "properties": {
        "assignmentServiceId": {
          "type": "integer",
          "format": "int32"
        },
        "assignmentServiceIdext": {
          "type": "string"
        },
        "assignmentServiceIdtext": {
          "type": "string"
        },
        "assignmentId": {
          "type": "integer",
          "format": "int32"
        },
        "assignmentIdext": {
          "type": "string"
        },
        "serviceDate": {
          "type": "string",
          "format": "date-time"
        },
        "serviceId": {
          "type": "integer",
          "format": "int32"
        },
        "modPrice": {
          "type": "number",
          "format": "double"
        },
        "modDiscount": {
          "type": "number",
          "format": "double"
        },
        "modCostPrice": {
          "type": "number",
          "format": "double"
        },
        "quantity": {
          "type": "number",
          "format": "double"
        },
        "serviceComment": {
          "type": "string"
        },
        "employeeId": {
          "type": "integer",
          "format": "int32"
        },
        "partlyInvoiceStatus": {
          "type": "integer",
          "format": "byte"
        },
        "phaseIdext": {
          "type": "string"
        },
        "costCategory1Idext": {
          "type": "string"
        },
        "costCategory2Idext": {
          "type": "string"
        },
        "priceModified": {
          "type": "integer",
          "format": "byte"
        },
        "addOnAnswer": {
          "type": "string"
        },
        "externalStatus": {
          "type": "integer",
          "format": "byte"
        },
        "signatureId": {
          "type": "integer",
          "format": "int32"
        },
        "regEmployeeId": {
          "type": "integer",
          "format": "int32"
        },
        "showRecord": {
          "type": "boolean"
        },
        "lastSyncPocketPcid": {
          "type": "integer",
          "format": "int32"
        },
        "updateInfoExt": {
          "type": "integer",
          "format": "byte"
        },
        "sortOrder": {
          "type": "integer",
          "format": "int32"
        },
        "assignmentObjectId": {
          "type": "integer",
          "format": "int32"
        },
        "assignmentNoteId": {
          "type": "integer",
          "format": "int32"
        },
        "regTime": {
          "type": "string",
          "format": "date-time"
        },
        "serviceStartTime": {
          "type": "string"
        },
        "serviceEndTime": {
          "type": "string"
        },
        "delivered": {
          "type": "boolean"
        },
        "approved": {
          "type": "integer",
          "format": "byte"
        },
        "approvedByEmployeeId": {
          "type": "integer",
          "format": "int32"
        },
        "approvedTime": {
          "type": "string",
          "format": "date-time"
        },
        "regWeb": {
          "type": "boolean"
        },
        "rowVer": {
          "type": "integer",
          "format": "int64"
        },
        "processed": {
          "type": "boolean"
        },
        "regEmployeeIdext": {
          "type": "string"
        },
        "assignmentObjectIdext": {
          "type": "string"
        },
        "assignmentNoteIdext": {
          "type": "string"
        },
        "employeeIdext": {
          "type": "string"
        },
        "approvedByEmployeeIdext": {
          "type": "string"
        }
      }
    },
    "TblAssignmentQualityControl": {
      "type": "object",
      "required": [
        "assignmentQualityControlId",
        "ownerId",
        "qualityControlId",
        "signatureEmployeeId",
        "signatureCustomerId",
        "regEmployeeId",
        "lastSyncPocketPcid",
        "updateInfoExt",
        "externalStatus",
        "schemaType",
        "requiredStatus",
        "edokStatus",
        "processed",
        "rowVer"
      ],
      "properties": {
        "assignmentQualityControlId": {
          "type": "integer",
          "format": "int32"
        },
        "assignmentQualityControlIdext": {
          "type": "string"
        },
        "ownerId": {
          "type": "integer",
          "format": "int32"
        },
        "ownerIdext": {
          "type": "string"
        },
        "qualityControlId": {
          "type": "integer",
          "format": "int32"
        },
        "assignmentQualityControlDescription": {
          "type": "string"
        },
        "qualityControlAnswer": {
          "type": "string"
        },
        "signatureEmployeeId": {
          "type": "integer",
          "format": "int32"
        },
        "signatureEmployeeIdext": {
          "type": "string"
        },
        "signatureCustomerId": {
          "type": "integer",
          "format": "int32"
        },
        "signatureCustomerIdext": {
          "type": "string"
        },
        "regTime": {
          "type": "string",
          "format": "date-time"
        },
        "regEmployeeId": {
          "type": "integer",
          "format": "int32"
        },
        "regEmployeeIdext": {
          "type": "string"
        },
        "showRecord": {
          "type": "boolean"
        },
        "lastSyncPocketPcid": {
          "type": "integer",
          "format": "int32"
        },
        "updateInfoExt": {
          "type": "integer",
          "format": "byte"
        },
        "externalStatus": {
          "type": "integer",
          "format": "byte"
        },
        "qualityControlQuestion": {
          "type": "string"
        },
        "schemaType": {
          "type": "integer",
          "format": "byte"
        },
        "qualityControlAnswerPreXml": {
          "type": "string"
        },
        "requiredStatus": {
          "type": "integer",
          "format": "byte"
        },
        "edokStatus": {
          "type": "integer",
          "format": "byte"
        },
        "edokRegTime": {
          "type": "string",
          "format": "date-time"
        },
        "processed": {
          "type": "boolean"
        },
        "rowVer": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "TblAttachment": {
      "type": "object",
      "required": [
        "attachmentId",
        "regEmployeeId",
        "updateInfoExt",
        "ownerId",
        "ownerType",
        "ownerIdtag",
        "edokStatus",
        "databaseNumber",
        "parentAttachmentId",
        "revisionNumber",
        "rowVer"
      ],
      "properties": {
        "attachmentId": {
          "type": "integer",
          "format": "int32"
        },
        "attachmentIdext": {
          "type": "string"
        },
        "attachmentIdtext": {
          "type": "string"
        },
        "attachmentType": {
          "type": "integer",
          "format": "byte"
        },
        "description": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "fileSize": {
          "type": "integer",
          "format": "int32"
        },
        "fileData": {
          "type": "string",
          "format": "byte"
        },
        "isOnServer": {
          "type": "boolean"
        },
        "regTime": {
          "type": "string",
          "format": "date-time"
        },
        "regEmployeeId": {
          "type": "integer",
          "format": "int32"
        },
        "regEmployeeIdext": {
          "type": "string"
        },
        "updateInfoExt": {
          "type": "integer",
          "format": "byte"
        },
        "ownerId": {
          "type": "integer",
          "format": "int32"
        },
        "ownerType": {
          "type": "integer",
          "format": "byte"
        },
        "ownerIdtag": {
          "type": "integer",
          "format": "int32"
        },
        "showRecord": {
          "type": "boolean"
        },
        "edokStatus": {
          "type": "integer",
          "format": "byte"
        },
        "edokRegTime": {
          "type": "string",
          "format": "date-time"
        },
        "databaseNumber": {
          "type": "integer",
          "format": "int32"
        },
        "parentAttachmentId": {
          "type": "integer",
          "format": "int32"
        },
        "revisionNumber": {
          "type": "integer",
          "format": "int32"
        },
        "rowVer": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "TblAssignmentNote": {
      "type": "object",
      "required": [
        "assignmentNoteId",
        "assignmentId",
        "regEmployeeId",
        "lastSyncPocketPcid",
        "updateInfoExt",
        "sortOrder",
        "rowVer"
      ],
      "properties": {
        "assignmentNoteId": {
          "type": "integer",
          "format": "int32"
        },
        "assignmentNoteIdext": {
          "type": "string"
        },
        "assignmentNoteIdtext": {
          "type": "string"
        },
        "assignmentId": {
          "type": "integer",
          "format": "int32"
        },
        "assignmentIdext": {
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "internal": {
          "type": "boolean"
        },
        "regTime": {
          "type": "string",
          "format": "date-time"
        },
        "regEmployeeId": {
          "type": "integer",
          "format": "int32"
        },
        "regEmployeeIdext": {
          "type": "string"
        },
        "showRecord": {
          "type": "boolean"
        },
        "lastSyncPocketPcid": {
          "type": "integer",
          "format": "int32"
        },
        "updateInfoExt": {
          "type": "integer",
          "format": "byte"
        },
        "lineTag": {
          "type": "boolean"
        },
        "sortOrder": {
          "type": "integer",
          "format": "int32"
        },
        "active": {
          "type": "boolean"
        },
        "rowVer": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "TblAssignmentObject": {
      "type": "object",
      "required": [
        "assignmentObjectId",
        "assignmentId",
        "objectId",
        "regEmployeeId",
        "lastSyncPocketPcid",
        "updateInfoExt",
        "externalStatus",
        "gpspositionStatus",
        "assignmentNoteId",
        "parentAssignmentObjectId",
        "assignmentObjectStatusId",
        "readOnly"
      ],
      "properties": {
        "assignmentObjectId": {
          "type": "integer",
          "format": "int32"
        },
        "assignmentObjectIdext": {
          "type": "string"
        },
        "assignmentObjectIdtext": {
          "type": "string"
        },
        "assignmentId": {
          "type": "integer",
          "format": "int32"
        },
        "objectId": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "additionalInfo": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "gpsposition": {
          "type": "string"
        },
        "deployTime": {
          "type": "string",
          "format": "date-time"
        },
        "assignmentObjectDataDefinition": {
          "type": "string"
        },
        "assignmentObjectDataResponse": {
          "type": "string"
        },
        "regTime": {
          "type": "string",
          "format": "date-time"
        },
        "regEmployeeId": {
          "type": "integer",
          "format": "int32"
        },
        "showRecord": {
          "type": "boolean"
        },
        "lastSyncPocketPcid": {
          "type": "integer",
          "format": "int32"
        },
        "updateInfoExt": {
          "type": "integer",
          "format": "byte"
        },
        "externalStatus": {
          "type": "integer",
          "format": "byte"
        },
        "gpspositionStatus": {
          "type": "integer",
          "format": "byte"
        },
        "gpspositionLat": {
          "type": "number",
          "format": "double"
        },
        "gpspositionLon": {
          "type": "number",
          "format": "double"
        },
        "gpspositionAlt": {
          "type": "number",
          "format": "double"
        },
        "gpspositionAccuracy": {
          "type": "number",
          "format": "double"
        },
        "gpspositionInfo": {
          "type": "string"
        },
        "assignmentNoteId": {
          "type": "integer",
          "format": "int32"
        },
        "parentAssignmentObjectId": {
          "type": "integer",
          "format": "int32"
        },
        "assignmentObjectStatusId": {
          "type": "integer",
          "format": "int32"
        },
        "readOnly": {
          "type": "integer",
          "format": "byte"
        },
        "rowVersion": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "TblProduct": {
      "type": "object",
      "required": [
        "productId"
      ],
      "properties": {
        "productId": {
          "type": "integer",
          "format": "int32"
        },
        "productIdext": {
          "type": "string"
        },
        "productIdtext": {
          "type": "string"
        },
        "eancode": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "priceOut": {
          "type": "number",
          "format": "double"
        },
        "unit": {
          "type": "string"
        },
        "categoryId": {
          "type": "integer",
          "format": "int32"
        },
        "categoryIdext": {
          "type": "string"
        },
        "defaultSupplierId": {
          "type": "integer",
          "format": "int32"
        },
        "defaultSupplierIdext": {
          "type": "string"
        },
        "productType": {
          "type": "integer",
          "format": "byte"
        },
        "showRecord": {
          "type": "boolean"
        },
        "updateInfoExt": {
          "type": "integer",
          "format": "byte"
        },
        "myFavorite": {
          "type": "boolean"
        },
        "onStock": {
          "type": "integer",
          "format": "byte"
        },
        "qualityControlId": {
          "type": "integer",
          "format": "int32"
        },
        "qualityControlIdext": {
          "type": "string"
        },
        "qualityControlRequire": {
          "type": "integer",
          "format": "byte"
        },
        "objectTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "objectTypeIdext": {
          "type": "string"
        },
        "assignmentProductDataDefinition": {
          "type": "string"
        },
        "docLink": {
          "type": "string"
        },
        "blockUpdateInfoExt": {
          "type": "boolean"
        },
        "modifyPriceInNet": {
          "type": "boolean"
        }
      }
    },
    "TblService": {
      "type": "object",
      "required": [
        "serviceId"
      ],
      "properties": {
        "serviceId": {
          "type": "integer",
          "format": "int32"
        },
        "serviceIdext": {
          "type": "string"
        },
        "serviceIdtext": {
          "type": "string"
        },
        "serviceDescription": {
          "type": "string"
        },
        "servicePrice": {
          "type": "number",
          "format": "double"
        },
        "serviceCostPrice": {
          "type": "number",
          "format": "double"
        },
        "quantification": {
          "type": "integer",
          "format": "byte"
        },
        "serviceSortOrder": {
          "type": "integer",
          "format": "int32"
        },
        "requireServiceComment": {
          "type": "boolean"
        },
        "serviceType": {
          "type": "integer",
          "format": "byte"
        },
        "addOnQuestion": {
          "type": "string"
        },
        "showRecord": {
          "type": "boolean"
        },
        "updateInfoExt": {
          "type": "integer",
          "format": "byte"
        },
        "includeInTotal": {
          "type": "boolean"
        },
        "qualityControlId": {
          "type": "integer",
          "format": "int32"
        },
        "qualityControlIdext": {
          "type": "string"
        },
        "qualityControlRequire": {
          "type": "integer",
          "format": "byte"
        },
        "blockUpdateInfoExt": {
          "type": "boolean"
        }
      }
    }
  }
}