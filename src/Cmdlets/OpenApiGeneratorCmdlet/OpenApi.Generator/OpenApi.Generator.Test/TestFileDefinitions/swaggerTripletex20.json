{
    "swagger": "2.0",
    "info": {
        "description": "The Tripletex API is a **RESTful API**, which does not implement PATCH, but uses a PUT with optional fields.\n\n**Actions** or commands are represented in our RESTful path with a prefixed `:`. Example: `/v2/hours/123/:approve`.\n\n**Summaries** or aggregated results are represented in our RESTful path with a prefixed \u003ccode\u003e\u0026gt;\u003c/code\u003e. Example: \u003ccode\u003e/v2/hours/\u0026gt;thisWeeksBillables\u003c/code\u003e.\n\n**\"requestID\"** is a key found in all responses in the header with the name `x-tlx-request-id`. For validation and error responses it is also in the response body. If additional log information is absolutely necessary, our support division can locate the key value.\n\n**Download** the [swagger.json](/v2/swagger.json) file [OpenAPI Specification](https://github.com/OAI/OpenAPI-Specification) to [generate code](https://github.com/swagger-api/swagger-codegen). This document was generated from the Swagger JSON file.\n\n**version:** This is a versioning number found on all DB records. If included, it will prevent your PUT/POST from overriding any updates to the record since your GET.\n\n**Date \u0026 DateTime** follows the **ISO 8601** standard. Date: `YYYY-MM-DD`. DateTime: `YYYY-MM-DDThh:mm:ssZ`\n\n**Sorting** is done by specifying a comma separated list, where a `-` prefix denotes descending. You can sort by sub object with the following format: `project.name, -date`.\n\n**Searching:** is done by entering values in the optional fields for each API call. The values fall into the following categories: range, in, exact and like.\n\n**Missing fields or even no response data** can occur because result objects and fields are filtered on authorization.\n\n**See [FAQ](https://tripletex.no/execute/docViewer?articleId=906\u0026language=0) for more additional information.**\n\n\n## Authentication:\n- **Tokens:** The Tripletex API uses 3 different tokens - **consumerToken**, **employeeToken** and **sessionToken**.\n\n- **consumerToken** is a token provided to the consumer by Tripletex after the API 2.0 registration is completed.\n\n- **employeeToken** is a token created by an administrator in your Tripletex account via the user settings and the tab \"API access\". Each employee token must be given a set of entitlements. [Read more here.](https://tripletex.no/execute/docViewer?articleId=853\u0026language=0)\n\n- **sessionToken** is the token from `/token/session/:create` which requires a consumerToken and an employeeToken created with the same consumer token, but not an authentication header. See how to create a sessionToken [here](https://tripletex.no/execute/docViewer?articleId=855\u0026language=0).\n- The session token is used as the password in \"Basic Authentication Header\" for API calls.\n\n- Use blank or `0` as username for accessing the account with regular employee token, or if a company owned employee token accesses \u003ccode\u003e/company/\u0026gt;withLoginAccess\u003c/code\u003e or \u003ccode\u003e/token/session/\u0026gt;whoAmI\u003c/code\u003e.\n\n- For company owned employee tokens (accounting offices) the ID from \u003ccode\u003e/company/\u0026gt;withLoginAccess\u003c/code\u003e can be used as username for accessing client accounts.\n\n- If you need to create the header yourself use \u003ccode\u003eAuthorization: Basic \u0026lt;base64encode(\u00270:sessionToken\u0027)\u0026gt;\u003c/code\u003e.\n\n\n## Tags:\n- **[BETA]** This is a beta endpoint and can be subject to change.\n- **[DEPRECATED]** Deprecated means that we intend to remove/change this feature or capability in a future \"major\" API release. We therefore discourage all use of this feature/capability.\n\n## Fields:\nUse the `fields` parameter to specify which fields should be returned. This also supports fields from sub elements. Example values:\n- `project,activity,hours`  returns `{project:..., activity:...., hours:...}`.\n- just `project` returns `\"project\" : { \"id\": 12345, \"url\": \"tripletex.no/v2/projects/12345\"  }`.\n- `project(*)` returns `\"project\" : { \"id\": 12345 \"name\":\"ProjectName\" \"number.....startDate\": \"2013-01-07\" }`.\n- `project(name)` returns `\"project\" : { \"name\":\"ProjectName\" }`.\n- All elements and some subElements :  `*,activity(name),employee(*)`.\n\n## Changes:\nTo get the changes for a resource, `changes` have to be explicitly specified as part of the `fields` parameter, e.g. `*,changes`.\nThere are currently two types of change available: \n- `CREATE` for when the resource was created\n- `UPDATE` for when the resource was updated\n\nNOTE: For objects created prior to October 24th 2018 the list may be incomplete, but will always contain the CREATE and the last change (if the object has been changed after creation).\n\n## Rate limiting in each response header:\nRate limiting is performed on the API calls for an employee for each API consumer. Status regarding the rate limit is returned as headers:\n- `X-Rate-Limit-Limit` - The number of allowed requests in the current period.\n- `X-Rate-Limit-Remaining` - The number of remaining requests.\n- `X-Rate-Limit-Reset` - The number of seconds left in the current period.\n\nOnce the rate limit is hit, all requests will return HTTP status code `429` for the remainder of the current period.\n\n\n## Response envelope:\n```json\n{\n  \"fullResultSize\": ###,\n  \"from\": ###, // Paging starting from\n  \"count\": ###, // Paging count\n  \"versionDigest\": \"Hash of full result\",\n  \"values\": [...list of objects...]\n}\n{\n  \"value\": {...single object...}\n}\n```\n\n\n## WebHook envelope:\n```json\n{\n  \"subscriptionId\": ###,\n  \"event\": \"object.verb\", // As listed from /v2/event/\n  \"id\": ###, // Object id\n  \"value\": {... single object, null if object.deleted ...}\n}\n```\n\n\n\n## Error/warning envelope:\n```json\n{\n  \"status\": ###, // HTTP status code\n  \"code\": #####, // internal status code of event\n  \"message\": \"Basic feedback message in your language\",\n  \"link\": \"Link to doc\",\n  \"developerMessage\": \"More technical message\",\n  \"validationMessages\": [ // Will be null if Error\n    {\n      \"field\": \"Name of field\",\n      \"message\": \"Validation failure information\"\n    }\n  ],\n  \"requestId\": \"UUID used in any logs\"\n}\n```\n\n\n## Status codes / Error codes:\n- **200 OK**\n- **201 Created** - From POSTs that create something new.\n- **204 No Content** - When there is no answer, ex: \"/:anAction\" or DELETE.\n- **400 Bad request** -\n  - **4000**\tBad Request Exception\n  - **11000**\tIllegal Filter Exception\n  - **12000**\tPath Param Exception\n  - **24000**   Cryptography Exception\n- **401 Unauthorized** - When authentication is required and has failed or has not yet been provided\n  -  **3000**\tAuthentication Exception\n- **403 Forbidden** - When AuthorisationManager says no.\n  -  **9000**\tSecurity Exception\n- **404 Not Found** - For content/IDs that does not exist.\n  -  **6000**\tNot Found Exception\n- **409 Conflict** - Such as an edit conflict between multiple simultaneous updates\n  -  **7000**\tObject Exists Exception\n  -  **8000**\tRevision Exception\n  - **10000**\tLocked Exception\n  - **14000**\tDuplicate entry\n- **422 Bad Request** - For Required fields or things like malformed payload.\n  - **15000**\tValue Validation Exception\n  - **16000**\tMapping Exception\n  - **17000**\tSorting Exception\n  - **18000**\tValidation Exception\n  - **21000**\tParam Exception\n  - **22000**\tInvalid JSON Exception\n  - **23000**   Result Set Too Large Exception\n- **429 Too Many Requests** - Request rate limit hit\n- **500 Internal Error** -  Unexpected condition was encountered and no more specific message is suitable\n  -  **1000**\tException",
        "version": "2.43.0",
        "title": "Tripletex API",
        "contact": {
            "name": "tripletex-api2 on GitHub",
            "url": "https://github.com/Tripletex/tripletex-api2"
        }
    },
    "host": "api.tripletex.io",
    "basePath": "/v2",
    "tags": [
        {
            "name": "travelExpense"
        },
        {
            "name": "integrationautopaymessages"
        },
        {
            "name": "invoicedetails"
        },
        {
            "name": "invoice/details"
        },
        {
            "name": "travelExpenserate"
        },
        {
            "name": "travelExpense/rate"
        },
        {
            "name": "product"
        },
        {
            "name": "projectcontrolForm"
        },
        {
            "name": "project/controlForm"
        },
        {
            "name": "tokenlogin"
        },
        {
            "name": "ledgercloseGroup"
        },
        {
            "name": "ledger/closeGroup"
        },
        {
            "name": "travelExpenseaccommodationAllowance"
        },
        {
            "name": "travelExpense/accommodationAllowance"
        },
        {
            "name": "timesheetentry"
        },
        {
            "name": "timesheet/entry"
        },
        {
            "name": "integrationmaventastatus"
        },
        {
            "name": "bankstatement"
        },
        {
            "name": "bank/statement"
        },
        {
            "name": "employeeemployment"
        },
        {
            "name": "employee/employment"
        },
        {
            "name": "travelExpenserateCategoryGroup"
        },
        {
            "name": "travelExpense/rateCategoryGroup"
        },
        {
            "name": "supplier"
        },
        {
            "name": "salarytype"
        },
        {
            "name": "salary/type"
        },
        {
            "name": "travelExpensepaymentType"
        },
        {
            "name": "travelExpense/paymentType"
        },
        {
            "name": "mobileapp"
        },
        {
            "name": "salarysettingsholiday"
        },
        {
            "name": "salary/settings/holiday"
        },
        {
            "name": "monthlyStatus"
        },
        {
            "name": "ledgeraccountingPeriod"
        },
        {
            "name": "ledger/accountingPeriod"
        },
        {
            "name": "internalscheduling"
        },
        {
            "name": "tokenconsumer"
        },
        {
            "name": "token/consumer"
        },
        {
            "name": "eventbanner"
        },
        {
            "name": "projecttask"
        },
        {
            "name": "project/task"
        },
        {
            "name": "eventnotification"
        },
        {
            "name": "employeenextOfKin"
        },
        {
            "name": "employee/nextOfKin"
        },
        {
            "name": "ledgervoucherType"
        },
        {
            "name": "ledger/voucherType"
        },
        {
            "name": "salarysettings"
        },
        {
            "name": "salary/settings"
        },
        {
            "name": "dashboard"
        },
        {
            "name": "purchaseOrder"
        },
        {
            "name": "currency"
        },
        {
            "name": "apiConsumer"
        },
        {
            "name": "employeeemploymentdetails"
        },
        {
            "name": "employee/employment/details"
        },
        {
            "name": "country"
        },
        {
            "name": "productexternal"
        },
        {
            "name": "product/external"
        },
        {
            "name": "projectprojectActivity"
        },
        {
            "name": "project/projectActivity"
        },
        {
            "name": "travelExpensecost"
        },
        {
            "name": "travelExpense/cost"
        },
        {
            "name": "ledgervatType"
        },
        {
            "name": "ledger/vatType"
        },
        {
            "name": "activity"
        },
        {
            "name": "orderorderline"
        },
        {
            "name": "order/orderline"
        },
        {
            "name": "invoice"
        },
        {
            "name": "project{id}period"
        },
        {
            "name": "project/period"
        },
        {
            "name": "project"
        },
        {
            "name": "contact"
        },
        {
            "name": "productgroup"
        },
        {
            "name": "product/group"
        },
        {
            "name": "productgroupRelation"
        },
        {
            "name": "product/groupRelation"
        },
        {
            "name": "tokenemployee"
        },
        {
            "name": "token/employee"
        },
        {
            "name": "projecthourlyRatesprojectSpecificRates"
        },
        {
            "name": "project/hourlyRates/projectSpecificRates"
        },
        {
            "name": "employeeemploymentemploymentType"
        },
        {
            "name": "employee/employment/employmentType"
        },
        {
            "name": "employeeemploymentoccupationCode"
        },
        {
            "name": "employee/employment/occupationCode"
        },
        {
            "name": "division"
        },
        {
            "name": "reminder"
        },
        {
            "name": "inventorystocktakingproductline"
        },
        {
            "name": "inventory/stocktaking/productline"
        },
        {
            "name": "travelExpensesettings"
        },
        {
            "name": "travelExpense/settings"
        },
        {
            "name": "timesheetsettings"
        },
        {
            "name": "timesheet/settings"
        },
        {
            "name": "ledgeraccount"
        },
        {
            "name": "ledger/account"
        },
        {
            "name": "event"
        },
        {
            "name": "document"
        },
        {
            "name": "employeestandardTime"
        },
        {
            "name": "employee/standardTime"
        },
        {
            "name": "invoicepaymentType"
        },
        {
            "name": "invoice/paymentType"
        },
        {
            "name": "purchaseOrderorderline"
        },
        {
            "name": "purchaseOrder/orderline"
        },
        {
            "name": "lookup"
        },
        {
            "name": "salaryspecification"
        },
        {
            "name": "crmprospect"
        },
        {
            "name": "crm/prospect"
        },
        {
            "name": "travelExpensepassenger"
        },
        {
            "name": "travelExpense/passenger"
        },
        {
            "name": "deliveryAddress"
        },
        {
            "name": "bankreconciliation"
        },
        {
            "name": "bank/reconciliation"
        },
        {
            "name": "travelExpensecostCategory"
        },
        {
            "name": "travelExpense/costCategory"
        },
        {
            "name": "employee"
        },
        {
            "name": "bankstatementtransaction"
        },
        {
            "name": "bank/statement/transaction"
        },
        {
            "name": "bankreconciliationmatch"
        },
        {
            "name": "bank/reconciliation/match"
        },
        {
            "name": "tripletexAccountsalesForceOpportunity"
        },
        {
            "name": "employeeemploymentworkingHoursScheme"
        },
        {
            "name": "employee/employment/workingHoursScheme"
        },
        {
            "name": "timesheettimeClock"
        },
        {
            "name": "timesheet/timeClock"
        },
        {
            "name": "projecthourlyRates"
        },
        {
            "name": "project/hourlyRates"
        },
        {
            "name": "order"
        },
        {
            "name": "ledgerpaymentTypeOut"
        },
        {
            "name": "ledger/paymentTypeOut"
        },
        {
            "name": "customer"
        },
        {
            "name": "tripletexAccountsalesForceEmployeeRole"
        },
        {
            "name": "integrationfactoringaprila"
        },
        {
            "name": "timesheetsalaryTypeSpecification"
        },
        {
            "name": "timesheet/salaryTypeSpecification"
        },
        {
            "name": "salarytransaction"
        },
        {
            "name": "salary/transaction"
        },
        {
            "name": "integrationpg2callback"
        },
        {
            "name": "companysalesmodules"
        },
        {
            "name": "company/salesmodules"
        },
        {
            "name": "purchaseOrdergoodsReceipt"
        },
        {
            "name": "purchaseOrder/goodsReceipt"
        },
        {
            "name": "ledgerannualAccount"
        },
        {
            "name": "ledger/annualAccount"
        },
        {
            "name": "optionspage"
        },
        {
            "name": "tripletexAccount"
        },
        {
            "name": "timesheetweek"
        },
        {
            "name": "timesheet/week"
        },
        {
            "name": "openid"
        },
        {
            "name": "productunit"
        },
        {
            "name": "product/unit"
        },
        {
            "name": "ledger"
        },
        {
            "name": "projectcategory"
        },
        {
            "name": "project/category"
        },
        {
            "name": "municipality"
        },
        {
            "name": "salarypayslip"
        },
        {
            "name": "salary/payslip"
        },
        {
            "name": "travelExpensemileageAllowance"
        },
        {
            "name": "travelExpense/mileageAllowance"
        },
        {
            "name": "employeeemploymentremunerationType"
        },
        {
            "name": "employee/employment/remunerationType"
        },
        {
            "name": "bankreconciliationpaymentType"
        },
        {
            "name": "bank/reconciliation/paymentType"
        },
        {
            "name": "employeeemploymentleaveOfAbsenceType"
        },
        {
            "name": "employee/employment/leaveOfAbsenceType"
        },
        {
            "name": "address"
        },
        {
            "name": "customercategory"
        },
        {
            "name": "customer/category"
        },
        {
            "name": "ledgervoucher"
        },
        {
            "name": "ledger/voucher"
        },
        {
            "name": "projectparticipant"
        },
        {
            "name": "project/participant"
        },
        {
            "name": "eventsubscription"
        },
        {
            "name": "event/subscription"
        },
        {
            "name": "tripletexAccountsalesForceAccountInfo"
        },
        {
            "name": "ledgerposting"
        },
        {
            "name": "ledger/posting"
        },
        {
            "name": "salarycompilation"
        },
        {
            "name": "salary/compilation"
        },
        {
            "name": "purchaseOrdergoodsReceiptLine"
        },
        {
            "name": "purchaseOrder/goodsReceiptLine"
        },
        {
            "name": "tripletexAccountsalesForceUser"
        },
        {
            "name": "employeehourlyCostAndRate"
        },
        {
            "name": "employee/hourlyCostAndRate"
        },
        {
            "name": "travelExpenseperDiemCompensation"
        },
        {
            "name": "travelExpense/perDiemCompensation"
        },
        {
            "name": "department"
        },
        {
            "name": "bank"
        },
        {
            "name": "integrationvntcstatus"
        },
        {
            "name": "employeeemploymentleaveOfAbsence"
        },
        {
            "name": "employee/employment/leaveOfAbsence"
        },
        {
            "name": "travelExpenserateCategory"
        },
        {
            "name": "travelExpense/rateCategory"
        },
        {
            "name": "companybrreg"
        },
        {
            "name": "internalsystemMessage"
        },
        {
            "name": "tokensession"
        },
        {
            "name": "token/session"
        },
        {
            "name": "inventorystocktaking"
        },
        {
            "name": "inventory/stocktaking"
        },
        {
            "name": "employeeentitlement"
        },
        {
            "name": "employee/entitlement"
        },
        {
            "name": "inventoryinventories"
        },
        {
            "name": "inventory/inventories"
        },
        {
            "name": "exceptiontest"
        },
        {
            "name": "company"
        },
        {
            "name": "documentArchive"
        },
        {
            "name": "banner"
        },
        {
            "name": "orderoffer"
        },
        {
            "name": "companysettingsaltinn"
        },
        {
            "name": "company/altinn"
        },
        {
            "name": "projectorderline"
        },
        {
            "name": "project/orderline"
        },
        {
            "name": "inventory"
        },
        {
            "name": "companymodules"
        }
    ],
    "schemes": [
        "https"
    ],
    "paths": {
        "/activity": {
            "get": {
                "tags": [
                    "activity"
                ],
                "summary": "Find activities corresponding with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "number",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isProjectActivity",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "isGeneral",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "isChargeable",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "isTask",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseActivity"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "activity"
                ],
                "summary": "Add activity.",
                "description": "",
                "operationId": "post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Activity"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperActivity"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/activity/\u003eforTimeSheet": {
            "get": {
                "tags": [
                    "activity"
                ],
                "summary": "Find applicable time sheet activities for an employee on a specific day.",
                "description": "",
                "operationId": "getForTimeSheet",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "query",
                        "description": "Project ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Employee ID. Defaults to ID of token owner.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "yyyy-MM-dd. Defaults to today.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseActivity"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/activity/list": {
            "post": {
                "tags": [
                    "activity"
                ],
                "summary": "Add multiple activities.",
                "description": "",
                "operationId": "postList",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing a list of new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Activity"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseActivity"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/activity/{id}": {
            "get": {
                "tags": [
                    "activity"
                ],
                "summary": "Find activity by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperActivity"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/bank": {
            "get": {
                "tags": [
                    "bank"
                ],
                "summary": "[BETA] Find bank corresponding with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "registerNumbers",
                        "in": "query",
                        "description": "Bank register number (four digits)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isBankReconciliationSupport",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseBank"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/bank/reconciliation": {
            "get": {
                "tags": [
                    "bank/reconciliation"
                ],
                "summary": "[BETA] Find bank reconciliation corresponding with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "accountingPeriodId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseBankReconciliation"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "bank/reconciliation"
                ],
                "summary": "[BETA] Post a bank reconciliation.",
                "description": "",
                "operationId": "post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BankReconciliation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperBankReconciliation"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/bank/reconciliation/\u003elastClosed": {
            "get": {
                "tags": [
                    "bank/reconciliation"
                ],
                "summary": "[BETA] Get last closed reconciliation by account ID.",
                "description": "",
                "operationId": "lastClosed",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "query",
                        "description": "Account ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperBankReconciliation"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/bank/reconciliation/match": {
            "get": {
                "tags": [
                    "bank/reconciliation/match"
                ],
                "summary": "[BETA] Find bank reconciliation match corresponding with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "bankReconciliationId",
                        "in": "query",
                        "description": "List of bank reconciliation IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseBankReconciliationMatch"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "bank/reconciliation/match"
                ],
                "summary": "[BETA] Create a bank reconciliation match.",
                "description": "",
                "operationId": "post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BankReconciliationMatch"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperBankReconciliationMatch"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/bank/reconciliation/match/:suggest": {
            "put": {
                "tags": [
                    "bank/reconciliation/match"
                ],
                "summary": "[BETA] Suggest matches for a bank reconciliation by ID.",
                "description": "",
                "operationId": "suggest",
                "parameters": [
                    {
                        "name": "bankReconciliationId",
                        "in": "query",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseBankReconciliationMatch"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/bank/reconciliation/match/{id}": {
            "get": {
                "tags": [
                    "bank/reconciliation/match"
                ],
                "summary": "[BETA] Get bank reconciliation match by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperBankReconciliationMatch"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "bank/reconciliation/match"
                ],
                "summary": "[BETA] Update a bank reconciliation match by ID.",
                "description": "",
                "operationId": "put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BankReconciliationMatch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperBankReconciliationMatch"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "bank/reconciliation/match"
                ],
                "summary": "[BETA] Delete a bank reconciliation match by ID.",
                "description": "",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/bank/reconciliation/paymentType": {
            "get": {
                "tags": [
                    "bank/reconciliation/paymentType"
                ],
                "summary": "[BETA] Find payment type corresponding with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseBankReconciliationPaymentType"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/bank/reconciliation/paymentType/{id}": {
            "get": {
                "tags": [
                    "bank/reconciliation/paymentType"
                ],
                "summary": "[BETA] Get payment type by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperBankReconciliationPaymentType"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/bank/reconciliation/{id}": {
            "get": {
                "tags": [
                    "bank/reconciliation"
                ],
                "summary": "[BETA] Get bank reconciliation.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperBankReconciliation"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "bank/reconciliation"
                ],
                "summary": "[BETA] Update a bank reconciliation.",
                "description": "",
                "operationId": "put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BankReconciliation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperBankReconciliation"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "bank/reconciliation"
                ],
                "summary": "[BETA] Delete bank reconciliation by ID.",
                "description": "",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/bank/reconciliation/{id}/:adjustment": {
            "put": {
                "tags": [
                    "bank/reconciliation"
                ],
                "summary": "[BETA] Add an adjustment to reconciliation by ID.",
                "description": "",
                "operationId": "adjustment",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Adjustments",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BankReconciliationAdjustment"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseBankReconciliationAdjustment"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/bank/statement": {
            "get": {
                "tags": [
                    "bank/statement"
                ],
                "summary": "[BETA] Find bank statement corresponding with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseBankStatement"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/bank/statement/import": {
            "post": {
                "tags": [
                    "bank/statement"
                ],
                "summary": "[BETA] Upload bank statement file.",
                "description": "",
                "operationId": "importBankStatement",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "bankId",
                        "in": "query",
                        "description": "Bank ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "description": "Account ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fromDate",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (from and incl.).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "toDate",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (to and excl.).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "externalId",
                        "in": "query",
                        "description": "External ID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fileFormat",
                        "in": "query",
                        "description": "File format",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "DNB_CSV",
                            "EIKA_TELEPAY",
                            "SPAREBANK1_TELEPAY",
                            "VISMA_ACCOUNT_STATEMENT",
                            "HANDELSBANKEN_TELEPAY",
                            "SPAREBANKEN_VEST_TELEPAY",
                            "NORDEA_CSV",
                            "TRANSFERWISE",
                            "SPAREBANKEN_SOR_TELEPAY",
                            "DANSKE_BANK_CSV"
                        ]
                    },
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "The bank statement file",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperBankStatement"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/bank/statement/transaction": {
            "get": {
                "tags": [
                    "bank/statement/transaction"
                ],
                "summary": "[BETA] Find bank transaction corresponding with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "bankStatementId",
                        "in": "query",
                        "description": "Bank statement ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseBankTransaction"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/bank/statement/transaction/{id}": {
            "get": {
                "tags": [
                    "bank/statement/transaction"
                ],
                "summary": "[BETA] Get bank transaction by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperBankTransaction"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/bank/statement/transaction/{id}/details": {
            "get": {
                "tags": [
                    "bank/statement/transaction"
                ],
                "summary": "[BETA] Get additional details about transaction by ID.",
                "description": "",
                "operationId": "getDetails",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperObject"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/bank/statement/{id}": {
            "get": {
                "tags": [
                    "bank/statement"
                ],
                "summary": "[BETA] Get bank statement.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperBankStatement"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "bank/statement"
                ],
                "summary": "[BETA] Delete bank statement by ID.",
                "description": "",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/company": {
            "put": {
                "tags": [
                    "company"
                ],
                "summary": "Update company information.",
                "description": "",
                "operationId": "put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Company"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperCompany"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/company/\u003ewithLoginAccess": {
            "get": {
                "tags": [
                    "company"
                ],
                "summary": "Returns client customers (with accountant/auditor relation) where the current user has login access (proxy login).",
                "description": "",
                "operationId": "getWithLoginAccess",
                "parameters": [
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseCompany"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/company/divisions": {
            "get": {
                "tags": [
                    "company"
                ],
                "summary": "[DEPRECATED] Find divisions.",
                "description": "",
                "operationId": "getDivisions",
                "parameters": [
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseCompany"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/company/salesmodules": {
            "get": {
                "tags": [
                    "company/salesmodules"
                ],
                "summary": "[BETA] Get active sales modules.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseSalesModuleDTO"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "company/salesmodules"
                ],
                "summary": "[BETA] Add (activate) a new sales module.",
                "description": "",
                "operationId": "post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SalesModuleDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperSalesModuleDTO"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/company/settings/altinn": {
            "get": {
                "tags": [
                    "company/altinn"
                ],
                "summary": "[BETA] Find Altinn id for login in company.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperAltinnCompanyModule"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "company/altinn"
                ],
                "summary": "[BETA] Update AltInn id and password.",
                "description": "",
                "operationId": "put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AltinnCompanyModule"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperAltinnCompanyModule"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/company/{id}": {
            "get": {
                "tags": [
                    "company"
                ],
                "summary": "Find company by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperCompany"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/contact": {
            "get": {
                "tags": [
                    "contact"
                ],
                "summary": "Find contacts corresponding with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "firstName",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastName",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "customerId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseContact"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "contact"
                ],
                "summary": "Create contact.",
                "description": "",
                "operationId": "post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Contact"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperContact"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/contact/{id}": {
            "get": {
                "tags": [
                    "contact"
                ],
                "summary": "Get contact by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperContact"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "contact"
                ],
                "summary": "[BETA] Update contact.",
                "description": "",
                "operationId": "put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Contact"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperContact"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/country": {
            "get": {
                "tags": [
                    "country"
                ],
                "summary": "Find countries corresponding with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseCountry"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/country/{id}": {
            "get": {
                "tags": [
                    "country"
                ],
                "summary": "Get country by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperCountry"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/crm/prospect": {
            "get": {
                "tags": [
                    "crm/prospect"
                ],
                "summary": "Find prospects corresponding with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "createdDateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "createdDateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "customerId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "salesEmployeeId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isClosed",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "closedReason",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "closedDateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "closedDateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "competitor",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "prospectType",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "projectId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "projectOfferId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProspect"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/crm/prospect/{id}": {
            "get": {
                "tags": [
                    "crm/prospect"
                ],
                "summary": "Get prospect by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProspect"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/currency": {
            "get": {
                "tags": [
                    "currency"
                ],
                "summary": "Find currencies corresponding with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "description": "Currency codes",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseCurrency"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/currency/{id}": {
            "get": {
                "tags": [
                    "currency"
                ],
                "summary": "Get currency by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperCurrency"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/currency/{id}/rate": {
            "get": {
                "tags": [
                    "currency"
                ],
                "summary": "Find currency exchange rate corresponding with sent data.",
                "description": "",
                "operationId": "getRate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Currency id",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperCurrencyExchangeRate"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/customer": {
            "get": {
                "tags": [
                    "customer"
                ],
                "summary": "Find customers corresponding with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "customerAccountNumber",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organizationNumber",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoiceEmail",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isInactive",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "accountManagerId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseCustomer"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "customer"
                ],
                "summary": "Create customer. Related customer addresses may also be created.",
                "description": "",
                "operationId": "post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Customer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperCustomer"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/customer/category": {
            "get": {
                "tags": [
                    "customer/category"
                ],
                "summary": "Find customer/supplier categories corresponding with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "number",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseCustomerCategory"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "customer/category"
                ],
                "summary": "Add new customer/supplier category.",
                "description": "",
                "operationId": "post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CustomerCategory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperCustomerCategory"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/customer/category/{id}": {
            "get": {
                "tags": [
                    "customer/category"
                ],
                "summary": "Find customer/supplier category by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperCustomerCategory"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "customer/category"
                ],
                "summary": "Update customer/supplier category.",
                "description": "",
                "operationId": "put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CustomerCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperCustomerCategory"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/customer/list": {
            "post": {
                "tags": [
                    "customer"
                ],
                "summary": "[BETA] Create multiple customers. Related supplier addresses may also be created.",
                "description": "",
                "operationId": "postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing a list of new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Customer"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseCustomer"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "customer"
                ],
                "summary": "[BETA] Update multiple customers. Addresses can also be updated.",
                "description": "",
                "operationId": "putList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing updates to object. Should have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Customer"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseCustomer"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/customer/{id}": {
            "get": {
                "tags": [
                    "customer"
                ],
                "summary": "Get customer by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperCustomer"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "customer"
                ],
                "summary": "Update customer. ",
                "description": "",
                "operationId": "put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Customer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperCustomer"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/deliveryAddress": {
            "get": {
                "tags": [
                    "deliveryAddress"
                ],
                "summary": "Find addresses corresponding with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "addressLine1",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "addressLine2",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "postalCode",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseDeliveryAddress"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/deliveryAddress/{id}": {
            "get": {
                "tags": [
                    "deliveryAddress"
                ],
                "summary": "Get address by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperDeliveryAddress"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "deliveryAddress"
                ],
                "summary": "Update address.",
                "description": "",
                "operationId": "put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DeliveryAddress"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperDeliveryAddress"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/department": {
            "get": {
                "tags": [
                    "department"
                ],
                "summary": "Find department corresponding with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "departmentNumber",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "departmentManagerId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseDepartment"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "department"
                ],
                "summary": "[BETA] Add new department.",
                "description": "",
                "operationId": "post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Department"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperDepartment"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/department/list": {
            "post": {
                "tags": [
                    "department"
                ],
                "summary": "[BETA] Register new departments.",
                "description": "",
                "operationId": "postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing a list of new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Department"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseDepartment"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "department"
                ],
                "summary": "[BETA] Update multiple departments.",
                "description": "",
                "operationId": "putList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing updates to object. Should have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Department"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseDepartment"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/department/{id}": {
            "get": {
                "tags": [
                    "department"
                ],
                "summary": "Get department by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperDepartment"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "department"
                ],
                "summary": "[BETA] Update department.",
                "description": "",
                "operationId": "put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Department"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperDepartment"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "department"
                ],
                "summary": "Delete department by ID",
                "description": "",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/division": {
            "get": {
                "tags": [
                    "division"
                ],
                "summary": "[BETA] Get divisions.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseDivision"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "division"
                ],
                "summary": "[BETA] Create division.",
                "description": "",
                "operationId": "post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Division"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperDivision"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/division/list": {
            "post": {
                "tags": [
                    "division"
                ],
                "summary": "[BETA] Create divisions.",
                "description": "",
                "operationId": "postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing a list of new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Division"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseDivision"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "division"
                ],
                "summary": "[BETA] Update multiple divisions.",
                "description": "",
                "operationId": "putList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing updates to object. Should have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Division"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseDivision"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/division/{id}": {
            "put": {
                "tags": [
                    "division"
                ],
                "summary": "[BETA] Update division information.",
                "description": "",
                "operationId": "put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Division"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperDivision"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/document/{id}": {
            "get": {
                "tags": [
                    "document"
                ],
                "summary": "[BETA] Get document by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperDocument"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/document/{id}/content": {
            "get": {
                "tags": [
                    "document"
                ],
                "summary": "[BETA] Get content of document given by ID.",
                "description": "",
                "operationId": "downloadContent",
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of document to download content from.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/documentArchive/account/{id}": {
            "get": {
                "tags": [
                    "documentArchive"
                ],
                "summary": "[BETA] Find documents archived associated with account object type.",
                "description": "",
                "operationId": "getAccount",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "periodDateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "periodDateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseDocumentArchive"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "documentArchive"
                ],
                "summary": "[BETA] Upload file to Account Document Archive.",
                "description": "",
                "operationId": "accountPost",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "The file",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperDocumentArchive"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/documentArchive/customer/{id}": {
            "get": {
                "tags": [
                    "documentArchive"
                ],
                "summary": "[BETA] Find documents archived associated with customer object type.",
                "description": "",
                "operationId": "getCustomer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "periodDateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "periodDateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseDocumentArchive"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "documentArchive"
                ],
                "summary": "[BETA] Upload file to Customer Document Archive.",
                "description": "",
                "operationId": "customerPost",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "The file",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperDocumentArchive"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/documentArchive/employee/{id}": {
            "get": {
                "tags": [
                    "documentArchive"
                ],
                "summary": "[BETA] Find documents archived associated with employee object type.",
                "description": "",
                "operationId": "getEmployee",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "periodDateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "periodDateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseDocumentArchive"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "documentArchive"
                ],
                "summary": "[BETA] Upload file to Employee Document Archive.",
                "description": "",
                "operationId": "employeePost",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "The file",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperDocumentArchive"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/documentArchive/product/{id}": {
            "get": {
                "tags": [
                    "documentArchive"
                ],
                "summary": "[BETA] Find documents archived associated with product object type.",
                "description": "",
                "operationId": "getProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "periodDateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "periodDateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseDocumentArchive"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "documentArchive"
                ],
                "summary": "[BETA] Upload file to Product Document Archive.",
                "description": "",
                "operationId": "productPost",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "The file",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperDocumentArchive"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/documentArchive/project/{id}": {
            "get": {
                "tags": [
                    "documentArchive"
                ],
                "summary": "[BETA] Find documents archived associated with project object type.",
                "description": "",
                "operationId": "getProject",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "periodDateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "periodDateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseDocumentArchive"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "documentArchive"
                ],
                "summary": "[BETA] Upload file to Project Document Archive.",
                "description": "",
                "operationId": "projectPost",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "The file",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperDocumentArchive"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/documentArchive/prospect/{id}": {
            "get": {
                "tags": [
                    "documentArchive"
                ],
                "summary": "[BETA] Find documents archived associated with prospect object type.",
                "description": "",
                "operationId": "getProspect",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "periodDateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "periodDateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseDocumentArchive"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "documentArchive"
                ],
                "summary": "[BETA] Upload file to Prospect Document Archive.",
                "description": "",
                "operationId": "prospectPost",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "The file",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperDocumentArchive"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/documentArchive/reception": {
            "post": {
                "tags": [
                    "documentArchive"
                ],
                "summary": "[BETA] Upload a file to the document archive reception. Send as multipart form.",
                "description": "",
                "operationId": "receptionPost",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "The file",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperDocumentArchive"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/documentArchive/supplier/{id}": {
            "get": {
                "tags": [
                    "documentArchive"
                ],
                "summary": "[BETA] Find documents archived associated with supplier object type.",
                "description": "",
                "operationId": "getSupplier",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "periodDateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "periodDateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseDocumentArchive"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "documentArchive"
                ],
                "summary": "[BETA] Upload file to Supplier Document Archive.",
                "description": "",
                "operationId": "supplierPost",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "The file",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperDocumentArchive"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/documentArchive/{id}": {
            "put": {
                "tags": [
                    "documentArchive"
                ],
                "summary": "[BETA] Update document archive.",
                "description": "",
                "operationId": "put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DocumentArchive"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperDocumentArchive"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "documentArchive"
                ],
                "summary": "[BETA] Delete document archive.",
                "description": "",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/employee": {
            "get": {
                "tags": [
                    "employee"
                ],
                "summary": "Find employees corresponding with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "firstName",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastName",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "employeeNumber",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "allowInformationRegistration",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "includeContacts",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "departmentId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "onlyProjectManagers",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseEmployee"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "employee"
                ],
                "summary": "[BETA] Create one employee.",
                "description": "",
                "operationId": "post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Employee"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperEmployee"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/employee/employment": {
            "get": {
                "tags": [
                    "employee/employment"
                ],
                "summary": "Find all employments for employee.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseEmployment"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "employee/employment"
                ],
                "summary": "[BETA] Create employment.",
                "description": "",
                "operationId": "post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Employment"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperEmployment"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/employee/employment/details": {
            "get": {
                "tags": [
                    "employee/employment/details"
                ],
                "summary": "[BETA] Find all employmentdetails for employment.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "employmentId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseEmploymentDetails"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "employee/employment/details"
                ],
                "summary": "[BETA] Create employment details.",
                "description": "",
                "operationId": "post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/EmploymentDetails"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperEmploymentDetails"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/employee/employment/details/{id}": {
            "get": {
                "tags": [
                    "employee/employment/details"
                ],
                "summary": "[BETA] Find employment details by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperEmploymentDetails"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "employee/employment/details"
                ],
                "summary": "[BETA] Update employment details. ",
                "description": "",
                "operationId": "put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/EmploymentDetails"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperEmploymentDetails"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/employee/employment/employmentType": {
            "get": {
                "tags": [
                    "employee/employment/employmentType"
                ],
                "summary": "[BETA] Find all employment type IDs.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseEmploymentType"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/employee/employment/employmentType/maritimeEmploymentType": {
            "get": {
                "tags": [
                    "employee/employment/employmentType"
                ],
                "summary": "[BETA] Find all maritime employment type IDs.",
                "description": "",
                "operationId": "getMaritimeEmploymentType",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "maritimeEmploymentType",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "SHIP_REGISTER",
                            "SHIP_TYPE",
                            "TRADE_AREA"
                        ]
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseEmploymentType"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/employee/employment/employmentType/salaryType": {
            "get": {
                "tags": [
                    "employee/employment/employmentType"
                ],
                "summary": "[BETA] Find all salary type IDs.",
                "description": "",
                "operationId": "getSalaryType",
                "parameters": [
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseEmploymentType"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/employee/employment/employmentType/scheduleType": {
            "get": {
                "tags": [
                    "employee/employment/employmentType"
                ],
                "summary": "[BETA] Find all schedule type IDs.",
                "description": "",
                "operationId": "getScheduleType",
                "parameters": [
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseEmploymentType"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/employee/employment/leaveOfAbsence": {
            "post": {
                "tags": [
                    "employee/employment/leaveOfAbsence"
                ],
                "summary": "[BETA] Create leave of absence.",
                "description": "",
                "operationId": "post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LeaveOfAbsence"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperLeaveOfAbsence"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/employee/employment/leaveOfAbsence/list": {
            "post": {
                "tags": [
                    "employee/employment/leaveOfAbsence"
                ],
                "summary": "[BETA] Create multiple leave of absences.",
                "description": "",
                "operationId": "postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing a list of new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LeaveOfAbsence"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseLeaveOfAbsence"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/employee/employment/leaveOfAbsence/{id}": {
            "get": {
                "tags": [
                    "employee/employment/leaveOfAbsence"
                ],
                "summary": "[BETA] Find leave of absence by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperLeaveOfAbsence"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "employee/employment/leaveOfAbsence"
                ],
                "summary": "[BETA] Update leave of absence. ",
                "description": "",
                "operationId": "put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LeaveOfAbsence"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperLeaveOfAbsence"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/employee/employment/leaveOfAbsenceType": {
            "get": {
                "tags": [
                    "employee/employment/leaveOfAbsenceType"
                ],
                "summary": "[BETA] Find all leave of absence type IDs.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseLeaveOfAbsenceType"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/employee/employment/occupationCode": {
            "get": {
                "tags": [
                    "employee/employment/occupationCode"
                ],
                "summary": "[BETA] Find all profession codes.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "nameNO",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseOccupationCode"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/employee/employment/remunerationType": {
            "get": {
                "tags": [
                    "employee/employment/remunerationType"
                ],
                "summary": "[BETA] Find all remuneration type IDs.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseRemunerationType"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/employee/employment/workingHoursScheme": {
            "get": {
                "tags": [
                    "employee/employment/workingHoursScheme"
                ],
                "summary": "[BETA] Find working hours scheme ID.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseWorkingHoursScheme"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/employee/employment/{id}": {
            "get": {
                "tags": [
                    "employee/employment"
                ],
                "summary": "Find employment by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperEmployment"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "employee/employment"
                ],
                "summary": "[BETA] Update employemnt. ",
                "description": "",
                "operationId": "put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Employment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperEmployment"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/employee/entitlement": {
            "get": {
                "tags": [
                    "employee/entitlement"
                ],
                "summary": "Find all entitlements for user.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Employee ID. Defaults to ID of token owner.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseEntitlement"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/employee/entitlement/:grantClientEntitlementsByTemplate": {
            "put": {
                "tags": [
                    "employee/entitlement"
                ],
                "summary": "[BETA] Update employee entitlements in client account.",
                "description": "",
                "operationId": "grantClientEntitlementsByTemplate",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Employee ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "customerId",
                        "in": "query",
                        "description": "Client ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "template",
                        "in": "query",
                        "description": "Template",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "NONE_PRIVILEGES",
                            "STANDARD_PRIVILEGES_ACCOUNTANT",
                            "STANDARD_PRIVILEGES_AUDITOR",
                            "ALL_PRIVILEGES",
                            "AGRO_READ_ONLY",
                            "AGRO_READ_APPROVE",
                            "AGRO_READ_WRITE",
                            "AGRO_READ_WRITE_APPROVE",
                            "MAMUT_PAYROLL_ADMIN",
                            "MAMUT_PAYROLL_CLERK",
                            "AGRO_PAYROLL_ADMIN",
                            "AGRO_PAYROLL_CLERK",
                            "AGRO_INVOICE_ADMIN",
                            "AGRO_INVOICE_CLERK"
                        ]
                    },
                    {
                        "name": "addToExisting",
                        "in": "query",
                        "description": "Add template to existing entitlements",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/employee/entitlement/:grantEntitlementsByTemplate": {
            "put": {
                "tags": [
                    "employee/entitlement"
                ],
                "summary": "[BETA] Update employee entitlements.",
                "description": "The user will only receive the entitlements which are possible with the registered user type",
                "operationId": "grantEntitlementsByTemplate",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Employee ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "template",
                        "in": "query",
                        "description": "Template",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "NONE_PRIVILEGES",
                            "ALL_PRIVILEGES",
                            "INVOICING_MANAGER",
                            "PERSONELL_MANAGER",
                            "ACCOUNTANT",
                            "AUDITOR",
                            "DEPARTMENT_LEADER",
                            "MAMUT_USER_ADMIN",
                            "MAMUT_USER"
                        ]
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/employee/entitlement/client": {
            "get": {
                "tags": [
                    "employee/entitlement"
                ],
                "summary": "[BETA] Find all entitlements at client for user.",
                "description": "",
                "operationId": "client",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Employee ID. Defaults to ID of token owner.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "customerId",
                        "in": "query",
                        "description": "Client ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseEntitlement"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/employee/entitlement/{id}": {
            "get": {
                "tags": [
                    "employee/entitlement"
                ],
                "summary": "Get entitlement by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperEntitlement"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/employee/hourlyCostAndRate": {
            "get": {
                "tags": [
                    "employee/hourlyCostAndRate"
                ],
                "summary": "Find all hourly cost and rates for employee.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Employee ID. Defaults to ID of token owner.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseHourlyCostAndRate"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "employee/hourlyCostAndRate"
                ],
                "summary": "[BETA] Create hourly cost and rate.",
                "description": "",
                "operationId": "post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/HourlyCostAndRate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperHourlyCostAndRate"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/employee/hourlyCostAndRate/{id}": {
            "get": {
                "tags": [
                    "employee/hourlyCostAndRate"
                ],
                "summary": "[BETA] Find hourly cost and rate by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperHourlyCostAndRate"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "employee/hourlyCostAndRate"
                ],
                "summary": "[BETA] Update hourly cost and rate. ",
                "description": "",
                "operationId": "put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/HourlyCostAndRate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperHourlyCostAndRate"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/employee/list": {
            "post": {
                "tags": [
                    "employee"
                ],
                "summary": "[BETA] Create several employees.",
                "description": "",
                "operationId": "postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing a list of new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Employee"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseEmployee"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/employee/nextOfKin": {
            "get": {
                "tags": [
                    "employee/nextOfKin"
                ],
                "summary": "Find all next of kin for employee.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Employee ID. Defaults to ID of token owner.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseNextOfKin"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "employee/nextOfKin"
                ],
                "summary": "[BETA] Create next of kin.",
                "description": "",
                "operationId": "post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/NextOfKin"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperNextOfKin"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/employee/nextOfKin/{id}": {
            "get": {
                "tags": [
                    "employee/nextOfKin"
                ],
                "summary": "[BETA] Find next of kin by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperNextOfKin"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "employee/nextOfKin"
                ],
                "summary": "[BETA] Update next of kin. ",
                "description": "",
                "operationId": "put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/NextOfKin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperNextOfKin"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/employee/standardTime": {
            "get": {
                "tags": [
                    "employee/standardTime"
                ],
                "summary": "[BETA] Find all standard times for employee.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Employee ID. Defaults to ID of token owner.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseStandardTime"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "employee/standardTime"
                ],
                "summary": "[BETA] Create standard time.",
                "description": "",
                "operationId": "post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/StandardTime"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperStandardTime"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/employee/standardTime/{id}": {
            "get": {
                "tags": [
                    "employee/standardTime"
                ],
                "summary": "[BETA] Find standard time by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperStandardTime"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "employee/standardTime"
                ],
                "summary": "[BETA] Update standard time. ",
                "description": "",
                "operationId": "put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/StandardTime"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperStandardTime"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/employee/{id}": {
            "get": {
                "tags": [
                    "employee"
                ],
                "summary": "Get employee by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperEmployee"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "employee"
                ],
                "summary": "Update employee.",
                "description": "",
                "operationId": "put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Employee"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperEmployee"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/event": {
            "get": {
                "tags": [
                    "event"
                ],
                "summary": "[BETA] Get all (WebHook) event keys.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperMapStringEventInfoDescription"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/event/subscription": {
            "get": {
                "tags": [
                    "event/subscription"
                ],
                "summary": "[BETA] Find all ongoing subscriptions.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseSubscription"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "event/subscription"
                ],
                "summary": "[BETA] Create a new subscription for current EmployeeToken.",
                "description": "",
                "operationId": "post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Subscription"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperSubscription"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/event/subscription/{id}": {
            "get": {
                "tags": [
                    "event/subscription"
                ],
                "summary": "[BETA] Get subscription by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperSubscription"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "event/subscription"
                ],
                "summary": "[BETA] Change a current subscription, based on id.",
                "description": "",
                "operationId": "put",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Subscription"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperSubscription"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "event/subscription"
                ],
                "summary": "[BETA] Delete the given subscription.",
                "description": "",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/event/{eventType}": {
            "get": {
                "tags": [
                    "event"
                ],
                "summary": "[BETA] Get example webhook payload",
                "description": "",
                "operationId": "example",
                "parameters": [
                    {
                        "name": "eventType",
                        "in": "path",
                        "description": "Event type, from /event endpoint",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperEventInfoDTO"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/inventory": {
            "get": {
                "tags": [
                    "inventory"
                ],
                "summary": "Find inventory corresponding with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isMainInventory",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "isInactive",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseInventory"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "inventory"
                ],
                "summary": "[BETA] Create new inventory.",
                "description": "",
                "operationId": "post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Inventory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperInventory"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/inventory/inventories": {
            "get": {
                "tags": [
                    "inventory/inventories"
                ],
                "summary": "[BETA] Find inventories corresponding with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (from and incl.).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dateTo",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (to and incl.).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "productId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseInventories"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/inventory/stocktaking": {
            "get": {
                "tags": [
                    "inventory/stocktaking"
                ],
                "summary": "[BETA] Find stocktaking corresponding with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isCompleted",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "inventoryId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseStocktaking"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "inventory/stocktaking"
                ],
                "summary": "[BETA] Create new stocktaking.",
                "description": "",
                "operationId": "post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Stocktaking"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperStocktaking"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/inventory/stocktaking/productline": {
            "get": {
                "tags": [
                    "inventory/stocktaking/productline"
                ],
                "summary": "[BETA] Find all product lines by stocktaking ID.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "stocktakingId",
                        "in": "query",
                        "description": "Equals",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProductLine"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "inventory/stocktaking/productline"
                ],
                "summary": "[BETA] Create product line. When creating several product lines, use /list for better performance.",
                "description": "",
                "operationId": "post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ProductLine"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProductLine"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/inventory/stocktaking/productline/{id}": {
            "get": {
                "tags": [
                    "inventory/stocktaking/productline"
                ],
                "summary": "[BETA] Get product line by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProductLine"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "inventory/stocktaking/productline"
                ],
                "summary": "[BETA] Update product line.",
                "description": "",
                "operationId": "put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ProductLine"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProductLine"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "inventory/stocktaking/productline"
                ],
                "summary": "[BETA] Delete product line.",
                "description": "",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/inventory/stocktaking/{id}": {
            "get": {
                "tags": [
                    "inventory/stocktaking"
                ],
                "summary": "[BETA] Get stocktaking by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperStocktaking"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "inventory/stocktaking"
                ],
                "summary": "[BETA] Update stocktaking.",
                "description": "",
                "operationId": "put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Stocktaking"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperStocktaking"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "inventory/stocktaking"
                ],
                "summary": "[BETA] Delete stocktaking.",
                "description": "",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/inventory/{id}": {
            "get": {
                "tags": [
                    "inventory"
                ],
                "summary": "Get inventory by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperInventory"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "inventory"
                ],
                "summary": "[BETA] Update inventory.",
                "description": "",
                "operationId": "put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Inventory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperInventory"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "inventory"
                ],
                "summary": "[BETA] Delete inventory.",
                "description": "",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/invoice": {
            "get": {
                "tags": [
                    "invoice"
                ],
                "summary": "Find invoices corresponding with sent data. Includes charged outgoing invoices only.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoiceDateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "invoiceDateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "invoiceNumber",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "kid",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "voucherId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "customerId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseInvoice"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "invoice"
                ],
                "summary": "Create invoice.",
                "description": "",
                "operationId": "post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    },
                    {
                        "name": "sendToCustomer",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean",
                        "default": true
                    },
                    {
                        "name": "paymentTypeId",
                        "in": "query",
                        "description": "Payment type to register prepayment of the invoice. paymentTypeId and paidAmount are optional, but both must be provided if the invoice has already been paid.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "paidAmount",
                        "in": "query",
                        "description": "Paid amount to register prepayment of the invoice, in invoice currency. paymentTypeId and paidAmount are optional, but both must be provided if the invoice has already been paid.",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperInvoice"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/invoice/details": {
            "get": {
                "tags": [
                    "invoice/details"
                ],
                "summary": "Find ProjectInvoiceDetails corresponding with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoiceDateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "invoiceDateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProjectInvoiceDetails"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/invoice/details/{id}": {
            "get": {
                "tags": [
                    "invoice/details"
                ],
                "summary": "Get ProjectInvoiceDetails by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProjectInvoiceDetails"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/invoice/paymentType": {
            "get": {
                "tags": [
                    "invoice/paymentType"
                ],
                "summary": "Find payment type corresponding with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponsePaymentType"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/invoice/paymentType/{id}": {
            "get": {
                "tags": [
                    "invoice/paymentType"
                ],
                "summary": "Get payment type by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPaymentType"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/invoice/{id}": {
            "get": {
                "tags": [
                    "invoice"
                ],
                "summary": "Get invoice by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperInvoice"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/invoice/{id}/:createCreditNote": {
            "put": {
                "tags": [
                    "invoice"
                ],
                "summary": "Creates a new Invoice representing a credit memo that nullifies the given invoice. Updates this invoice and any pre-existing inverse invoice.",
                "description": "",
                "operationId": "createCreditNote",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Invoice id",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Credit note date",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "comment",
                        "in": "query",
                        "description": "Comment",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "creditNoteEmail",
                        "in": "query",
                        "description": "The credit note will be sent electronically if this field is filled out",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperInvoice"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/invoice/{id}/:createReminder": {
            "put": {
                "tags": [
                    "invoice"
                ],
                "summary": "Create invoice reminder and sends it by the given dispatch type. Supports the reminder types SOFT_REMINDER, REMINDER and NOTICE_OF_DEBT_COLLECTION. DispatchType NETS_PRINT must have type NOTICE_OF_DEBT_COLLECTION. SMS and NETS_PRINT must be activated prior to usage in the API.",
                "description": "",
                "operationId": "createReminder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "type",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "SOFT_REMINDER",
                            "REMINDER",
                            "NOTICE_OF_DEBT_COLLECTION",
                            "DEBT_COLLECTION"
                        ]
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "yyyy-MM-dd. Defaults to today.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "includeCharge",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "includeInterest",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "dispatchType",
                        "in": "query",
                        "description": "dispatchType",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "NETS_PRINT",
                            "EMAIL",
                            "SMS"
                        ]
                    },
                    {
                        "name": "smsNumber",
                        "in": "query",
                        "description": "SMS number (must be a valid Norwegian telephone number)",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/invoice/{id}/:payment": {
            "put": {
                "tags": [
                    "invoice"
                ],
                "summary": "Update invoice. The invoice is updated with payment information. The amount is in the invoice???s currency.",
                "description": "",
                "operationId": "payment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Invoice id",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "paymentDate",
                        "in": "query",
                        "description": "Payment date",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "paymentTypeId",
                        "in": "query",
                        "description": "PaymentType id",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "paidAmount",
                        "in": "query",
                        "description": "Amount paid by customer in the company currency, typically NOK.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "paidAmountCurrency",
                        "in": "query",
                        "description": "Amount paid by customer in the invoice currency. Optional, but required for invoices in alternate currencies.",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperInvoice"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/invoice/{id}/:send": {
            "put": {
                "tags": [
                    "invoice"
                ],
                "summary": "Send invoice by ID and sendType. Optionally override email recipient.",
                "description": "",
                "operationId": "send",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "sendType",
                        "in": "query",
                        "description": "SendType",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "EMAIL",
                            "EHF",
                            "EFAKTURA",
                            "VIPPS",
                            "PAPER"
                        ]
                    },
                    {
                        "name": "overrideEmailAddress",
                        "in": "query",
                        "description": "Will override email address if sendType = EMAIL",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/invoice/{invoiceId}/pdf": {
            "get": {
                "tags": [
                    "invoice"
                ],
                "summary": "Get invoice document by invoice ID.",
                "description": "",
                "operationId": "downloadPdf",
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "name": "invoiceId",
                        "in": "path",
                        "description": "Invoice ID from which PDF is downloaded.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/ledger": {
            "get": {
                "tags": [
                    "ledger"
                ],
                "summary": "Get ledger (hovedbok).",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (from and incl.).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dateTo",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (to and excl.).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "openPostings",
                        "in": "query",
                        "description": "Deprecated",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "supplierId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "customerId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "departmentId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "projectId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "productId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseLedgerAccount"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/ledger/account": {
            "get": {
                "tags": [
                    "ledger/account"
                ],
                "summary": "Find accounts corresponding with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "number",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isBankAccount",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "isInactive",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "isApplicableForSupplierInvoice",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseAccount"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "ledger/account"
                ],
                "summary": "[BETA] Create a new account.",
                "description": "",
                "operationId": "post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Account"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperAccount"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/ledger/account/list": {
            "post": {
                "tags": [
                    "ledger/account"
                ],
                "summary": "[BETA] Create several accounts.",
                "description": "",
                "operationId": "postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing a list of new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Account"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseAccount"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "ledger/account"
                ],
                "summary": "[BETA] Update multiple accounts.",
                "description": "",
                "operationId": "putList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing updates to object. Should have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Account"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseAccount"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ledger/account"
                ],
                "summary": "[BETA] Delete multiple accounts.",
                "description": "",
                "operationId": "deleteByIds",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "ID of the elements",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/ledger/account/{id}": {
            "get": {
                "tags": [
                    "ledger/account"
                ],
                "summary": "Get account by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperAccount"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "ledger/account"
                ],
                "summary": "[BETA] Update account.",
                "description": "",
                "operationId": "put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Account"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperAccount"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ledger/account"
                ],
                "summary": "[BETA] Delete account.",
                "description": "",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/ledger/accountingPeriod": {
            "get": {
                "tags": [
                    "ledger/accountingPeriod"
                ],
                "summary": "Find accounting periods corresponding with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "numberFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "numberTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "startFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1400,
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseAccountingPeriod"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/ledger/accountingPeriod/{id}": {
            "get": {
                "tags": [
                    "ledger/accountingPeriod"
                ],
                "summary": "Get accounting period by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperAccountingPeriod"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/ledger/annualAccount": {
            "get": {
                "tags": [
                    "ledger/annualAccount"
                ],
                "summary": "Find annual accounts corresponding with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "yearFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "yearTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseAnnualAccount"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/ledger/annualAccount/{id}": {
            "get": {
                "tags": [
                    "ledger/annualAccount"
                ],
                "summary": "Get annual account by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperAnnualAccount"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/ledger/closeGroup": {
            "get": {
                "tags": [
                    "ledger/closeGroup"
                ],
                "summary": "Find close groups corresponding with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseCloseGroup"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/ledger/closeGroup/{id}": {
            "get": {
                "tags": [
                    "ledger/closeGroup"
                ],
                "summary": "Get close group by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperCloseGroup"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/ledger/openPost": {
            "get": {
                "tags": [
                    "ledger"
                ],
                "summary": "Find open posts corresponding with sent data.",
                "description": "",
                "operationId": "openPost",
                "parameters": [
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Invoice date. Format is yyyy-MM-dd (to and excl.).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "supplierId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "customerId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "departmentId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "projectId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "productId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseLedgerAccount"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/ledger/paymentTypeOut": {
            "get": {
                "tags": [
                    "ledger/paymentTypeOut"
                ],
                "summary": "[BETA] Gets payment types for outgoing payments",
                "description": "This is an API endpoint for getting payment types for outgoing payments. This is equivalent to the section \u0027Outgoing Payments\u0027 under Accounts Settings in Tripletex. These are the payment types listed in supplier invoices, vat returns, salary payments and Tax/ENI",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isInactive",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponsePaymentTypeOut"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "ledger/paymentTypeOut"
                ],
                "summary": "[BETA] Create new payment type for outgoing payments",
                "description": "",
                "operationId": "post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PaymentTypeOut"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPaymentTypeOut"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/ledger/paymentTypeOut/list": {
            "post": {
                "tags": [
                    "ledger/paymentTypeOut"
                ],
                "summary": "[BETA] Create multiple payment types for outgoing payments at once",
                "description": "",
                "operationId": "postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing a list of new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PaymentTypeOut"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponsePaymentTypeOut"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "ledger/paymentTypeOut"
                ],
                "summary": "[BETA] Update multiple payment types for outgoing payments at once",
                "description": "",
                "operationId": "putList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing updates to object. Should have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PaymentTypeOut"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponsePaymentTypeOut"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/ledger/paymentTypeOut/{id}": {
            "get": {
                "tags": [
                    "ledger/paymentTypeOut"
                ],
                "summary": "[BETA] Get payment type for outgoing payments by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPaymentTypeOut"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "ledger/paymentTypeOut"
                ],
                "summary": "[BETA] Update existing payment type for outgoing payments",
                "description": "",
                "operationId": "put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PaymentTypeOut"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPaymentTypeOut"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ledger/paymentTypeOut"
                ],
                "summary": "[BETA] Delete payment type for outgoing payments by ID.",
                "description": "",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/ledger/posting": {
            "get": {
                "tags": [
                    "ledger/posting"
                ],
                "summary": "Find postings corresponding with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (from and incl.).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dateTo",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (to and excl.).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "openPostings",
                        "in": "query",
                        "description": "Deprecated",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "supplierId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "customerId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "departmentId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "projectId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "productId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponsePosting"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/ledger/posting/openPost": {
            "get": {
                "tags": [
                    "ledger/posting"
                ],
                "summary": "Find open posts corresponding with sent data.",
                "description": "",
                "operationId": "openPost",
                "parameters": [
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Invoice date. Format is yyyy-MM-dd (to and excl.).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "supplierId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "customerId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "departmentId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "projectId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "productId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponsePosting"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/ledger/posting/{id}": {
            "get": {
                "tags": [
                    "ledger/posting"
                ],
                "summary": "Find postings by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPosting"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/ledger/vatType": {
            "get": {
                "tags": [
                    "ledger/vatType"
                ],
                "summary": "Find vat types corresponding with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "number",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseVatType"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/ledger/vatType/{id}": {
            "get": {
                "tags": [
                    "ledger/vatType"
                ],
                "summary": "Get vat type by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperVatType"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/ledger/voucher": {
            "get": {
                "tags": [
                    "ledger/voucher"
                ],
                "summary": "Find vouchers corresponding with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "number",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "numberFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "numberTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "typeId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/VoucherSearchResponse"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "ledger/voucher"
                ],
                "summary": "Add new voucher. IMPORTANT: Also creates postings. Only the gross amounts will be used",
                "description": "",
                "operationId": "post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "sendToLedger",
                        "in": "query",
                        "description": "Should the voucher be sent to ledger? Requires the \"Advanced Voucher\" permission.",
                        "required": false,
                        "type": "boolean",
                        "default": true
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Voucher"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperVoucher"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/ledger/voucher/\u003enonPosted": {
            "get": {
                "tags": [
                    "ledger/voucher"
                ],
                "summary": "[BETA] Find non-posted vouchers.",
                "description": "",
                "operationId": "nonPosted",
                "parameters": [
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "includeNonApproved",
                        "in": "query",
                        "description": "Include non-approved vouchers in the result.",
                        "required": true,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "changedSince",
                        "in": "query",
                        "description": "Only return elements that have changed since this date and time",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseVoucher"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/ledger/voucher/importDocument": {
            "post": {
                "tags": [
                    "ledger/voucher"
                ],
                "summary": "[BETA] Upload a document to create one or more vouchers. Valid document formats are PDF, PNG, JPEG, TIFF and EHF. Send as multipart form.",
                "description": "",
                "operationId": "importDocument",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "The file",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "Optional description to use for the voucher(s). If omitted the file name will be used.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "split",
                        "in": "query",
                        "description": "If the document consists of several pages, should the document be split into one voucher per page?",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseVoucher"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/ledger/voucher/importGbat10": {
            "post": {
                "tags": [
                    "ledger/voucher"
                ],
                "summary": "Import GBAT10. Send as multipart form.",
                "description": "",
                "operationId": "importGbat10",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "generateVatPostings",
                        "in": "formData",
                        "description": "If the import should generate VAT postings",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "The file",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "encoding",
                        "in": "formData",
                        "description": "The file encoding",
                        "required": false,
                        "type": "string",
                        "default": "utf-8"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/ledger/voucher/list": {
            "put": {
                "tags": [
                    "ledger/voucher"
                ],
                "summary": "[BETA] Update multiple vouchers. Postings with guiRow==0 will be deleted and regenerated.",
                "description": "",
                "operationId": "putList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "sendToLedger",
                        "in": "query",
                        "description": "Should the voucher be sent to ledger? Requires the \"Advanced Voucher\" permission.",
                        "required": false,
                        "type": "boolean",
                        "default": true
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing updates to object. Should have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Voucher"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseVoucher"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/ledger/voucher/{id}": {
            "get": {
                "tags": [
                    "ledger/voucher"
                ],
                "summary": "Get voucher by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperVoucher"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "ledger/voucher"
                ],
                "summary": "[BETA] Update voucher. Postings with guiRow==0 will be deleted and regenerated.",
                "description": "",
                "operationId": "put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "sendToLedger",
                        "in": "query",
                        "description": "Should the voucher be sent to ledger? Requires the \"Advanced Voucher\" permission.",
                        "required": false,
                        "type": "boolean",
                        "default": true
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Voucher"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperVoucher"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ledger/voucher"
                ],
                "summary": "[BETA] Delete voucher by ID.",
                "description": "",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/ledger/voucher/{id}/:reverse": {
            "put": {
                "tags": [
                    "ledger/voucher"
                ],
                "summary": "Reverses the voucher, and returns the reversed voucher. Supports reversing most voucher types, except salary transactions.",
                "description": "",
                "operationId": "reverse",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of voucher that should be reversed.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Reverse voucher date",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperVoucher"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/ledger/voucher/{id}/:sendToInbox": {
            "put": {
                "tags": [
                    "ledger/voucher"
                ],
                "summary": "[BETA] Send voucher to inbox.",
                "description": "",
                "operationId": "sendToInbox",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of voucher that should be sent to inbox.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "description": "Version of voucher that should be sent to inbox.",
                        "required": false,
                        "type": "integer",
                        "minimum": 0.0,
                        "format": "int32"
                    },
                    {
                        "name": "comment",
                        "in": "query",
                        "description": "Description of why the voucher was rejected. This parameter is only used if the approval feature is enabled.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperVoucher"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/ledger/voucher/{id}/:sendToLedger": {
            "put": {
                "tags": [
                    "ledger/voucher"
                ],
                "summary": "[BETA] Send voucher to ledger.",
                "description": "",
                "operationId": "sendToLedger",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of voucher that should be sent to ledger.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "description": "Version of voucher that should be sent to ledger.",
                        "required": false,
                        "type": "integer",
                        "minimum": 0.0,
                        "format": "int32"
                    },
                    {
                        "name": "number",
                        "in": "query",
                        "description": "Voucher number to use. If omitted or 0 the system will assign the number.",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "minimum": 0.0,
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperVoucher"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/ledger/voucher/{id}/attachment": {
            "delete": {
                "tags": [
                    "ledger/voucher"
                ],
                "summary": "[BETA] Delete attachment.",
                "description": "",
                "operationId": "deleteAttachment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of voucher containing the attachment to delete.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "description": "Version of voucher containing the attachment to delete.",
                        "required": false,
                        "type": "integer",
                        "minimum": 0.0,
                        "format": "int32"
                    },
                    {
                        "name": "sendToInbox",
                        "in": "query",
                        "description": "Should the attachment be sent to inbox rather than deleted?",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "split",
                        "in": "query",
                        "description": "If sendToInbox is true, should the attachment be split into one voucher per page?",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/ledger/voucher/{id}/options": {
            "get": {
                "tags": [
                    "ledger/voucher"
                ],
                "summary": "[BETA] Returns a data structure containing meta information about operations that are available for this voucher. Currently only implemented for DELETE: It is possible to check if the voucher is deletable.",
                "description": "",
                "operationId": "options",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperVoucherOptions"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/ledger/voucher/{voucherId}/attachment": {
            "post": {
                "tags": [
                    "ledger/voucher"
                ],
                "summary": "Upload attachment to voucher. If the voucher already has an attachment the content will be appended to the existing attachment as new PDF page(s). Valid document formats are PDF, PNG, JPEG and TIFF. Non PDF formats will be converted to PDF. Send as multipart form.",
                "description": "",
                "operationId": "uploadAttachment",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "voucherId",
                        "in": "path",
                        "description": "Voucher ID to upload attachment to.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "The file",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/ledger/voucher/{voucherId}/pdf": {
            "get": {
                "tags": [
                    "ledger/voucher"
                ],
                "summary": "Get PDF representation of voucher by ID.",
                "description": "",
                "operationId": "downloadPdf",
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "name": "voucherId",
                        "in": "path",
                        "description": "Voucher ID from which PDF is downloaded.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/ledger/voucher/{voucherId}/pdf/{fileName}": {
            "post": {
                "tags": [
                    "ledger/voucher"
                ],
                "summary": "[DEPRECATED] Use POST ledger/voucher/{voucherId}/attachment instead.",
                "description": "",
                "operationId": "uploadPdf",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "voucherId",
                        "in": "path",
                        "description": "Voucher ID to upload PDF to.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fileName",
                        "in": "path",
                        "description": "File name to store the pdf under. Will not be the same as the filename on the file returned.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "The file",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/ledger/voucherType": {
            "get": {
                "tags": [
                    "ledger/voucherType"
                ],
                "summary": "Find voucher types corresponding with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseVoucherType"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/ledger/voucherType/{id}": {
            "get": {
                "tags": [
                    "ledger/voucherType"
                ],
                "summary": "Get voucher type by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperVoucherType"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/municipality": {
            "get": {
                "tags": [
                    "municipality"
                ],
                "summary": "[BETA] Get municipalities.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "includePayrollTaxZones",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean",
                        "default": true
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseMunicipality"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/order": {
            "get": {
                "tags": [
                    "order"
                ],
                "summary": "Find orders corresponding with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "number",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "customerId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "orderDateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "orderDateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "isClosed",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "isSubscription",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseOrder"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "order"
                ],
                "summary": "Create order.",
                "description": "",
                "operationId": "post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Order"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperOrder"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/order/:invoiceMultipleOrders": {
            "put": {
                "tags": [
                    "order"
                ],
                "summary": "[BETA] Charges a single customer invoice from multiple orders. The orders must be to the same customer, currency, due date, receiver email and attn.",
                "description": "",
                "operationId": "invoiceMultipleOrders",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of Order IDs - to the same customer, separated by comma.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "invoiceDate",
                        "in": "query",
                        "description": "The invoice date",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperInvoice"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/order/orderline": {
            "post": {
                "tags": [
                    "order/orderline"
                ],
                "summary": "Create order line. When creating several order lines, use /list for better performance.",
                "description": "",
                "operationId": "post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrderLine"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperOrderLine"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/order/orderline/list": {
            "post": {
                "tags": [
                    "order/orderline"
                ],
                "summary": "Create multiple order lines.",
                "description": "",
                "operationId": "postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing a list of new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OrderLine"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseOrderLine"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/order/orderline/{id}": {
            "get": {
                "tags": [
                    "order/orderline"
                ],
                "summary": "Get order line by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperOrderLine"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "order/orderline"
                ],
                "summary": "[BETA] Delete order line by ID.",
                "description": "",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/order/{id}": {
            "get": {
                "tags": [
                    "order"
                ],
                "summary": "Get order by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperOrder"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "order"
                ],
                "summary": "Update order.",
                "description": "",
                "operationId": "put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Order"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperOrder"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/order/{id}/:approveSubscriptionInvoice": {
            "put": {
                "tags": [
                    "order"
                ],
                "summary": "To create a subscription invoice, first create a order with the subscription enabled, then approve it with this method. This approves the order for subscription invoicing.",
                "description": "",
                "operationId": "approveSubscriptionInvoice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of order to approve for subscription invoicing.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "invoiceDate",
                        "in": "query",
                        "description": "The approval date for the subscription.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperInvoice"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/order/{id}/:attach": {
            "put": {
                "tags": [
                    "order"
                ],
                "summary": "Attach document to specified order ID.",
                "description": "",
                "operationId": "attach",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "The file",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperDocumentArchive"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/order/{id}/:invoice": {
            "put": {
                "tags": [
                    "order"
                ],
                "summary": "Create new invoice from order.",
                "description": "",
                "operationId": "invoice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of order to invoice.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "invoiceDate",
                        "in": "query",
                        "description": "The invoice date",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "sendToCustomer",
                        "in": "query",
                        "description": "Send invoice to customer",
                        "required": false,
                        "type": "boolean",
                        "default": true
                    },
                    {
                        "name": "paymentTypeId",
                        "in": "query",
                        "description": "Payment type to register prepayment of the invoice. paymentTypeId and paidAmount are optional, but both must be provided if the invoice has already been paid. The payment type must be related to an account with the same currency as the invoice.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "paidAmount",
                        "in": "query",
                        "description": "Paid amount to register prepayment of the invoice, in invoice currency. paymentTypeId and paidAmount are optional, but both must be provided if the invoice has already been paid. This amount is in the invoice currency.",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperInvoice"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/order/{id}/:unApproveSubscriptionInvoice": {
            "put": {
                "tags": [
                    "order"
                ],
                "summary": "Unapproves the order for subscription invoicing.",
                "description": "",
                "operationId": "unApproveSubscriptionInvoice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of order to unapprove for subscription invoicing.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/product": {
            "get": {
                "tags": [
                    "product"
                ],
                "summary": "Find products corresponding with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "number",
                        "in": "query",
                        "description": "DEPRECATED. List of product numbers (Integer only)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "productNumber",
                        "in": "query",
                        "description": "List of valid product numbers",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ean",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isInactive",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "isStockItem",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "currencyId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "vatTypeId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "productUnitId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "departmentId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "costExcludingVatCurrencyFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "costExcludingVatCurrencyTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "priceExcludingVatCurrencyFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "priceExcludingVatCurrencyTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "priceIncludingVatCurrencyFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "priceIncludingVatCurrencyTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProduct"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "product"
                ],
                "summary": "Create new product.",
                "description": "",
                "operationId": "post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Product"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProduct"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/product/external": {
            "get": {
                "tags": [
                    "product/external"
                ],
                "summary": "[BETA] Find external products corresponding with sent data. The sorting-field is not in use on this endpoint.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "wholesaler",
                        "in": "query",
                        "description": "Wholesaler",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "AHLSELL",
                            "BROEDRENE_DAHL",
                            "ELEKTROSKANDIA",
                            "HEIDENREICH",
                            "ONNINEN",
                            "OTRA",
                            "SOLAR",
                            "BERGAARD_AMUNDSEN",
                            "BERGAARD_AMUNDSEN_STAVANGER",
                            "SORLANDET_ELEKTRO",
                            "ETMAN_DISTRIBUSJON",
                            "ETM_OST",
                            "CENIKA",
                            "EP_ENGROS",
                            "BETEK",
                            "DGROUP",
                            "FAGERHULT",
                            "GLAMOX",
                            "SCHNEIDER",
                            "STOKKAN",
                            "WURTH",
                            "ELEKTROIMPORTOEREN",
                            "THERMOFLOOR",
                            "LYSKOMPONENTER",
                            "NORDESIGN"
                        ]
                    },
                    {
                        "name": "organizationNumber",
                        "in": "query",
                        "description": "Wholesaler organization number. Mandatory if Wholesaler is not selected. If Wholesaler is selected, this field is ignored.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "elNumber",
                        "in": "query",
                        "description": "List of valid el numbers",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "nrfNumber",
                        "in": "query",
                        "description": "List of valid nrf numbers",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isInactive",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseExternalProduct"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/product/external/{id}": {
            "get": {
                "tags": [
                    "product/external"
                ],
                "summary": "[BETA] Get external product by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperExternalProduct"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/product/group": {
            "get": {
                "tags": [
                    "product/group"
                ],
                "summary": "[BETA] Find product group with sent data",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProductGroup"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "product/group"
                ],
                "summary": "[BETA] Create new product group.",
                "description": "",
                "operationId": "post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ProductGroup"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProductGroup"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/product/group/list": {
            "post": {
                "tags": [
                    "product/group"
                ],
                "summary": "[BETA] Add multiple products groups.",
                "description": "",
                "operationId": "postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing a list of new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProductGroup"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProductGroup"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "product/group"
                ],
                "summary": "[BETA] Update a list of product groups.",
                "description": "",
                "operationId": "putList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing updates to object. Should have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProductGroup"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProductGroup"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "product/group"
                ],
                "summary": "[BETA] Delete multiple product groups.",
                "description": "",
                "operationId": "deleteByIds",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "ID of the elements",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/product/group/{id}": {
            "get": {
                "tags": [
                    "product/group"
                ],
                "summary": "[BETA] Find product group by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProductGroup"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "product/group"
                ],
                "summary": "[BETA] Update product group.",
                "description": "",
                "operationId": "put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ProductGroup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProductGroup"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "product/group"
                ],
                "summary": "[BETA] Delete product group.",
                "description": "",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/product/groupRelation": {
            "get": {
                "tags": [
                    "product/groupRelation"
                ],
                "summary": "[BETA] Find product group relation with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "productId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "productGroupId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProductGroupRelation"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "product/groupRelation"
                ],
                "summary": "[BETA] Create new product group relation.",
                "description": "",
                "operationId": "post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ProductGroupRelation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProductGroupRelation"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/product/groupRelation/list": {
            "post": {
                "tags": [
                    "product/groupRelation"
                ],
                "summary": "[BETA] Add multiple products group relations.",
                "description": "",
                "operationId": "postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing a list of new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProductGroupRelation"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProductGroupRelation"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "product/groupRelation"
                ],
                "summary": "[BETA] Delete multiple product group relations.",
                "description": "",
                "operationId": "deleteByIds",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "ID of the elements",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/product/groupRelation/{id}": {
            "get": {
                "tags": [
                    "product/groupRelation"
                ],
                "summary": "[BETA] Find product group relation by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProductGroupRelation"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "product/groupRelation"
                ],
                "summary": "[BETA] Delete product group relation.",
                "description": "",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/product/list": {
            "post": {
                "tags": [
                    "product"
                ],
                "summary": "[BETA] Add multiple products.",
                "description": "",
                "operationId": "postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing a list of new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Product"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProduct"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "product"
                ],
                "summary": "[BETA] Update a list of products.",
                "description": "",
                "operationId": "putList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing updates to object. Should have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Product"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProduct"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/product/unit": {
            "get": {
                "tags": [
                    "product/unit"
                ],
                "summary": "Find product units corresponding with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Names",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "nameShort",
                        "in": "query",
                        "description": "Short names",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "commonCode",
                        "in": "query",
                        "description": "Common codes",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProductUnit"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/product/unit/{id}": {
            "get": {
                "tags": [
                    "product/unit"
                ],
                "summary": "Get product unit by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProductUnit"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/product/{id}": {
            "get": {
                "tags": [
                    "product"
                ],
                "summary": "Get product by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProduct"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "product"
                ],
                "summary": "Update product.",
                "description": "",
                "operationId": "put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Product"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProduct"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/project": {
            "get": {
                "tags": [
                    "project"
                ],
                "summary": "Find projects corresponding with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "number",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isOffer",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "projectManagerId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "employeeInProjectId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "departmentId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startDateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startDateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endDateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endDateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isClosed",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "customerId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "externalAccountsNumber",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProject"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "project"
                ],
                "summary": "[BETA] Add new project.",
                "description": "",
                "operationId": "post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Project"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProject"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "project"
                ],
                "summary": "[BETA] Delete multiple projects.",
                "description": "",
                "operationId": "deleteList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing objects to delete. Should have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Project"
                            }
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/project/\u003eforTimeSheet": {
            "get": {
                "tags": [
                    "project"
                ],
                "summary": "Find projects applicable for time sheet registration on a specific day.",
                "description": "",
                "operationId": "getForTimeSheet",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Employee ID. Defaults to ID of token owner.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "yyyy-MM-dd. Defaults to today.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProject"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/project/category": {
            "get": {
                "tags": [
                    "project/category"
                ],
                "summary": "Find project categories corresponding with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "number",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProjectCategory"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "project/category"
                ],
                "summary": "Add new project category.",
                "description": "",
                "operationId": "post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ProjectCategory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProjectCategory"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/project/category/{id}": {
            "get": {
                "tags": [
                    "project/category"
                ],
                "summary": "Find project category by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProjectCategory"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "project/category"
                ],
                "summary": "Update project category.",
                "description": "",
                "operationId": "put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ProjectCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProjectCategory"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/project/controlForm": {
            "get": {
                "tags": [
                    "project/controlForm"
                ],
                "summary": "[BETA] Get project control forms by project ID.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "query",
                        "description": "Project ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProjectControlForm"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/project/controlForm/{id}": {
            "get": {
                "tags": [
                    "project/controlForm"
                ],
                "summary": "[BETA] Get project control form by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProjectControlForm"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/project/hourlyRates": {
            "get": {
                "tags": [
                    "project/hourlyRates"
                ],
                "summary": "Find project hourly rates corresponding with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "projectId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "TYPE_PREDEFINED_HOURLY_RATES",
                            "TYPE_PROJECT_SPECIFIC_HOURLY_RATES",
                            "TYPE_FIXED_HOURLY_RATE"
                        ]
                    },
                    {
                        "name": "startDateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startDateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "showInProjectOrder",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProjectHourlyRate"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "project/hourlyRates"
                ],
                "summary": "Create a project hourly rate. ",
                "description": "",
                "operationId": "post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ProjectHourlyRate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProjectHourlyRate"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/project/hourlyRates/list": {
            "post": {
                "tags": [
                    "project/hourlyRates"
                ],
                "summary": "Create multiple project hourly rates.",
                "description": "",
                "operationId": "postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing a list of new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProjectHourlyRate"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProjectHourlyRate"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "project/hourlyRates"
                ],
                "summary": "Update multiple project hourly rates.",
                "description": "",
                "operationId": "putList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing updates to object. Should have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProjectHourlyRate"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProjectHourlyRate"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "project/hourlyRates"
                ],
                "summary": "Delete project hourly rates.",
                "description": "",
                "operationId": "deleteByIds",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "ID of the elements",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/project/hourlyRates/projectSpecificRates": {
            "get": {
                "tags": [
                    "project/hourlyRates/projectSpecificRates"
                ],
                "summary": "Find project specific rates corresponding with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "projectHourlyRateId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "activityId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProjectSpecificRate"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "project/hourlyRates/projectSpecificRates"
                ],
                "summary": "Create new project specific rate. ",
                "description": "",
                "operationId": "post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ProjectSpecificRate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProjectSpecificRate"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/project/hourlyRates/projectSpecificRates/list": {
            "post": {
                "tags": [
                    "project/hourlyRates/projectSpecificRates"
                ],
                "summary": "Create multiple new project specific rates.",
                "description": "",
                "operationId": "postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing a list of new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProjectSpecificRate"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProjectSpecificRate"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "project/hourlyRates/projectSpecificRates"
                ],
                "summary": "Update multiple project specific rates.",
                "description": "",
                "operationId": "putList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing updates to object. Should have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProjectSpecificRate"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProjectSpecificRate"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "project/hourlyRates/projectSpecificRates"
                ],
                "summary": "Delete project specific rates.",
                "description": "",
                "operationId": "deleteByIds",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "ID of the elements",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/project/hourlyRates/projectSpecificRates/{id}": {
            "get": {
                "tags": [
                    "project/hourlyRates/projectSpecificRates"
                ],
                "summary": "Find project specific rate by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProjectSpecificRate"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "project/hourlyRates/projectSpecificRates"
                ],
                "summary": "Update a project specific rate.",
                "description": "",
                "operationId": "put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ProjectSpecificRate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProjectSpecificRate"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "project/hourlyRates/projectSpecificRates"
                ],
                "summary": "Delete project specific rate ",
                "description": "",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/project/hourlyRates/{id}": {
            "get": {
                "tags": [
                    "project/hourlyRates"
                ],
                "summary": "Find project hourly rate by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProjectHourlyRate"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "project/hourlyRates"
                ],
                "summary": "Update a project hourly rate.",
                "description": "",
                "operationId": "put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ProjectHourlyRate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProjectHourlyRate"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "project/hourlyRates"
                ],
                "summary": "Delete Project Hourly Rate ",
                "description": "",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/project/list": {
            "post": {
                "tags": [
                    "project"
                ],
                "summary": "[BETA] Register new projects. Multiple projects for different users can be sent in the same request.",
                "description": "",
                "operationId": "postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing a list of new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Project"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProject"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "project"
                ],
                "summary": "[BETA] Update multiple projects.",
                "description": "",
                "operationId": "putList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing updates to object. Should have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Project"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProject"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "project"
                ],
                "summary": "[BETA] Delete projects.",
                "description": "",
                "operationId": "deleteByIds",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "ID of the elements",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/project/orderline": {
            "get": {
                "tags": [
                    "project/orderline"
                ],
                "summary": "[BETA] Find all order lines for project.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "query",
                        "description": "Equals",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProjectOrderLine"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "project/orderline"
                ],
                "summary": "[BETA] Create order line. When creating several order lines, use /list for better performance.",
                "description": "",
                "operationId": "post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ProjectOrderLine"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProjectOrderLine"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/project/orderline/list": {
            "post": {
                "tags": [
                    "project/orderline"
                ],
                "summary": "[BETA] Create multiple order lines.",
                "description": "",
                "operationId": "postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing a list of new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProjectOrderLine"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProjectOrderLine"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/project/orderline/{id}": {
            "get": {
                "tags": [
                    "project/orderline"
                ],
                "summary": "[BETA] Get order line by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProjectOrderLine"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "project/orderline"
                ],
                "summary": "[BETA] Update project orderline.",
                "description": "",
                "operationId": "put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ProjectOrderLine"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProjectOrderLine"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "project/orderline"
                ],
                "summary": "Delete order line by ID.",
                "description": "",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/project/participant": {
            "post": {
                "tags": [
                    "project/participant"
                ],
                "summary": "[BETA] Add new project participant.",
                "description": "",
                "operationId": "post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ProjectParticipant"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProjectParticipant"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/project/participant/list": {
            "post": {
                "tags": [
                    "project/participant"
                ],
                "summary": "[BETA] Add new project participant. Multiple project participants can be sent in the same request.",
                "description": "",
                "operationId": "postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing a list of new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProjectParticipant"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProjectParticipant"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "project/participant"
                ],
                "summary": "[BETA] Delete project participants.",
                "description": "",
                "operationId": "deleteByIds",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "ID of the elements",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/project/participant/{id}": {
            "get": {
                "tags": [
                    "project/participant"
                ],
                "summary": "[BETA] Find project participant by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProjectParticipant"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "project/participant"
                ],
                "summary": "[BETA] Update project participant.",
                "description": "",
                "operationId": "put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ProjectParticipant"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProjectParticipant"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/project/projectActivity": {
            "post": {
                "tags": [
                    "project/projectActivity"
                ],
                "summary": "Add project activity.",
                "description": "",
                "operationId": "post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ProjectActivity"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProjectActivity"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/project/projectActivity/list": {
            "delete": {
                "tags": [
                    "project/projectActivity"
                ],
                "summary": "Delete project activities",
                "description": "",
                "operationId": "deleteByIds",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "ID of the elements",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/project/projectActivity/{id}": {
            "get": {
                "tags": [
                    "project/projectActivity"
                ],
                "summary": "Find project activity by id",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProjectActivity"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "project/projectActivity"
                ],
                "summary": "Delete project activity",
                "description": "",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/project/task": {
            "get": {
                "tags": [
                    "project/task"
                ],
                "summary": "Find all tasks for project.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseTask"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/project/{id}": {
            "get": {
                "tags": [
                    "project"
                ],
                "summary": "Find project by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProject"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "project"
                ],
                "summary": "[BETA] Update project.",
                "description": "",
                "operationId": "put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Project"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProject"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "project"
                ],
                "summary": "[BETA] Delete project.",
                "description": "",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/project/{id}/period/hourlistReport": {
            "get": {
                "tags": [
                    "project/period"
                ],
                "summary": "Find hourlist report by project period.",
                "description": "",
                "operationId": "hourlistReport",
                "parameters": [
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (from and incl.).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dateTo",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (to and excl.).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProjectPeriodHourlyReport"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/project/{id}/period/invoiced": {
            "get": {
                "tags": [
                    "project/period"
                ],
                "summary": "Find invoiced info by project period.",
                "description": "",
                "operationId": "invoiced",
                "parameters": [
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (from and incl.).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dateTo",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (to and excl.).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProjectPeriodInvoiced"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/project/{id}/period/invoicingReserve": {
            "get": {
                "tags": [
                    "project/period"
                ],
                "summary": "Find invoicing reserve by project period.",
                "description": "",
                "operationId": "invoicingReserve",
                "parameters": [
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (from and incl.).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dateTo",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (to and excl.).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProjectPeriodInvoicingReserve"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/project/{id}/period/monthlyStatus": {
            "get": {
                "tags": [
                    "project/period"
                ],
                "summary": "Find overall status by project period.",
                "description": "",
                "operationId": "monthlyStatus",
                "parameters": [
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (from and incl.).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dateTo",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (to and excl.).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProjectPeriodMonthlyStatus"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/project/{id}/period/overallStatus": {
            "get": {
                "tags": [
                    "project/period"
                ],
                "summary": "Find overall status by project period.",
                "description": "",
                "operationId": "overallStatus",
                "parameters": [
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (from and incl.).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dateTo",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (to and excl.).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProjectPeriodOverallStatus"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/purchaseOrder": {
            "get": {
                "tags": [
                    "purchaseOrder"
                ],
                "summary": "[BETA] Find purchase orders with send data",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "number",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "deliveryDateFrom",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (from and incl.).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "deliveryDateTo",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (to and incl.).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "creationDateFrom",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (from and incl.).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "creationDateTo",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (to and incl.).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "supplierId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "projectId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isClosed",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponsePurchaseOrder"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "purchaseOrder"
                ],
                "summary": "[BETA] Creates a new purchase order",
                "description": "",
                "operationId": "post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PurchaseOrder"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPurchaseOrder"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/purchaseOrder/goodsReceipt": {
            "get": {
                "tags": [
                    "purchaseOrder/goodsReceipt"
                ],
                "summary": "[BETA] Get goods receipt. Only available for users that have activated the Logistics Pluss Beta-program in \u0027Our customer account\u0027",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "receivedDateFrom",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (from and incl.).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "receivedDateTo",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (to and incl.).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "STATUS_OPEN",
                            "STATUS_CONFIRMED"
                        ]
                    },
                    {
                        "name": "withoutPurchase",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseGoodsReceipt"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "purchaseOrder/goodsReceipt"
                ],
                "summary": "[BETA] Register goods receipt without an existing purchase order. When registration of several goods receipt, use /list for better performance. Only available for users that have activated the Logistics Pluss Beta-program in \u0027Our customer account\u0027",
                "description": "",
                "operationId": "post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/GoodsReceipt"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperGoodsReceipt"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/purchaseOrder/goodsReceipt/list": {
            "post": {
                "tags": [
                    "purchaseOrder/goodsReceipt"
                ],
                "summary": "[BETA] Register multiple goods receipt without an existing purchase order. Only available for users that have activated the Logistics Pluss Beta-program in \u0027Our customer account\u0027",
                "description": "",
                "operationId": "postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing a list of new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GoodsReceipt"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseGoodsReceipt"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "purchaseOrder/goodsReceipt"
                ],
                "summary": "[BETA] Delete multiple goods receipt by ID. Only available for users that have activated the Logistics Pluss Beta-program in \u0027Our customer account\u0027",
                "description": "",
                "operationId": "deleteByIds",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "ID of the elements",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/purchaseOrder/goodsReceipt/{id}": {
            "get": {
                "tags": [
                    "purchaseOrder/goodsReceipt"
                ],
                "summary": "[BETA] Get goods receipt by purchase order ID. Only available for users that have activated the Logistics Pluss Beta-program in \u0027Our customer account\u0027",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperGoodsReceipt"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "purchaseOrder/goodsReceipt"
                ],
                "summary": "[BETA] Update goods receipt. Only available for users that have activated the Logistics Pluss Beta-program in \u0027Our customer account\u0027",
                "description": "",
                "operationId": "put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Goods Receipt ID.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/GoodsReceipt"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperGoodsReceipt"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "purchaseOrder/goodsReceipt"
                ],
                "summary": "[BETA] Delete goods receipt by ID. Only available for users that have activated the Logistics Pluss Beta-program in \u0027Our customer account\u0027",
                "description": "",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/purchaseOrder/goodsReceipt/{id}/:confirm": {
            "put": {
                "tags": [
                    "purchaseOrder/goodsReceipt"
                ],
                "summary": "[BETA] Confirm goods receipt. Only available for users that have activated the Logistics Pluss Beta-program in \u0027Our customer account\u0027",
                "description": "",
                "operationId": "confirm",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Purchase Order ID.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "createRestOrder",
                        "in": "query",
                        "description": "Create restorder if quantity received is less than ordered",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPurchaseOrder"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/purchaseOrder/goodsReceipt/{id}/:receiveAndConfirm": {
            "put": {
                "tags": [
                    "purchaseOrder/goodsReceipt"
                ],
                "summary": "[BETA]  Receive all ordered products and approve goods receipt. Only available for users that have activated the Logistics/Logistics Pluss Beta-program in \u0027Our customer account\u0027",
                "description": "",
                "operationId": "receiveAndConfirm",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Purchase Order ID.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "receivedDate",
                        "in": "query",
                        "description": "The approval date for the subscription.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "inventoryId",
                        "in": "query",
                        "description": "ID of inventory. Main inventory is set as default",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPurchaseOrder"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/purchaseOrder/goodsReceipt/{id}/:registerGoodsReceipt": {
            "put": {
                "tags": [
                    "purchaseOrder/goodsReceipt"
                ],
                "summary": "[BETA] Register goods receipt. Quantity received on the products is set to the same as quantity ordered. To update the quantity received, use PUT /purchaseOrder/goodsReceiptLine/{id}. Only available for users that have activated the Logistics Pluss Beta-program in \u0027Our customer account\u0027",
                "description": "",
                "operationId": "registerGoodsReceipt",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Purchase Order ID.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "registrationDate",
                        "in": "query",
                        "description": "yyyy-MM-dd. Defaults to today.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "inventoryId",
                        "in": "query",
                        "description": "ID of inventory. Main inventory is set as default",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperGoodsReceipt"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/purchaseOrder/goodsReceiptLine": {
            "get": {
                "tags": [
                    "purchaseOrder/goodsReceiptLine"
                ],
                "summary": "[BETA] Find goods receipt lines for purchase order. Only available for users that have activated the Logistics Pluss Beta-program in \u0027Our customer account\u0027",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "purchaseOrderId",
                        "in": "query",
                        "description": "Equals",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseGoodsReceiptLine"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "purchaseOrder/goodsReceiptLine"
                ],
                "summary": "[BETA] Register new goods receipt; new product on an existing purchase order. When registration of several goods receipt, use /list for better performance. Only available for users that have activated the Logistics Pluss Beta-program in \u0027Our customer account\u0027",
                "description": "",
                "operationId": "post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/GoodsReceiptLine"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperGoodsReceiptLine"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/purchaseOrder/goodsReceiptLine/list": {
            "post": {
                "tags": [
                    "purchaseOrder/goodsReceiptLine"
                ],
                "summary": "[BETA] Register multiple new goods receipt on an existing purchase order. Only available for users that have activated the Logistics Pluss Beta-program in \u0027Our customer account\u0027",
                "description": "",
                "operationId": "postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing a list of new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GoodsReceiptLine"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseGoodsReceiptLine"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/purchaseOrder/goodsReceiptLine/{id}": {
            "get": {
                "tags": [
                    "purchaseOrder/goodsReceiptLine"
                ],
                "summary": "[BETA] Get goods receipt line by purchase order line ID. Only available for users that have activated the Logistics Pluss Beta-program in \u0027Our customer account\u0027",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperGoodsReceiptLine"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "purchaseOrder/goodsReceiptLine"
                ],
                "summary": "[BETA] Enter goods receipt on purchase order line. Only available for users that have activated the Logistics Pluss Beta-program in \u0027Our customer account\u0027",
                "description": "",
                "operationId": "put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Purchase Order Line ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/GoodsReceiptLine"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperGoodsReceiptLine"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "purchaseOrder/goodsReceiptLine"
                ],
                "summary": "[BETA] Delete goods receipt line by ID. Only available for users that have activated the Logistics Pluss Beta-program in \u0027Our customer account\u0027",
                "description": "",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/purchaseOrder/orderline": {
            "post": {
                "tags": [
                    "purchaseOrder/orderline"
                ],
                "summary": " [BETA] Creates purchase order line.",
                "description": "",
                "operationId": "post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PurchaseOrderline"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPurchaseOrderline"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/purchaseOrder/orderline/{id}": {
            "get": {
                "tags": [
                    "purchaseOrder/orderline"
                ],
                "summary": " [BETA] Find purchase order line by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPurchaseOrderline"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "purchaseOrder/orderline"
                ],
                "summary": " [BETA] Updates purchase order line",
                "description": "",
                "operationId": "put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PurchaseOrderline"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPurchaseOrderline"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "purchaseOrder/orderline"
                ],
                "summary": " [BETA] Delete purchase order line.",
                "description": "",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/purchaseOrder/{id}": {
            "get": {
                "tags": [
                    "purchaseOrder"
                ],
                "summary": " [BETA] Find purchase order by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPurchaseOrder"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "purchaseOrder"
                ],
                "summary": " [BETA] Update purchase order.",
                "description": "",
                "operationId": "put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PurchaseOrder"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPurchaseOrder"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "purchaseOrder"
                ],
                "summary": " [BETA] Delete purchase order.",
                "description": "",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/purchaseOrder/{id}/:send": {
            "put": {
                "tags": [
                    "purchaseOrder"
                ],
                "summary": "[BETA] Send purchase order by id and sendType.",
                "description": "",
                "operationId": "send",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "sendType",
                        "in": "query",
                        "description": "SendType",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "EMAIL",
                            "FTP"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPurchaseOrder"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/purchaseOrder/{id}/:sendByEmail": {
            "put": {
                "tags": [
                    "purchaseOrder"
                ],
                "summary": "[BETA] Send purchase order by customisable email.",
                "description": "",
                "operationId": "sendByEmail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "emailAddress",
                        "in": "query",
                        "description": "Email address",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "subject",
                        "in": "query",
                        "description": "Subject",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "message",
                        "in": "query",
                        "description": "Message",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPurchaseOrder"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/reminder": {
            "get": {
                "tags": [
                    "reminder"
                ],
                "summary": "Find reminders corresponding with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "termOfPaymentTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "termOfPaymentFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoiceId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "customerId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseReminder"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/reminder/{id}": {
            "get": {
                "tags": [
                    "reminder"
                ],
                "summary": "Get reminder by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperReminder"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/salary/compilation": {
            "get": {
                "tags": [
                    "salary/compilation"
                ],
                "summary": "[BETA] Find salary compilation by employee.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "Must be between 1900-2100. Defaults to previous year.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperSalaryCompilation"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/salary/compilation/pdf": {
            "get": {
                "tags": [
                    "salary/compilation"
                ],
                "summary": "[BETA] Find salary compilation (PDF document) by employee.",
                "description": "",
                "operationId": "downloadPdf",
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "Must be between 1900-2100. Defaults to previous year.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/salary/payslip": {
            "get": {
                "tags": [
                    "salary/payslip"
                ],
                "summary": "[BETA] Find payslips corresponding with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "wageTransactionId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "activityId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "yearFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "yearTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "monthFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "monthTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "voucherDateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "voucherDateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "comment",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponsePayslip"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/salary/payslip/{id}": {
            "get": {
                "tags": [
                    "salary/payslip"
                ],
                "summary": "[BETA] Find payslip by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPayslip"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/salary/payslip/{id}/pdf": {
            "get": {
                "tags": [
                    "salary/payslip"
                ],
                "summary": "[BETA] Find payslip (PDF document) by ID.",
                "description": "",
                "operationId": "downloadPdf",
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/salary/settings": {
            "get": {
                "tags": [
                    "salary/settings"
                ],
                "summary": "[BETA] Get salary settings of logged in company.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperSalarySettings"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "salary/settings"
                ],
                "summary": "[BETA] Update settings of logged in company.",
                "description": "",
                "operationId": "put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SalarySettings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperSalarySettings"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/salary/settings/holiday": {
            "get": {
                "tags": [
                    "salary/settings/holiday"
                ],
                "summary": "[BETA] Find holiday settings of current logged in company.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseCompanyHoliday"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "salary/settings/holiday"
                ],
                "summary": "[BETA] Create a holiday setting of current logged in company.",
                "description": "",
                "operationId": "post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CompanyHoliday"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperCompanyHoliday"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/salary/settings/holiday/list": {
            "post": {
                "tags": [
                    "salary/settings/holiday"
                ],
                "summary": "[BETA] Create multiple holiday settings of current logged in company.",
                "description": "",
                "operationId": "postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing a list of new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CompanyHoliday"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseCompanyHoliday"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "salary/settings/holiday"
                ],
                "summary": "[BETA] update multiple holiday settings of current logged in company.",
                "description": "",
                "operationId": "putList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing updates to object. Should have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CompanyHoliday"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseCompanyHoliday"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "salary/settings/holiday"
                ],
                "summary": "[BETA] delete multiple holiday settings of current logged in company.",
                "description": "",
                "operationId": "deleteByIds",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "ID of the elements",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/salary/settings/holiday/{id}": {
            "put": {
                "tags": [
                    "salary/settings/holiday"
                ],
                "summary": "[BETA] update a holiday setting of current logged in company.",
                "description": "",
                "operationId": "put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CompanyHoliday"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperCompanyHoliday"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/salary/transaction": {
            "post": {
                "tags": [
                    "salary/transaction"
                ],
                "summary": "[BETA] Create a new salary transaction.",
                "description": "",
                "operationId": "post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SalaryTransaction"
                        }
                    },
                    {
                        "name": "generateTaxDeduction",
                        "in": "query",
                        "description": "Generate tax deduction",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperSalaryTransaction"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/salary/transaction/{id}": {
            "get": {
                "tags": [
                    "salary/transaction"
                ],
                "summary": "[BETA] Find salary transaction by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperSalaryTransaction"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "salary/transaction"
                ],
                "summary": "[BETA] Delete salary transaction by ID.",
                "description": "",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/salary/type": {
            "get": {
                "tags": [
                    "salary/type"
                ],
                "summary": "[BETA] Find salary type corresponding with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "number",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "showInTimesheet",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseSalaryType"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/salary/type/{id}": {
            "get": {
                "tags": [
                    "salary/type"
                ],
                "summary": "[BETA] Find salary type by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperSalaryType"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/supplier": {
            "get": {
                "tags": [
                    "supplier"
                ],
                "summary": "Find suppliers corresponding with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "supplierNumber",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organizationNumber",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoiceEmail",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isInactive",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "accountManagerId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "changedSince",
                        "in": "query",
                        "description": "Only return elements that have changed since this date and time",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isWholesaler",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "showProducts",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseSupplier"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "supplier"
                ],
                "summary": "Create supplier. Related supplier addresses may also be created.",
                "description": "",
                "operationId": "post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Supplier"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperSupplier"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/supplier/list": {
            "post": {
                "tags": [
                    "supplier"
                ],
                "summary": "[BETA] Create multiple suppliers. Related supplier addresses may also be created.",
                "description": "",
                "operationId": "postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing a list of new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Supplier"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseSupplier"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "supplier"
                ],
                "summary": "[BETA] Update multiple suppliers. Addresses can also be updated.",
                "description": "",
                "operationId": "putList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing updates to object. Should have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Supplier"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseSupplier"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/supplier/{id}": {
            "get": {
                "tags": [
                    "supplier"
                ],
                "summary": "Get supplier by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperSupplier"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "supplier"
                ],
                "summary": "Update supplier. ",
                "description": "",
                "operationId": "put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Supplier"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperSupplier"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/timesheet/entry": {
            "get": {
                "tags": [
                    "timesheet/entry"
                ],
                "summary": "Find timesheet entry corresponding with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "projectId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "activityId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "comment",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/TimesheetEntrySearchResponse"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "timesheet/entry"
                ],
                "summary": "Add new timesheet entry. Only one entry per employee/date/activity/project combination is supported.",
                "description": "",
                "operationId": "post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TimesheetEntry"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTimesheetEntry"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/timesheet/entry/\u003erecentActivities": {
            "get": {
                "tags": [
                    "timesheet/entry"
                ],
                "summary": "Find recently used timesheet activities.",
                "description": "",
                "operationId": "getRecentActivities",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "ID of employee to find activities for. Defaults to ID of token owner.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "projectId",
                        "in": "query",
                        "description": "ID of project to find activities for",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseActivity"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/timesheet/entry/\u003erecentProjects": {
            "get": {
                "tags": [
                    "timesheet/entry"
                ],
                "summary": "Find projects with recent activities (timesheet entry registered).",
                "description": "",
                "operationId": "getRecentProjects",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "ID of employee with recent project hours Defaults to ID of token owner.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProject"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/timesheet/entry/\u003etotalHours": {
            "get": {
                "tags": [
                    "timesheet/entry"
                ],
                "summary": "Find total hours registered on an employee in a specific period.",
                "description": "",
                "operationId": "getTotalHours",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "ID of employee to find hours for. Defaults to ID of token owner.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (from and incl.). Defaults to today.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (to and excl.). Defaults to tomorrow.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperDouble"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/timesheet/entry/list": {
            "post": {
                "tags": [
                    "timesheet/entry"
                ],
                "summary": "Add new timesheet entry. Multiple objects for several users can be sent in the same request.",
                "description": "",
                "operationId": "postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "List of timesheet entry objects",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TimesheetEntry"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseTimesheetEntry"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "timesheet/entry"
                ],
                "summary": "Update timesheet entry. Multiple objects for different users can be sent in the same request.",
                "description": "",
                "operationId": "putList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "List of timesheet entry objects to update",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TimesheetEntry"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseTimesheetEntry"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/timesheet/entry/{id}": {
            "get": {
                "tags": [
                    "timesheet/entry"
                ],
                "summary": "Find timesheet entry by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTimesheetEntry"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "timesheet/entry"
                ],
                "summary": "Update timesheet entry by ID. Note: Timesheet entry object fields which are present but not set, or set to 0, will be nulled.",
                "description": "",
                "operationId": "put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TimesheetEntry"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTimesheetEntry"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "timesheet/entry"
                ],
                "summary": "Delete timesheet entry by ID.",
                "description": "",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "description": "Number of current version",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/timesheet/salaryTypeSpecification": {
            "get": {
                "tags": [
                    "timesheet/salaryTypeSpecification"
                ],
                "summary": "[BETA] Get list of timesheet SalaryType Specifications",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseTimesheetSalaryTypeSpecification"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "timesheet/salaryTypeSpecification"
                ],
                "summary": "[BETA] Create a timesheet SalaryType Specification. Only one entry per employee/date/SalaryType",
                "description": "",
                "operationId": "post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TimesheetSalaryTypeSpecification"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTimesheetSalaryTypeSpecification"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/timesheet/salaryTypeSpecification/{id}": {
            "get": {
                "tags": [
                    "timesheet/salaryTypeSpecification"
                ],
                "summary": "[BETA] Get timesheet SalaryType Specification for a specific ID",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTimesheetSalaryTypeSpecification"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "timesheet/salaryTypeSpecification"
                ],
                "summary": "[BETA] Update a timesheet SalaryType Specification",
                "description": "",
                "operationId": "put",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TimesheetSalaryTypeSpecification"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTimesheetSalaryTypeSpecification"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "timesheet/salaryTypeSpecification"
                ],
                "summary": "[BETA] Delete a timesheet SalaryType Specification",
                "description": "",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/timesheet/settings": {
            "get": {
                "tags": [
                    "timesheet/settings"
                ],
                "summary": "[BETA] Get timesheet settings of logged in company.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTimesheetSettings"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/timesheet/timeClock": {
            "get": {
                "tags": [
                    "timesheet/timeClock"
                ],
                "summary": "Find time clock entries corresponding with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "projectId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "activityId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "hourId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isRunning",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseTimeClock"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/timesheet/timeClock/:start": {
            "put": {
                "tags": [
                    "timesheet/timeClock"
                ],
                "summary": "Start time clock.",
                "description": "",
                "operationId": "start",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Employee ID. Defaults to ID of token owner.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "projectId",
                        "in": "query",
                        "description": "Project ID",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "activityId",
                        "in": "query",
                        "description": "Activity ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Optional. Default is today???s date",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTimeClock"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/timesheet/timeClock/present": {
            "get": {
                "tags": [
                    "timesheet/timeClock"
                ],
                "summary": "Find a user???s present running time clock.",
                "description": "",
                "operationId": "getPresent",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Employee ID. Defaults to ID of token owner.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTimeClock"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/timesheet/timeClock/{id}": {
            "get": {
                "tags": [
                    "timesheet/timeClock"
                ],
                "summary": "Find time clock entry by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTimeClock"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "timesheet/timeClock"
                ],
                "summary": "Update time clock by ID.",
                "description": "",
                "operationId": "put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TimeClock"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTimeClock"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/timesheet/timeClock/{id}/:stop": {
            "put": {
                "tags": [
                    "timesheet/timeClock"
                ],
                "summary": "Stop time clock.",
                "description": "",
                "operationId": "stop",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "description": "Number of current version",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/timesheet/week": {
            "get": {
                "tags": [
                    "timesheet/week"
                ],
                "summary": "Find weekly status By ID, week/year combination, employeeId. or an approver",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "employeeIds",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "weekYear",
                        "in": "query",
                        "description": "ISO-8601 week-year",
                        "required": false,
                        "type": "string",
                        "x-example": "2018-12"
                    },
                    {
                        "name": "approvedBy",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseWeek"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/timesheet/week/:approve": {
            "put": {
                "tags": [
                    "timesheet/week"
                ],
                "summary": "Approve week. By ID or (ISO-8601 week and employeeId combination).",
                "description": "",
                "operationId": "approve",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "weekYear",
                        "in": "query",
                        "description": "ISO-8601 week-year",
                        "required": false,
                        "type": "string",
                        "x-example": "2018-12"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperWeek"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/timesheet/week/:complete": {
            "put": {
                "tags": [
                    "timesheet/week"
                ],
                "summary": "Complete week. By ID or (ISO-8601 week and employeeId combination).",
                "description": "",
                "operationId": "complete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "weekYear",
                        "in": "query",
                        "description": "ISO-8601 week-year",
                        "required": false,
                        "type": "string",
                        "x-example": "2018-12"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperWeek"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/timesheet/week/:reopen": {
            "put": {
                "tags": [
                    "timesheet/week"
                ],
                "summary": "Reopen week. By ID or (ISO-8601 week and employeeId combination).",
                "description": "",
                "operationId": "reopen",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "weekYear",
                        "in": "query",
                        "description": "ISO-8601 week-year",
                        "required": false,
                        "type": "string",
                        "x-example": "2018-12"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperWeek"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/timesheet/week/:unapprove": {
            "put": {
                "tags": [
                    "timesheet/week"
                ],
                "summary": "Unapprove week. By ID or (ISO-8601 week and employeeId combination).",
                "description": "",
                "operationId": "unapprove",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "weekYear",
                        "in": "query",
                        "description": "ISO-8601 week-year",
                        "required": false,
                        "type": "string",
                        "x-example": "2018-12"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperWeek"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/token/consumer/byToken": {
            "get": {
                "tags": [
                    "token/consumer"
                ],
                "summary": "Get consumer token by token string.",
                "description": "",
                "operationId": "getByToken",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Element ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperConsumerToken"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/token/employee/:create": {
            "put": {
                "tags": [
                    "token/employee"
                ],
                "summary": "Create an employee token. Only selected consumers are allowed",
                "description": "",
                "operationId": "create",
                "parameters": [
                    {
                        "name": "tokenName",
                        "in": "query",
                        "description": "A user defined name for the new token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "consumerName",
                        "in": "query",
                        "description": "The name of the consumer",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "The id of the employee",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "companyOwned",
                        "in": "query",
                        "description": "Is the key company owned",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "name": "expirationDate",
                        "in": "query",
                        "description": "Expiration date for the employeeToken",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperEmployeeToken"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/token/session/:create": {
            "put": {
                "tags": [
                    "token/session"
                ],
                "summary": "Create session token.",
                "description": "",
                "operationId": "create",
                "parameters": [
                    {
                        "name": "consumerToken",
                        "in": "query",
                        "description": "Token of the API consumer",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "employeeToken",
                        "in": "query",
                        "description": "The employees token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "expirationDate",
                        "in": "query",
                        "description": "Expiration date for the combined token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperSessionToken"
                        }
                    }
                }
            }
        },
        "/token/session/\u003ewhoAmI": {
            "get": {
                "tags": [
                    "token/session"
                ],
                "summary": "Find information about the current user.",
                "description": "",
                "operationId": "whoAmI",
                "parameters": [
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperLoggedInUserInfoDTO"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/token/session/{token}": {
            "delete": {
                "tags": [
                    "token/session"
                ],
                "summary": "Delete session token.",
                "description": "",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "description": "The login token string to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/travelExpense": {
            "get": {
                "tags": [
                    "travelExpense"
                ],
                "summary": "[BETA] Find travel expenses corresponding with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "departmentId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "projectId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "projectManagerId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "departureDateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "returnDateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "category",
                        "required": false,
                        "type": "string",
                        "default": "ALL",
                        "enum": [
                            "ALL",
                            "OPEN",
                            "APPROVED",
                            "SALARY_PAID",
                            "DELIVERED"
                        ]
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseTravelExpense"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "travelExpense"
                ],
                "summary": "[BETA] Create travel expense.",
                "description": "",
                "operationId": "post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TravelExpense"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTravelExpense"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/travelExpense/:approve": {
            "put": {
                "tags": [
                    "travelExpense"
                ],
                "summary": "[BETA] Approve travel expenses.",
                "description": "",
                "operationId": "approve",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "ID of the elements",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseTravelExpense"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/travelExpense/:copy": {
            "put": {
                "tags": [
                    "travelExpense"
                ],
                "summary": "[BETA] Copy travel expense.",
                "description": "",
                "operationId": "copy",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTravelExpense"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/travelExpense/:createVouchers": {
            "put": {
                "tags": [
                    "travelExpense"
                ],
                "summary": "[BETA] Create vouchers",
                "description": "",
                "operationId": "createVouchers",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "ID of the elements",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "yyyy-MM-dd. Defaults to today.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseTravelExpense"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/travelExpense/:deliver": {
            "put": {
                "tags": [
                    "travelExpense"
                ],
                "summary": "[BETA] Deliver travel expenses.",
                "description": "",
                "operationId": "deliver",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "ID of the elements",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseTravelExpense"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/travelExpense/:unapprove": {
            "put": {
                "tags": [
                    "travelExpense"
                ],
                "summary": "[BETA] Unapprove travel expenses.",
                "description": "",
                "operationId": "unapprove",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "ID of the elements",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseTravelExpense"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/travelExpense/:undeliver": {
            "put": {
                "tags": [
                    "travelExpense"
                ],
                "summary": "[BETA] Undeliver travel expenses.",
                "description": "",
                "operationId": "undeliver",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "ID of the elements",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseTravelExpense"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/travelExpense/accommodationAllowance": {
            "get": {
                "tags": [
                    "travelExpense/accommodationAllowance"
                ],
                "summary": "[BETA] Find accommodation allowances corresponding with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "travelExpenseId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "rateTypeId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "rateCategoryId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "rateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "rateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "countFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "countTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "amountFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "amountTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "location",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "address",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseAccommodationAllowance"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "travelExpense/accommodationAllowance"
                ],
                "summary": "[BETA] Create accommodation allowance.",
                "description": "",
                "operationId": "post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AccommodationAllowance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperAccommodationAllowance"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/travelExpense/accommodationAllowance/{id}": {
            "get": {
                "tags": [
                    "travelExpense/accommodationAllowance"
                ],
                "summary": "[BETA] Get travel accommodation allowance by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperAccommodationAllowance"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "travelExpense/accommodationAllowance"
                ],
                "summary": "[BETA] Update accommodation allowance.",
                "description": "",
                "operationId": "put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AccommodationAllowance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperAccommodationAllowance"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "travelExpense/accommodationAllowance"
                ],
                "summary": "[BETA] Delete accommodation allowance.",
                "description": "",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/travelExpense/cost": {
            "get": {
                "tags": [
                    "travelExpense/cost"
                ],
                "summary": "[BETA] Find costs corresponding with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "travelExpenseId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "vatTypeId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "currencyId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "rateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "rateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "countFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "countTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "amountFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "amountTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "location",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "address",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseCost"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "travelExpense/cost"
                ],
                "summary": "[BETA] Create cost.",
                "description": "",
                "operationId": "post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Cost"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperCost"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/travelExpense/cost/{id}": {
            "get": {
                "tags": [
                    "travelExpense/cost"
                ],
                "summary": "[BETA] Get cost by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperCost"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "travelExpense/cost"
                ],
                "summary": "[BETA] Update cost.",
                "description": "",
                "operationId": "put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Cost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperCost"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "travelExpense/cost"
                ],
                "summary": "[BETA] Delete cost.",
                "description": "",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/travelExpense/costCategory": {
            "get": {
                "tags": [
                    "travelExpense/costCategory"
                ],
                "summary": "[BETA] Find cost category corresponding with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isInactive",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "showOnEmployeeExpenses",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseTravelCostCategory"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/travelExpense/costCategory/{id}": {
            "get": {
                "tags": [
                    "travelExpense/costCategory"
                ],
                "summary": "[BETA] Get cost category by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTravelCostCategory"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/travelExpense/mileageAllowance": {
            "get": {
                "tags": [
                    "travelExpense/mileageAllowance"
                ],
                "summary": "[BETA] Find mileage allowances corresponding with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "travelExpenseId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "rateTypeId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "rateCategoryId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "kmFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "kmTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "rateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "rateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "amountFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "amountTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "departureLocation",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "destination",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isCompanyCar",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseMileageAllowance"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "travelExpense/mileageAllowance"
                ],
                "summary": "[BETA] Create mileage allowance.",
                "description": "",
                "operationId": "post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/MileageAllowance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperMileageAllowance"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/travelExpense/mileageAllowance/{id}": {
            "get": {
                "tags": [
                    "travelExpense/mileageAllowance"
                ],
                "summary": "[BETA] Get mileage allowance by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperMileageAllowance"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "travelExpense/mileageAllowance"
                ],
                "summary": "[BETA] Update mileage allowance.",
                "description": "",
                "operationId": "put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/MileageAllowance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperMileageAllowance"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "travelExpense/mileageAllowance"
                ],
                "summary": "[BETA] Delete mileage allowance.",
                "description": "",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/travelExpense/passenger": {
            "get": {
                "tags": [
                    "travelExpense/passenger"
                ],
                "summary": "[BETA] Find passengers corresponding with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "mileageAllowance",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponsePassenger"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "travelExpense/passenger"
                ],
                "summary": "[BETA] Create passenger.",
                "description": "",
                "operationId": "post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Passenger"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPassenger"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/travelExpense/passenger/{id}": {
            "get": {
                "tags": [
                    "travelExpense/passenger"
                ],
                "summary": "[BETA] Get passenger by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPassenger"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "travelExpense/passenger"
                ],
                "summary": "[BETA] Update passenger.",
                "description": "",
                "operationId": "put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Passenger"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPassenger"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "travelExpense/passenger"
                ],
                "summary": "[BETA] Delete passenger.",
                "description": "",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/travelExpense/paymentType": {
            "get": {
                "tags": [
                    "travelExpense/paymentType"
                ],
                "summary": "[BETA] Find payment type corresponding with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isInactive",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "showOnEmployeeExpenses",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseTravelPaymentType"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/travelExpense/paymentType/{id}": {
            "get": {
                "tags": [
                    "travelExpense/paymentType"
                ],
                "summary": "[BETA] Get payment type by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTravelPaymentType"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/travelExpense/perDiemCompensation": {
            "get": {
                "tags": [
                    "travelExpense/perDiemCompensation"
                ],
                "summary": "[BETA] Find per diem compensations corresponding with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "travelExpenseId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "rateTypeId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "rateCategoryId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "overnightAccommodation",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "NONE",
                            "HOTEL",
                            "BOARDING_HOUSE_WITHOUT_COOKING",
                            "BOARDING_HOUSE_WITH_COOKING"
                        ]
                    },
                    {
                        "name": "countFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "countTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "rateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "rateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "amountFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "amountTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "location",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "address",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isDeductionForBreakfast",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "isLunchDeduction",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "isDinnerDeduction",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponsePerDiemCompensation"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "travelExpense/perDiemCompensation"
                ],
                "summary": "[BETA] Create per diem compensation.",
                "description": "",
                "operationId": "post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PerDiemCompensation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPerDiemCompensation"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/travelExpense/perDiemCompensation/{id}": {
            "get": {
                "tags": [
                    "travelExpense/perDiemCompensation"
                ],
                "summary": "[BETA] Get per diem compensation by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPerDiemCompensation"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "travelExpense/perDiemCompensation"
                ],
                "summary": "[BETA] Update per diem compensation.",
                "description": "",
                "operationId": "put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PerDiemCompensation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPerDiemCompensation"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "travelExpense/perDiemCompensation"
                ],
                "summary": "[BETA] Delete per diem compensation.",
                "description": "",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/travelExpense/rate": {
            "get": {
                "tags": [
                    "travelExpense/rate"
                ],
                "summary": "[BETA] Find rates corresponding with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "rateCategoryId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "PER_DIEM",
                            "ACCOMMODATION_ALLOWANCE",
                            "MILEAGE_ALLOWANCE"
                        ]
                    },
                    {
                        "name": "isValidDayTrip",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "isValidAccommodation",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "isValidDomestic",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "isValidForeignTravel",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "requiresZone",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "requiresOvernightAccommodation",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseTravelExpenseRate"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/travelExpense/rate/{id}": {
            "get": {
                "tags": [
                    "travelExpense/rate"
                ],
                "summary": "[BETA] Get travel expense rate by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTravelExpenseRate"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/travelExpense/rateCategory": {
            "get": {
                "tags": [
                    "travelExpense/rateCategory"
                ],
                "summary": "[BETA] Find rate categories corresponding with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "PER_DIEM",
                            "ACCOMMODATION_ALLOWANCE",
                            "MILEAGE_ALLOWANCE"
                        ]
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "travelReportRateCategoryGroupId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "ameldingWageCode",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "wageCodeNumber",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isValidDayTrip",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "isValidAccommodation",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "isValidDomestic",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "requiresZone",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "isRequiresOvernightAccommodation",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseTravelExpenseRateCategory"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/travelExpense/rateCategory/{id}": {
            "get": {
                "tags": [
                    "travelExpense/rateCategory"
                ],
                "summary": "[BETA] Get travel expense rate category by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTravelExpenseRateCategory"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/travelExpense/rateCategoryGroup": {
            "get": {
                "tags": [
                    "travelExpense/rateCategoryGroup"
                ],
                "summary": "[BETA] Find rate categoriy groups corresponding with sent data.",
                "description": "",
                "operationId": "search",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isForeignTravel",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseTravelExpenseRateCategoryGroup"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/travelExpense/rateCategoryGroup/{id}": {
            "get": {
                "tags": [
                    "travelExpense/rateCategoryGroup"
                ],
                "summary": "[BETA] Get travel report rate category group by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTravelExpenseRateCategoryGroup"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/travelExpense/settings": {
            "get": {
                "tags": [
                    "travelExpense/settings"
                ],
                "summary": "[BETA] Get travel expense settings of logged in company.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTravelExpenseSettings"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/travelExpense/{id}": {
            "get": {
                "tags": [
                    "travelExpense"
                ],
                "summary": "[BETA] Get travel expense by ID.",
                "description": "",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTravelExpense"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "travelExpense"
                ],
                "summary": "[BETA] Update travel expense.",
                "description": "",
                "operationId": "put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TravelExpense"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTravelExpense"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "travelExpense"
                ],
                "summary": "[BETA] Delete travel expense.",
                "description": "",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/travelExpense/{travelExpenseId}/attachment": {
            "get": {
                "tags": [
                    "travelExpense"
                ],
                "summary": "Get attachment by travel expense ID.",
                "description": "",
                "operationId": "downloadAttachment",
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "name": "travelExpenseId",
                        "in": "path",
                        "description": "Travel Expense ID from which PDF is downloaded.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "travelExpense"
                ],
                "summary": "Upload attachment to travel expense.",
                "description": "",
                "operationId": "uploadAttachment",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "travelExpenseId",
                        "in": "path",
                        "description": "Travel Expense ID to upload attachment to.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "The file",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "createNewCost",
                        "in": "query",
                        "description": "Create new cost row when you add the attachment",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "travelExpense"
                ],
                "summary": "[BETA] Delete attachment.",
                "description": "",
                "operationId": "deleteAttachment",
                "parameters": [
                    {
                        "name": "travelExpenseId",
                        "in": "path",
                        "description": "ID of attachment containing the attachment to delete.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "description": "Version of voucher containing the attachment to delete.",
                        "required": false,
                        "type": "integer",
                        "minimum": 0.0,
                        "format": "int32"
                    },
                    {
                        "name": "sendToInbox",
                        "in": "query",
                        "description": "Should the attachment be sent to inbox rather than deleted?",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "split",
                        "in": "query",
                        "description": "If sendToInbox is true, should the attachment be split into one voucher per page?",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        },
        "/travelExpense/{travelExpenseId}/attachment/list": {
            "post": {
                "tags": [
                    "travelExpense"
                ],
                "summary": "Upload multiple attachments to travel expense.",
                "description": "",
                "operationId": "uploadAttachments",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "travelExpenseId",
                        "in": "path",
                        "description": "Travel Expense ID to upload attachment to.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Multipart files",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FormDataMultiPart"
                        }
                    },
                    {
                        "name": "createNewCost",
                        "in": "query",
                        "description": "Create new cost row when you add the attachment",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "tokenAuthScheme": [
                            
                        ]
                    }
                ]
            }
        }
    },
    "securityDefinitions": {
        "tokenAuthScheme": {
            "description": "Basic AUTH where username is company/customer id for proxy use (or 0 for default), password should be set to the session token",
            "type": "basic"
        }
    },
    "definitions": {
        "Delete": {
            "type": "object",
            "properties": {
                "available": {
                    "type": "boolean",
                    "description": "Is the delete operation available for this Voucher?",
                    "readOnly": true,
                    "default": false
                },
                "reasons": {
                    "type": "array",
                    "description": "If the delete operation is not available then this is a list of reasons why. Otherwise the list will be empty",
                    "readOnly": true,
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "ResponseWrapperProspect": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Prospect"
                }
            }
        },
        "ResponseWrapperPayslip": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Payslip"
                }
            }
        },
        "Customer": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "maxLength": 255
                },
                "organizationNumber": {
                    "type": "string",
                    "maxLength": 100
                },
                "supplierNumber": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0.0
                },
                "customerNumber": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0.0
                },
                "isSupplier": {
                    "type": "boolean",
                    "description": "Defines if the customer is also a supplier.",
                    "default": false
                },
                "isCustomer": {
                    "type": "boolean",
                    "readOnly": true,
                    "default": false
                },
                "isInactive": {
                    "type": "boolean",
                    "readOnly": true,
                    "default": false
                },
                "accountManager": {
                    "$ref": "#/definitions/Employee"
                },
                "email": {
                    "type": "string",
                    "format": "email",
                    "minLength": 0,
                    "maxLength": 254
                },
                "invoiceEmail": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 254
                },
                "overdueNoticeEmail": {
                    "type": "string",
                    "format": "email",
                    "description": "The email address of the customer where the noticing emails are sent in case of an overdue",
                    "minLength": 0,
                    "maxLength": 254
                },
                "bankAccounts": {
                    "type": "array",
                    "description": "List of the bank account numbers for this customer. Norwegian bank account numbers only.",
                    "items": {
                        "type": "string"
                    }
                },
                "phoneNumber": {
                    "type": "string",
                    "maxLength": 100
                },
                "phoneNumberMobile": {
                    "type": "string",
                    "maxLength": 100
                },
                "description": {
                    "type": "string"
                },
                "isPrivateIndividual": {
                    "type": "boolean",
                    "default": false
                },
                "singleCustomerInvoice": {
                    "type": "boolean",
                    "description": "Enables various orders on one customer invoice.",
                    "default": false
                },
                "invoiceSendMethod": {
                    "type": "string",
                    "description": "Define the invoicing method for the customer.\u003cbr\u003eEMAIL: Send invoices as email.\u003cbr\u003eEHF: Send invoices as EHF.\u003cbr\u003eEFAKTURA: Send invoices as EFAKTURA.\u003cbr\u003eVIPPS: Send invoices through VIPPS.\u003cbr\u003ePAPER: Send invoices as paper invoice.\u003cbr\u003eMANUAL: User will have to send invocie manually.\u003cbr\u003e",
                    "enum": [
                        "EMAIL",
                        "EHF",
                        "EFAKTURA",
                        "VIPPS",
                        "PAPER",
                        "MANUAL"
                    ]
                },
                "emailAttachmentType": {
                    "type": "string",
                    "description": "Define the invoice attachment type for emailing to the customer.\u003cbr\u003eLINK: Send invoice as link in email.\u003cbr\u003eATTACHMENT: Send invoice as attachment in email.\u003cbr\u003e",
                    "enum": [
                        "LINK",
                        "ATTACHMENT"
                    ]
                },
                "postalAddress": {
                    "$ref": "#/definitions/Address"
                },
                "physicalAddress": {
                    "$ref": "#/definitions/Address"
                },
                "deliveryAddress": {
                    "$ref": "#/definitions/DeliveryAddress"
                },
                "category1": {
                    "description": "Category 1 of this customer",
                    "$ref": "#/definitions/CustomerCategory"
                },
                "category2": {
                    "description": "Category 2 of this customer",
                    "$ref": "#/definitions/CustomerCategory"
                },
                "category3": {
                    "description": "Category 3 of this customer",
                    "$ref": "#/definitions/CustomerCategory"
                },
                "invoicesDueIn": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of days/months in which invoices created from this customer is due",
                    "minimum": 0.0,
                    "maximum": 10000.0
                },
                "invoicesDueInType": {
                    "type": "string",
                    "description": "Set the time unit of invoicesDueIn. The special case RECURRING_DAY_OF_MONTH enables the due date to be fixed to a specific day of the month, in this case the fixed due date will automatically be set as standard on all invoices created from this customer. Note that when RECURRING_DAY_OF_MONTH is set, the due date will be set to the last day of month if \"31\" is set in invoicesDueIn.",
                    "enum": [
                        "DAYS",
                        "MONTHS",
                        "RECURRING_DAY_OF_MONTH"
                    ]
                }
            }
        },
        "Product": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "maxLength": 255
                },
                "number": {
                    "type": "string",
                    "maxLength": 100
                },
                "description": {
                    "type": "string"
                },
                "ean": {
                    "type": "string",
                    "maxLength": 14
                },
                "elNumber": {
                    "type": "string",
                    "readOnly": true,
                    "maxLength": 14
                },
                "nrfNumber": {
                    "type": "string",
                    "readOnly": true,
                    "maxLength": 14
                },
                "costExcludingVatCurrency": {
                    "type": "number",
                    "description": "Price purchase (cost) excluding VAT in the product\u0027s currency"
                },
                "priceExcludingVatCurrency": {
                    "type": "number",
                    "description": "Price of purchase excluding VAT in the product\u0027s currency"
                },
                "priceIncludingVatCurrency": {
                    "type": "number",
                    "description": "Price of purchase including VAT in the product\u0027s currency"
                },
                "isInactive": {
                    "type": "boolean",
                    "default": false
                },
                "productUnit": {
                    "$ref": "#/definitions/ProductUnit"
                },
                "isStockItem": {
                    "type": "boolean",
                    "default": false
                },
                "stockOfGoods": {
                    "type": "number",
                    "readOnly": true
                },
                "vatType": {
                    "$ref": "#/definitions/VatType"
                },
                "currency": {
                    "$ref": "#/definitions/Currency"
                },
                "department": {
                    "$ref": "#/definitions/Department"
                },
                "account": {
                    "$ref": "#/definitions/Account"
                },
                "discountPrice": {
                    "type": "number",
                    "readOnly": true
                },
                "supplier": {
                    "$ref": "#/definitions/Supplier"
                },
                "resaleProduct": {
                    "$ref": "#/definitions/Product"
                }
            }
        },
        "ListResponseTimeClock": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TimeClock"
                    }
                }
            }
        },
        "PG2CallbackDTO": {
            "type": "object",
            "required": [
                "_odpcompanyID",
                "_odpcustomerID",
                "autoPayKey",
                "autoPayKeyLastGeneratedDate",
                "pgRequestId",
                "tenantId"
            ],
            "properties": {
                "_odpcompanyID": {
                    "type": "integer",
                    "format": "int32"
                },
                "_odpcustomerID": {
                    "type": "integer",
                    "format": "int32"
                },
                "pgRequestId": {
                    "type": "string"
                },
                "tenantId": {
                    "type": "string"
                },
                "autoPayKey": {
                    "type": "string"
                },
                "autoPayKeyLastGeneratedDate": {
                    "type": "string",
                    "format": "date"
                }
            }
        },
        "ResponseWrapperCompanyAuthorityDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/CompanyAuthorityDTO"
                }
            }
        },
        "SearchCompletionDTO": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "alternateName": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "postalCode": {
                    "type": "string"
                },
                "postalArea": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "score": {
                    "type": "integer",
                    "format": "int32"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "SEARCH1881",
                            "TRIPLETEX",
                            "NICKNAME",
                            "EMPLOYEE",
                            "CONTACT",
                            "ACTIVITY",
                            "PROJECT",
                            "ORDER",
                            "OFFER",
                            "CUSTOMER",
                            "COMPANY",
                            "CONTROLSCHEMA",
                            "HOUR",
                            "TRAVELEXPENSE"
                        ]
                    }
                },
                "id": {
                    "type": "string"
                },
                "category": {
                    "type": "string"
                }
            }
        },
        "ListResponseEmploymentDetails": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EmploymentDetails"
                    }
                }
            }
        },
        "ResponseWrapperCompanyHoliday": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/CompanyHoliday"
                }
            }
        },
        "ListResponsePayslip": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Payslip"
                    }
                }
            }
        },
        "MobileAppLogin": {
            "type": "object",
            "required": [
                "appSecret",
                "expirationDate",
                "password",
                "username"
            ],
            "properties": {
                "username": {
                    "type": "string",
                    "description": "Users username (email)"
                },
                "password": {
                    "type": "string",
                    "description": "Users password"
                },
                "appSecret": {
                    "type": "string",
                    "description": "App secret"
                },
                "mfaCode": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Optional mfa auth code"
                },
                "expirationDate": {
                    "type": "string",
                    "description": "Expiration date for the combined token"
                },
                "employeeId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Optional employee ID. Default employee is used when null"
                }
            }
        },
        "EmployeeEmail": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Employee e-mail address",
                    "minLength": 1
                }
            }
        },
        "ProjectControlForm": {
            "type": "object",
            "required": [
                "comment",
                "title"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "title": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255
                },
                "comment": {
                    "type": "string",
                    "minLength": 1
                },
                "completed": {
                    "type": "boolean",
                    "default": false
                },
                "signatureRequired": {
                    "type": "boolean",
                    "readOnly": true,
                    "default": false
                },
                "signed": {
                    "type": "boolean",
                    "readOnly": true,
                    "default": false
                },
                "controlForm": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "Employee": {
            "type": "object",
            "required": [
                "firstName",
                "lastName"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "firstName": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                },
                "lastName": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                },
                "employeeNumber": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 100
                },
                "dateOfBirth": {
                    "type": "string"
                },
                "email": {
                    "type": "string",
                    "format": "email",
                    "maxLength": 100
                },
                "phoneNumberMobileCountry": {
                    "description": "The country of the mobile phone number. If not set, the country is derived as best as possible from phoneNumberMobile. NB! 8 digit numbers are assumed to be Norwegian.",
                    "$ref": "#/definitions/Country"
                },
                "phoneNumberMobile": {
                    "type": "string",
                    "maxLength": 100
                },
                "phoneNumberHome": {
                    "type": "string",
                    "maxLength": 100
                },
                "phoneNumberWork": {
                    "type": "string",
                    "maxLength": 100
                },
                "nationalIdentityNumber": {
                    "type": "string",
                    "maxLength": 100
                },
                "dnumber": {
                    "type": "string",
                    "maxLength": 11
                },
                "internationalId": {
                    "$ref": "#/definitions/InternationalId"
                },
                "bankAccountNumber": {
                    "type": "string",
                    "maxLength": 100
                },
                "iban": {
                    "type": "string",
                    "description": "IBAN field -- pilot program"
                },
                "bic": {
                    "type": "string",
                    "description": "Bic (swift) field -- pilot program"
                },
                "creditorBankCountryId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Country of creditor bank field -- pilot program"
                },
                "userType": {
                    "type": "string",
                    "description": "Define the employee\u0027s user type.\u003cbr\u003eSTANDARD: Reduced access. Users with limited system entitlements.\u003cbr\u003eEXTENDED: Users can be given all system entitlements.\u003cbr\u003eNO_ACCESS: User with no log on access.\u003cbr\u003eUsers with access to Tripletex must confirm the email address.",
                    "enum": [
                        "STANDARD",
                        "EXTENDED",
                        "NO_ACCESS"
                    ]
                },
                "allowInformationRegistration": {
                    "type": "boolean",
                    "description": "Determines if salary information can be registered on the user including hours, travel expenses and employee expenses. The user may also be selected as a project member on projects.",
                    "readOnly": true,
                    "default": false
                },
                "isContact": {
                    "type": "boolean",
                    "readOnly": true,
                    "default": false
                },
                "comments": {
                    "type": "string"
                },
                "address": {
                    "description": "Address tied to the employee",
                    "$ref": "#/definitions/Address"
                },
                "department": {
                    "$ref": "#/definitions/Department"
                },
                "employments": {
                    "type": "array",
                    "description": "Employments tied to the employee",
                    "items": {
                        "$ref": "#/definitions/Employment"
                    }
                },
                "holidayAllowanceEarned": {
                    "$ref": "#/definitions/HolidayAllowanceEarned"
                }
            }
        },
        "ResponseWrapperSystemMessage": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/SystemMessage"
                }
            }
        },
        "ResponseWrapperSalesForceOpportunity": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/SalesForceOpportunity"
                }
            }
        },
        "ApiError": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer",
                    "format": "int32"
                },
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "developerMessage": {
                    "type": "string"
                },
                "validationMessages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiValidationMessage"
                    }
                },
                "requestId": {
                    "type": "string"
                }
            }
        },
        "Week": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "employee": {
                    "readOnly": true,
                    "$ref": "#/definitions/Employee"
                },
                "timesheetEntries": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/TimesheetEntry"
                    }
                },
                "year": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "week": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "completed": {
                    "type": "boolean",
                    "readOnly": true,
                    "default": false
                },
                "approved": {
                    "type": "boolean",
                    "readOnly": true,
                    "default": false
                },
                "approvedBy": {
                    "readOnly": true,
                    "$ref": "#/definitions/Employee"
                },
                "approvedDate": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "Link": {
            "type": "object",
            "properties": {
                "rel": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "POST",
                        "PUT",
                        "GET",
                        "DELETE"
                    ]
                },
                "href": {
                    "type": "string"
                }
            }
        },
        "ListResponseBankReconciliationMatch": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BankReconciliationMatch"
                    }
                }
            }
        },
        "ListResponsePerDiemCompensationTransientDTO": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PerDiemCompensationTransientDTO"
                    }
                }
            }
        },
        "AnnualAccount": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "year": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "start": {
                    "type": "string",
                    "readOnly": true
                },
                "end": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "CustomerTripletexAccount": {
            "type": "object",
            "required": [
                "accountType",
                "modules",
                "numberOfVouchers",
                "type"
            ],
            "properties": {
                "administrator": {
                    "description": "Administrator user to create in the new company. Leave empty if calling this enpoint as an auditor og accountant company",
                    "$ref": "#/definitions/Employee"
                },
                "customerId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The customer id to an already created customer to create a Tripletex account for.",
                    "minimum": 1.0
                },
                "accountType": {
                    "type": "string",
                    "enum": [
                        "TEST",
                        "PAYING"
                    ]
                },
                "modules": {
                    "$ref": "#/definitions/Modules"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "NONE",
                        "ENK",
                        "AS",
                        "NUF",
                        "ANS",
                        "DA",
                        "PRE",
                        "KS",
                        "ASA",
                        "BBL",
                        "BRL",
                        "GFS",
                        "SPA",
                        "SF",
                        "IKS",
                        "KF_FKF",
                        "FCD",
                        "EOFG",
                        "BA",
                        "STI",
                        "ORG",
                        "ESEK",
                        "SA",
                        "SAM",
                        "BO",
                        "VPFO",
                        "OS",
                        "Other"
                    ]
                },
                "sendEmails": {
                    "type": "boolean",
                    "description": "Should the emails normally sent during creation be sent in this case?",
                    "default": false
                },
                "autoValidateUserLogin": {
                    "type": "boolean",
                    "description": "Should the user be automatically validated?",
                    "default": false
                },
                "createApiToken": {
                    "type": "boolean",
                    "description": "Creates a token for the admin user. The accounting office could also use their tokens so you might not need this.",
                    "default": false
                },
                "sendInvoiceToCustomer": {
                    "type": "boolean",
                    "description": "Should the invoices for this account be sent to the customer?",
                    "default": false
                },
                "customerInvoiceEmail": {
                    "type": "string",
                    "description": "The address to send the invoice to at the customer."
                },
                "numberOfEmployees": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of employees in the customer company. Is used for calculating prices and setting some default settings, i.e. approval settings for timesheet."
                },
                "numberOfVouchers": {
                    "type": "string",
                    "description": "Number of vouchers each year. Used to calculate prices.",
                    "enum": [
                        "INTERVAL_0_100",
                        "INTERVAL_101_500",
                        "INTERVAL_0_500",
                        "INTERVAL_501_1000",
                        "INTERVAL_1001_2000",
                        "INTERVAL_2001_3500",
                        "INTERVAL_3501_5000",
                        "INTERVAL_5001_10000",
                        "INTERVAL_UNLIMITED"
                    ]
                },
                "administratorPassword": {
                    "type": "string",
                    "description": "The password of the administrator user."
                },
                "chartOfAccountsType": {
                    "type": "string",
                    "description": "The chart of accounts to use for the new company",
                    "enum": [
                        "DEFAULT",
                        "MAMUT_STD_PAYROLL",
                        "MAMUT_NARF_PAYROLL",
                        "AGRO_FORRETNING_PAYROLL",
                        "AGRO_LANDBRUK_PAYROLL",
                        "AGRO_FISKE_PAYROLL",
                        "AGRO_FORSOKSRING_PAYROLL",
                        "AGRO_IDRETTSLAG_PAYROLL",
                        "AGRO_FORENING_PAYROLL"
                    ]
                }
            }
        },
        "ListResponseCurrency": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Currency"
                    }
                }
            }
        },
        "Notification": {
            "type": "object",
            "required": [
                "date",
                "message",
                "title",
                "type"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "date": {
                    "type": "string"
                },
                "title": {
                    "type": "string",
                    "maxLength": 100
                },
                "message": {
                    "type": "string",
                    "maxLength": 255
                },
                "type": {
                    "type": "string",
                    "maxLength": 50
                },
                "link": {
                    "type": "string",
                    "maxLength": 255
                }
            }
        },
        "ListResponseWeek": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Week"
                    }
                }
            }
        },
        "ListResponseActivity": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Activity"
                    }
                }
            }
        },
        "TimesheetEntrySearchResponse": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TimesheetEntry"
                    }
                },
                "sumAllHours": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "ListResponseVoucher": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Voucher"
                    }
                }
            }
        },
        "OrderLine": {
            "type": "object",
            "required": [
                "order"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "product": {
                    "$ref": "#/definitions/Product"
                },
                "inventory": {
                    "$ref": "#/definitions/Inventory"
                },
                "description": {
                    "type": "string"
                },
                "count": {
                    "type": "number",
                    "format": "double"
                },
                "unitCostCurrency": {
                    "type": "number",
                    "description": "Unit price purchase (cost) excluding VAT in the order\u0027s currency"
                },
                "unitPriceExcludingVatCurrency": {
                    "type": "number",
                    "description": "Unit price of purchase excluding VAT in the order\u0027s currency"
                },
                "currency": {
                    "description": "The order line\u0027s currency. Determined by the order\u0027s currency.",
                    "readOnly": true,
                    "$ref": "#/definitions/Currency"
                },
                "markup": {
                    "type": "number",
                    "format": "double",
                    "description": "Markup given as a percentage (%)"
                },
                "discount": {
                    "type": "number",
                    "format": "double",
                    "description": "Discount given as a percentage (%)"
                },
                "vatType": {
                    "$ref": "#/definitions/VatType"
                },
                "amountExcludingVatCurrency": {
                    "type": "number",
                    "description": "Total amount on order line excluding VAT in the order\u0027s currency",
                    "readOnly": true
                },
                "amountIncludingVatCurrency": {
                    "type": "number",
                    "description": "Total amount on order line including VAT in the order\u0027s currency",
                    "readOnly": true
                },
                "order": {
                    "$ref": "#/definitions/Order"
                },
                "unitPriceIncludingVatCurrency": {
                    "type": "number",
                    "description": "Unit price of purchase including VAT in the order\u0027s currency"
                },
                "isSubscription": {
                    "type": "boolean",
                    "default": false
                },
                "subscriptionPeriodStart": {
                    "type": "string"
                },
                "subscriptionPeriodEnd": {
                    "type": "string"
                }
            }
        },
        "ListResponseCost": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Cost"
                    }
                }
            }
        },
        "SalesForceEmployee": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "phoneNumberMobile": {
                    "type": "string"
                },
                "phoneNumberHome": {
                    "type": "string"
                },
                "phoneNumberWork": {
                    "type": "string"
                },
                "address": {
                    "$ref": "#/definitions/SalesForceAddressDTO"
                },
                "userId": {
                    "type": "integer",
                    "format": "int32"
                },
                "companyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "customerId": {
                    "type": "integer",
                    "format": "int32"
                },
                "phoneNumberSmsCertified": {
                    "type": "string"
                },
                "isUserAdministrator": {
                    "type": "boolean",
                    "default": false
                },
                "isAccountAdministrator": {
                    "type": "boolean",
                    "default": false
                },
                "allowLogin": {
                    "type": "boolean",
                    "default": false
                },
                "isExternal": {
                    "type": "boolean",
                    "default": false
                },
                "isTripletexCertified": {
                    "type": "boolean",
                    "default": false
                },
                "isDefaultLogin": {
                    "type": "boolean",
                    "default": false
                },
                "loginEndDate": {
                    "type": "string",
                    "description": "Login end date",
                    "readOnly": true
                }
            }
        },
        "ApiConsumer": {
            "type": "object",
            "required": [
                "consumerName",
                "emails"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "consumerName": {
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 100
                },
                "emails": {
                    "type": "string",
                    "format": "email",
                    "maxLength": 255
                }
            }
        },
        "ProjectPeriodInvoiced": {
            "type": "object",
            "properties": {
                "sumAmountPaid": {
                    "type": "number",
                    "readOnly": true
                },
                "sumAmountOutstanding": {
                    "type": "number",
                    "readOnly": true
                },
                "sumAmountDue": {
                    "type": "number",
                    "readOnly": true
                },
                "sumAmountDueOutstanding": {
                    "type": "number",
                    "readOnly": true
                },
                "sumAmount": {
                    "type": "number",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperLegacyAddress": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/LegacyAddress"
                }
            }
        },
        "ResponseWrapperMileageAllowance": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/MileageAllowance"
                }
            }
        },
        "ListResponseProjectParticipant": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProjectParticipant"
                    }
                }
            }
        },
        "ResponseWrapperTravelPaymentType": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/TravelPaymentType"
                }
            }
        },
        "Reminder": {
            "type": "object",
            "required": [
                "termOfPayment",
                "type"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "reminderDate": {
                    "type": "string",
                    "description": "Creation date of the invoice reminder.",
                    "readOnly": true
                },
                "charge": {
                    "type": "number",
                    "description": "The fee part of the reminder, in the company\u0027s currency.",
                    "readOnly": true
                },
                "chargeCurrency": {
                    "type": "number",
                    "description": "The fee part of the reminder, in the invoice currency.",
                    "readOnly": true
                },
                "totalCharge": {
                    "type": "number",
                    "description": "The total fee part of all reminders, in the company\u0027s currency.",
                    "readOnly": true
                },
                "totalChargeCurrency": {
                    "type": "number",
                    "description": "The total fee part of all reminders, in the invoice currency.",
                    "readOnly": true
                },
                "totalAmountCurrency": {
                    "type": "number",
                    "description": "The total amount to pay in reminder\u0027s currency.",
                    "readOnly": true
                },
                "interests": {
                    "type": "number",
                    "description": "The interests part of the reminder.",
                    "readOnly": true
                },
                "interestRate": {
                    "type": "number",
                    "description": "The reminder interest rate.",
                    "readOnly": true
                },
                "termOfPayment": {
                    "type": "string",
                    "description": "The reminder term of payment date."
                },
                "currency": {
                    "description": "The reminder currency.",
                    "readOnly": true,
                    "$ref": "#/definitions/Currency"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "SOFT_REMINDER",
                        "REMINDER",
                        "NOTICE_OF_DEBT_COLLECTION",
                        "DEBT_COLLECTION"
                    ]
                },
                "comment": {
                    "type": "string"
                },
                "kid": {
                    "type": "string",
                    "description": "KID - Kundeidentifikasjonsnummer.",
                    "maxLength": 25
                },
                "bankAccountNumber": {
                    "type": "string",
                    "maxLength": 255
                },
                "bankAccountIBAN": {
                    "type": "string",
                    "maxLength": 255
                },
                "bankAccountSWIFT": {
                    "type": "string",
                    "maxLength": 255
                },
                "bank": {
                    "type": "string",
                    "maxLength": 255
                }
            }
        },
        "ResponseWrapperMapStringEventInfoDescription": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/EventInfoDescription"
                    }
                }
            }
        },
        "ResponseWrapperStandardTime": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/StandardTime"
                }
            }
        },
        "ResponseWrapperProjectControlForm": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ProjectControlForm"
                }
            }
        },
        "ListResponseProductGroup": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProductGroup"
                    }
                }
            }
        },
        "ResponseWrapperObject": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "object"
                }
            }
        },
        "GoodsReceiptLine": {
            "type": "object",
            "required": [
                "product",
                "quantityReceived"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "purchaseOrder": {
                    "$ref": "#/definitions/PurchaseOrder"
                },
                "product": {
                    "$ref": "#/definitions/Product"
                },
                "inventory": {
                    "description": "If not entered, the default warehouse will be used",
                    "$ref": "#/definitions/Inventory"
                },
                "quantityOrdered": {
                    "type": "number",
                    "format": "double",
                    "readOnly": true
                },
                "quantityReceived": {
                    "type": "number",
                    "format": "double"
                },
                "quantityRest": {
                    "type": "number",
                    "format": "double",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperBankTransaction": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/BankTransaction"
                }
            }
        },
        "DashboardDTO": {
            "type": "object",
            "required": [
                "content",
                "version"
            ],
            "properties": {
                "version": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0.0
                },
                "content": {
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "BankReconciliation": {
            "type": "object",
            "required": [
                "account",
                "accountingPeriod",
                "type"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "account": {
                    "$ref": "#/definitions/Account"
                },
                "accountingPeriod": {
                    "$ref": "#/definitions/AccountingPeriod"
                },
                "voucher": {
                    "readOnly": true,
                    "$ref": "#/definitions/Voucher"
                },
                "transactions": {
                    "type": "array",
                    "description": "Bank transactions tied to the bank reconciliation",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/BankTransaction"
                    }
                },
                "isClosed": {
                    "type": "boolean",
                    "default": false
                },
                "type": {
                    "type": "string",
                    "description": "Type of Bank Reconciliation.",
                    "enum": [
                        "MANUAL",
                        "AUTOMATIC"
                    ]
                },
                "bankAccountClosingBalanceCurrency": {
                    "type": "number"
                },
                "closedDate": {
                    "type": "string",
                    "readOnly": true
                },
                "closedByContact": {
                    "readOnly": true,
                    "$ref": "#/definitions/Contact"
                },
                "closedByEmployee": {
                    "readOnly": true,
                    "$ref": "#/definitions/Employee"
                },
                "approvable": {
                    "type": "boolean",
                    "readOnly": true,
                    "default": false
                }
            }
        },
        "ResponseWrapperGoodsReceipt": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/GoodsReceipt"
                }
            }
        },
        "ProductUnit": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "maxLength": 100
                },
                "nameShort": {
                    "type": "string",
                    "maxLength": 50
                },
                "commonCode": {
                    "type": "string",
                    "maxLength": 50
                }
            }
        },
        "TravelCostCategory": {
            "type": "object",
            "required": [
                "description"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "description": {
                    "type": "string",
                    "maxLength": 255
                },
                "account": {
                    "$ref": "#/definitions/Account"
                },
                "vatType": {
                    "$ref": "#/definitions/VatType"
                },
                "isVatLocked": {
                    "type": "boolean",
                    "readOnly": true,
                    "default": false
                },
                "showOnTravelExpenses": {
                    "type": "boolean",
                    "readOnly": true,
                    "default": false
                },
                "showOnEmployeeExpenses": {
                    "type": "boolean",
                    "readOnly": true,
                    "default": false
                },
                "isInactive": {
                    "type": "boolean",
                    "readOnly": true,
                    "default": false
                }
            }
        },
        "ResponseWrapperConsumerToken": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ConsumerToken"
                }
            }
        },
        "TravelExpense": {
            "type": "object",
            "required": [
                "employee"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "project": {
                    "$ref": "#/definitions/Project"
                },
                "employee": {
                    "$ref": "#/definitions/Employee"
                },
                "approvedBy": {
                    "readOnly": true,
                    "$ref": "#/definitions/Employee"
                },
                "completedBy": {
                    "readOnly": true,
                    "$ref": "#/definitions/Employee"
                },
                "department": {
                    "$ref": "#/definitions/Department"
                },
                "payslip": {
                    "readOnly": true,
                    "$ref": "#/definitions/Payslip"
                },
                "vatType": {
                    "$ref": "#/definitions/VatType"
                },
                "paymentCurrency": {
                    "$ref": "#/definitions/Currency"
                },
                "travelDetails": {
                    "$ref": "#/definitions/TravelDetails"
                },
                "voucher": {
                    "readOnly": true,
                    "$ref": "#/definitions/Voucher"
                },
                "attachment": {
                    "readOnly": true,
                    "$ref": "#/definitions/Document"
                },
                "isCompleted": {
                    "type": "boolean",
                    "readOnly": true,
                    "default": false
                },
                "isApproved": {
                    "type": "boolean",
                    "readOnly": true,
                    "default": false
                },
                "isChargeable": {
                    "type": "boolean",
                    "default": false
                },
                "isFixedInvoicedAmount": {
                    "type": "boolean",
                    "default": false
                },
                "isIncludeAttachedReceiptsWhenReinvoicing": {
                    "type": "boolean",
                    "default": false
                },
                "completedDate": {
                    "type": "string",
                    "readOnly": true
                },
                "approvedDate": {
                    "type": "string",
                    "readOnly": true
                },
                "date": {
                    "type": "string",
                    "readOnly": true
                },
                "travelAdvance": {
                    "type": "number"
                },
                "fixedInvoicedAmount": {
                    "type": "number"
                },
                "amount": {
                    "type": "number",
                    "readOnly": true
                },
                "paymentAmount": {
                    "type": "number",
                    "readOnly": true
                },
                "chargeableAmount": {
                    "type": "number",
                    "readOnly": true
                },
                "lowRateVAT": {
                    "type": "number",
                    "readOnly": true
                },
                "mediumRateVAT": {
                    "type": "number",
                    "readOnly": true
                },
                "highRateVAT": {
                    "type": "number",
                    "readOnly": true
                },
                "paymentAmountCurrency": {
                    "type": "number",
                    "readOnly": true
                },
                "number": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "invoice": {
                    "readOnly": true,
                    "$ref": "#/definitions/Invoice"
                },
                "title": {
                    "type": "string",
                    "maxLength": 255
                },
                "perDiemCompensations": {
                    "type": "array",
                    "description": "Link to individual per diem compensations.",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/PerDiemCompensation"
                    }
                },
                "mileageAllowances": {
                    "type": "array",
                    "description": "Link to individual mileage allowances.",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/MileageAllowance"
                    }
                },
                "accommodationAllowances": {
                    "type": "array",
                    "description": "Link to individual accommodation allowances.",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/AccommodationAllowance"
                    }
                },
                "costs": {
                    "type": "array",
                    "description": "Link to individual costs.",
                    "items": {
                        "$ref": "#/definitions/Cost"
                    }
                },
                "attachmentCount": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true,
                    "minimum": 0.0,
                    "maximum": 2147483647
                },
                "state": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "ALL",
                        "OPEN",
                        "APPROVED",
                        "SALARY_PAID",
                        "DELIVERED"
                    ]
                },
                "actions": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "isSalaryAdmin": {
                    "type": "boolean",
                    "readOnly": true,
                    "default": false
                },
                "showPayslip": {
                    "type": "boolean",
                    "readOnly": true,
                    "default": false
                },
                "accountingPeriodClosed": {
                    "type": "boolean",
                    "readOnly": true,
                    "default": false
                },
                "accountingPeriodVATClosed": {
                    "type": "boolean",
                    "readOnly": true,
                    "default": false
                }
            }
        },
        "ResponseWrapperProjectPeriodInvoiced": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ProjectPeriodInvoiced"
                }
            }
        },
        "ListResponseDeliveryAddress": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DeliveryAddress"
                    }
                }
            }
        },
        "ListResponseGoodsReceiptLine": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GoodsReceiptLine"
                    }
                }
            }
        },
        "PurchaseOrderline": {
            "type": "object",
            "required": [
                "purchaseOrder"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "purchaseOrder": {
                    "description": "The purchase order to attach the orderline.",
                    "$ref": "#/definitions/PurchaseOrder"
                },
                "product": {
                    "$ref": "#/definitions/Product"
                },
                "description": {
                    "type": "string"
                },
                "count": {
                    "type": "number",
                    "format": "double",
                    "minimum": 1.0
                },
                "unitCostCurrency": {
                    "type": "number",
                    "description": "Unit price purchase (cost) excluding VAT in the order\u0027s currency"
                },
                "unitPriceExcludingVatCurrency": {
                    "type": "number",
                    "description": "Unit price of purchase excluding VAT in the order\u0027s currency"
                },
                "currency": {
                    "description": "The order line\u0027s currency. Determined by the order\u0027s currency.",
                    "readOnly": true,
                    "$ref": "#/definitions/Currency"
                },
                "discount": {
                    "type": "number",
                    "format": "double",
                    "description": "Discount given as a percentage (%)"
                },
                "amountExcludingVatCurrency": {
                    "type": "number",
                    "description": "Total amount on order line excluding VAT in the order\u0027s currency",
                    "readOnly": true
                },
                "amountIncludingVatCurrency": {
                    "type": "number",
                    "description": "Total amount on order line including VAT in the order\u0027s currency",
                    "readOnly": true
                }
            }
        },
        "ListResponseAccount": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Account"
                    }
                }
            }
        },
        "ListResponsePerDiemCompensation": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PerDiemCompensation"
                    }
                }
            }
        },
        "VatType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "maxLength": 255
                },
                "number": {
                    "type": "string",
                    "maxLength": 10
                },
                "percentage": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "CustomerTripletexAccount2": {
            "type": "object",
            "required": [
                "accountType",
                "modules",
                "type"
            ],
            "properties": {
                "administrator": {
                    "description": "Administrator user to create in the new company. Leave empty if calling this enpoint as an auditor og accountant company",
                    "$ref": "#/definitions/Employee"
                },
                "customerId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The customer id to an already created customer to create a Tripletex account for."
                },
                "accountType": {
                    "type": "string",
                    "enum": [
                        "TEST",
                        "PAYING"
                    ]
                },
                "modules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SalesModuleDTO"
                    }
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "NONE",
                        "ENK",
                        "AS",
                        "NUF",
                        "ANS",
                        "DA",
                        "PRE",
                        "KS",
                        "ASA",
                        "BBL",
                        "BRL",
                        "GFS",
                        "SPA",
                        "SF",
                        "IKS",
                        "KF_FKF",
                        "FCD",
                        "EOFG",
                        "BA",
                        "STI",
                        "ORG",
                        "ESEK",
                        "SA",
                        "SAM",
                        "BO",
                        "VPFO",
                        "OS",
                        "Other"
                    ]
                },
                "sendEmails": {
                    "type": "boolean",
                    "description": "Should the emails normally sent during creation be sent in this case?",
                    "default": false
                },
                "autoValidateUserLogin": {
                    "type": "boolean",
                    "description": "Should the user be automatically validated?",
                    "default": false
                },
                "createApiToken": {
                    "type": "boolean",
                    "description": "Creates a token for the admin user. The accounting office could also use their tokens so you might not need this.",
                    "default": false
                },
                "sendInvoiceToCustomer": {
                    "type": "boolean",
                    "description": "Should the invoices for this account be sent to the customer?",
                    "default": false
                },
                "customerInvoiceEmail": {
                    "type": "string",
                    "description": "The address to send the invoice to at the customer."
                },
                "numberOfEmployees": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of employees in the customer company. Is used for calculating prices and setting some default settings, i.e. approval settings for timesheet."
                },
                "administratorPassword": {
                    "type": "string",
                    "description": "The password of the administrator user."
                },
                "chartOfAccountsType": {
                    "type": "string",
                    "description": "The chart of accounts to use for the new company",
                    "enum": [
                        "DEFAULT",
                        "MAMUT_STD_PAYROLL",
                        "MAMUT_NARF_PAYROLL",
                        "AGRO_FORRETNING_PAYROLL",
                        "AGRO_LANDBRUK_PAYROLL",
                        "AGRO_FISKE_PAYROLL",
                        "AGRO_FORSOKSRING_PAYROLL",
                        "AGRO_IDRETTSLAG_PAYROLL",
                        "AGRO_FORENING_PAYROLL"
                    ]
                }
            }
        },
        "SalesForceCountryDTO": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "isoAlpha2Code": {
                    "type": "string"
                },
                "isoAlpha3Code": {
                    "type": "string"
                },
                "isoNumericCode": {
                    "type": "string"
                }
            }
        },
        "ResponseWrapperTravelCostCategory": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/TravelCostCategory"
                }
            }
        },
        "ListResponsePaymentTypeOut": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PaymentTypeOut"
                    }
                }
            }
        },
        "ResponseWrapperTravelExpenseRate": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/TravelExpenseRate"
                }
            }
        },
        "TimesheetSalaryTypeSpecification": {
            "type": "object",
            "required": [
                "count",
                "date",
                "employee",
                "salaryType"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "employee": {
                    "$ref": "#/definitions/Employee"
                },
                "salaryType": {
                    "$ref": "#/definitions/SalaryType"
                },
                "description": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "count": {
                    "type": "number"
                }
            }
        },
        "ResponseWrapperAutoLogin": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/AutoLogin"
                }
            }
        },
        "SalaryCompilation": {
            "type": "object",
            "properties": {
                "employee": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "year": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "vacationPayBasis": {
                    "type": "number",
                    "readOnly": true
                },
                "wages": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/SalaryCompilationLine"
                    }
                },
                "expenses": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/SalaryCompilationLine"
                    }
                },
                "deductions": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/SalaryCompilationLine"
                    }
                }
            }
        },
        "ResponseWrapperAltinnCompanyModule": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/AltinnCompanyModule"
                }
            }
        },
        "MessageBodyWorkers": {
            "type": "object"
        },
        "ResponseWrapperSupplier": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Supplier"
                }
            }
        },
        "LeaveOfAbsenceType": {
            "type": "object",
            "required": [
                "leaveOfAbsenceType"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "leaveOfAbsenceType": {
                    "type": "string",
                    "description": "Defines the leave of absence type option.",
                    "enum": [
                        "LEAVE_OF_ABSENCE",
                        "FURLOUGH",
                        "PARENTAL_BENEFITS",
                        "MILITARY_SERVICE",
                        "EDUCATIONAL",
                        "COMPASSIONATE"
                    ]
                },
                "nameNO": {
                    "type": "string",
                    "maxLength": 100
                },
                "code": {
                    "type": "string",
                    "maxLength": 100
                }
            }
        },
        "SalesForceAccountInfo": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "customerId": {
                    "type": "integer",
                    "format": "int32"
                },
                "customerCompanyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "isReseller": {
                    "type": "boolean",
                    "default": false
                },
                "isAccountant": {
                    "type": "boolean",
                    "default": false
                },
                "isAuditor": {
                    "type": "boolean",
                    "default": false
                },
                "isSuspended": {
                    "type": "boolean",
                    "default": false
                },
                "registerDate": {
                    "type": "string",
                    "description": "Tripletex account register Date",
                    "readOnly": true
                },
                "startDate": {
                    "type": "string",
                    "description": "Tripletex account start Date",
                    "readOnly": true
                },
                "endDate": {
                    "type": "string",
                    "description": "Tripletex account end Date",
                    "readOnly": true
                }
            }
        },
        "ListResponseSupplier": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Supplier"
                    }
                }
            }
        },
        "ResponseWrapperPurchaseOrderline": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/PurchaseOrderline"
                }
            }
        },
        "ResponseWrapperVoucherOptions": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/VoucherOptions"
                }
            }
        },
        "ResponseWrapperProductGroupRelation": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ProductGroupRelation"
                }
            }
        },
        "ListResponseDepartment": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Department"
                    }
                }
            }
        },
        "ResponseWrapperDepartment": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Department"
                }
            }
        },
        "ResponseWrapperOrderOffer": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/OrderOffer"
                }
            }
        },
        "ListResponseAnnualAccount": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AnnualAccount"
                    }
                }
            }
        },
        "ProjectInvoiceDetails": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "project": {
                    "description": "The Project related to the Invoice and ProjectInvoiceAdditionalInfo.",
                    "readOnly": true,
                    "$ref": "#/definitions/Project"
                },
                "feeAmount": {
                    "type": "number",
                    "description": "Fee amount of the project. For example: 100 NOK.",
                    "readOnly": true
                },
                "feeAmountCurrency": {
                    "type": "number",
                    "description": "Fee amount of the project in the invoice currency.",
                    "readOnly": true
                },
                "markupPercent": {
                    "type": "number",
                    "description": "The percentage value of mark-up of amountFee. For example: 10%.",
                    "readOnly": true
                },
                "markupAmount": {
                    "type": "number",
                    "description": "The amount value of mark-up of amountFee on the project invoice. For example: 10 NOK.",
                    "readOnly": true
                },
                "markupAmountCurrency": {
                    "type": "number",
                    "description": "The amount value of mark-up of amountFee on the project invoice, in the invoice currency.",
                    "readOnly": true
                },
                "amountOrderLinesAndReinvoicing": {
                    "type": "number",
                    "description": "The amount of chargeable manual order lines and vendor invoices on the project invoice.",
                    "readOnly": true
                },
                "amountOrderLinesAndReinvoicingCurrency": {
                    "type": "number",
                    "description": "The amount of chargeable manual order lines and vendor invoices on the project invoice, in the invoice currency.",
                    "readOnly": true
                },
                "amountTravelReportsAndExpenses": {
                    "type": "number",
                    "description": "The amount of travel costs and expenses on the project invoice.",
                    "readOnly": true
                },
                "amountTravelReportsAndExpensesCurrency": {
                    "type": "number",
                    "description": "The amount of travel costs and expenses on the project invoice, in the invoice currency.",
                    "readOnly": true
                },
                "feeInvoiceText": {
                    "type": "string",
                    "description": "The fee comment on the project invoice.",
                    "readOnly": true
                },
                "invoiceText": {
                    "type": "string",
                    "description": "The comment on the project invoice.",
                    "readOnly": true
                },
                "includeOrderLinesAndReinvoicing": {
                    "type": "boolean",
                    "description": "Determines if extra costs should be included on the project invoice.",
                    "readOnly": true,
                    "default": false
                },
                "includeHours": {
                    "type": "boolean",
                    "description": "Determines if hours should be included on the project invoice.",
                    "readOnly": true,
                    "default": false
                },
                "includeOnAccountBalance": {
                    "type": "boolean",
                    "description": "Determines if akonto should be included on the project invoice.",
                    "readOnly": true,
                    "default": false
                },
                "onAccountBalanceAmount": {
                    "type": "number",
                    "description": "The akonto amount on the project invoice.",
                    "readOnly": true
                },
                "onAccountBalanceAmountCurrency": {
                    "type": "number",
                    "description": "The akonto amount on the project invoice in the invoice currency.",
                    "readOnly": true
                },
                "vatType": {
                    "description": "The VAT type of the project invoice.",
                    "readOnly": true,
                    "$ref": "#/definitions/VatType"
                },
                "invoice": {
                    "readOnly": true,
                    "$ref": "#/definitions/Invoice"
                }
            }
        },
        "ListResponseProject": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Project"
                    }
                }
            }
        },
        "CompanyHoliday": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "year": {
                    "type": "integer",
                    "format": "int32"
                },
                "days": {
                    "type": "number"
                },
                "vacationPayPercentage1": {
                    "type": "number"
                },
                "vacationPayPercentage2": {
                    "type": "number"
                },
                "isMaxPercentage2Amount6G": {
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "ResponseWrapperAppSpecific": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/AppSpecific"
                }
            }
        },
        "PersonAutoCompleteDTO": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "alternateName": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "postalCode": {
                    "type": "string"
                },
                "postalArea": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "score": {
                    "type": "integer",
                    "format": "int32"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "SEARCH1881",
                            "TRIPLETEX",
                            "NICKNAME",
                            "EMPLOYEE",
                            "CONTACT",
                            "ACTIVITY",
                            "PROJECT",
                            "ORDER",
                            "OFFER",
                            "CUSTOMER",
                            "COMPANY",
                            "CONTROLSCHEMA",
                            "HOUR",
                            "TRAVELEXPENSE"
                        ]
                    }
                },
                "firstname": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "phoneNumberMobile": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "countryId": {
                    "type": "integer",
                    "format": "int32"
                },
                "reserved": {
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "Posting": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "voucher": {
                    "readOnly": true,
                    "$ref": "#/definitions/Voucher"
                },
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "account": {
                    "$ref": "#/definitions/Account"
                },
                "customer": {
                    "$ref": "#/definitions/Customer"
                },
                "supplier": {
                    "$ref": "#/definitions/Supplier"
                },
                "employee": {
                    "$ref": "#/definitions/Employee"
                },
                "project": {
                    "$ref": "#/definitions/Project"
                },
                "product": {
                    "$ref": "#/definitions/Product"
                },
                "department": {
                    "$ref": "#/definitions/Department"
                },
                "vatType": {
                    "$ref": "#/definitions/VatType"
                },
                "amount": {
                    "type": "number"
                },
                "amountCurrency": {
                    "type": "number"
                },
                "amountGross": {
                    "type": "number"
                },
                "amountGrossCurrency": {
                    "type": "number"
                },
                "currency": {
                    "$ref": "#/definitions/Currency"
                },
                "closeGroup": {
                    "$ref": "#/definitions/CloseGroup"
                },
                "invoiceNumber": {
                    "type": "string",
                    "maxLength": 100
                },
                "termOfPayment": {
                    "type": "string"
                },
                "row": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0.0
                },
                "systemGenerated": {
                    "type": "boolean",
                    "readOnly": true,
                    "default": false
                }
            }
        },
        "ResponseWrapperInventory": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Inventory"
                }
            }
        },
        "ListResponseSubscription": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Subscription"
                    }
                }
            }
        },
        "ResponseWrapperBankReconciliation": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/BankReconciliation"
                }
            }
        },
        "TimesheetSettings": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "timeClock": {
                    "type": "boolean",
                    "default": false
                },
                "timesheetCompleted": {
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "ResponseWrapperProject": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Project"
                }
            }
        },
        "BankTransaction": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "postedDate": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "maxLength": 255
                },
                "amountCurrency": {
                    "type": "number"
                },
                "bankStatement": {
                    "$ref": "#/definitions/BankStatement"
                }
            }
        },
        "Employment": {
            "type": "object",
            "required": [
                "startDate"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "employee": {
                    "$ref": "#/definitions/Employee"
                },
                "employmentId": {
                    "type": "string",
                    "description": "Existing employment ID used by the current accounting system",
                    "maxLength": 255
                },
                "startDate": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "division": {
                    "$ref": "#/definitions/Division"
                },
                "lastSalaryChangeDate": {
                    "type": "string"
                },
                "noEmploymentRelationship": {
                    "type": "boolean",
                    "description": "Activate pensions and other benefits with no employment relationship.",
                    "default": false
                },
                "isMainEmployer": {
                    "type": "boolean",
                    "description": "Determines if company is main employer for the employee. Default value is true.\u003cbr /\u003eIf true and deduction code is NOT send, value of tax deduction code will be set to loennFraHovedarbeidsgiver \u003cbr /\u003e If false and deduction code is NOT send, value of tax deduction code will be set to loennFraBiarbeidsgiver.\u003cbr /\u003e For other types of Tax Deduction Codes, isMainEmployer does not influence anything.",
                    "default": false
                },
                "taxDeductionCode": {
                    "type": "string",
                    "description": "EMPTY - represents that a tax deduction code is not set on the employment. It is illegal to set the field to this value.  \u003cbr /\u003e Default value of this field is loennFraHovedarbeidsgiver or loennFraBiarbeidsgiver depending on boolean isMainEmployer",
                    "enum": [
                        "loennFraHovedarbeidsgiver",
                        "loennFraBiarbeidsgiver",
                        "pensjon",
                        "loennTilUtenrikstjenestemann",
                        "loennKunTrygdeavgiftTilUtenlandskBorger",
                        "loennKunTrygdeavgiftTilUtenlandskBorgerSomGrensegjenger",
                        "introduksjonsstoenad",
                        "ufoereytelserFraAndre",
                        "EMPTY"
                    ]
                },
                "employmentDetails": {
                    "type": "array",
                    "description": "Employment types tied to the employment",
                    "items": {
                        "$ref": "#/definitions/EmploymentDetails"
                    }
                }
            }
        },
        "ListResponseProjectOrderLine": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProjectOrderLine"
                    }
                }
            }
        },
        "ListResponseLeaveOfAbsence": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LeaveOfAbsence"
                    }
                }
            }
        },
        "ListResponseTravelExpenseRateCategory": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TravelExpenseRateCategory"
                    }
                }
            }
        },
        "InternationalId": {
            "type": "object",
            "properties": {
                "intAmeldingType": {
                    "type": "string",
                    "description": "Define the employee\u0027s International Identificator.\u003cbr\u003ePASSPORT_NO\u003cbr\u003eNATIONAL_INSURANCE_NO\u003cbr\u003eTAX_IDENTIFICATION_NO\u003cbr\u003eVALUE_ADDED_TAX_IDENTIFICATION_NO",
                    "enum": [
                        "PASSPORT_NO",
                        "NATIONAL_INSURANCE_NO",
                        "TAX_IDENTIFICATION_NO",
                        "VALUE_ADDED_TAX_IDENTIFICATION_NO"
                    ]
                },
                "country": {
                    "$ref": "#/definitions/Country"
                },
                "number": {
                    "type": "string",
                    "maxLength": 100
                }
            }
        },
        "ListResponseBankReconciliationPaymentType": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BankReconciliationPaymentType"
                    }
                }
            }
        },
        "ListResponseOrderLine": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrderLine"
                    }
                }
            }
        },
        "ResponseWrapperVoucherType": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/VoucherType"
                }
            }
        },
        "ListResponseLeaveOfAbsenceType": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LeaveOfAbsenceType"
                    }
                }
            }
        },
        "ProjectOrderLine": {
            "type": "object",
            "required": [
                "date",
                "project"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "product": {
                    "$ref": "#/definitions/Product"
                },
                "inventory": {
                    "$ref": "#/definitions/Inventory"
                },
                "description": {
                    "type": "string"
                },
                "count": {
                    "type": "number",
                    "format": "double"
                },
                "unitCostCurrency": {
                    "type": "number",
                    "description": "Unit price purchase (cost) excluding VAT in the order\u0027s currency"
                },
                "unitPriceExcludingVatCurrency": {
                    "type": "number",
                    "description": "Unit price of purchase excluding VAT in the order\u0027s currency"
                },
                "currency": {
                    "description": "The order line\u0027s currency. Determined by the order\u0027s currency.",
                    "readOnly": true,
                    "$ref": "#/definitions/Currency"
                },
                "markup": {
                    "type": "number",
                    "format": "double",
                    "description": "Markup given as a percentage (%)"
                },
                "discount": {
                    "type": "number",
                    "format": "double",
                    "description": "Discount given as a percentage (%)"
                },
                "vatType": {
                    "$ref": "#/definitions/VatType"
                },
                "amountExcludingVatCurrency": {
                    "type": "number",
                    "description": "Total amount on order line excluding VAT in the order\u0027s currency",
                    "readOnly": true
                },
                "amountIncludingVatCurrency": {
                    "type": "number",
                    "description": "Total amount on order line including VAT in the order\u0027s currency",
                    "readOnly": true
                },
                "project": {
                    "$ref": "#/definitions/Project"
                },
                "date": {
                    "type": "string"
                },
                "isChargeable": {
                    "type": "boolean",
                    "default": false
                },
                "isBudget": {
                    "type": "boolean",
                    "readOnly": true,
                    "default": false
                },
                "invoice": {
                    "readOnly": true,
                    "$ref": "#/definitions/Invoice"
                }
            }
        },
        "MonthlyStatus": {
            "type": "object",
            "required": [
                "employee"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "employee": {
                    "$ref": "#/definitions/Employee"
                },
                "date": {
                    "type": "string"
                },
                "hoursPaid": {
                    "type": "number",
                    "format": "double"
                },
                "vacationTransferred": {
                    "type": "number",
                    "format": "double"
                },
                "vacationPaid": {
                    "type": "number",
                    "format": "double"
                },
                "wagePayment": {
                    "$ref": "#/definitions/Payslip"
                },
                "completed": {
                    "type": "boolean",
                    "default": false
                },
                "approved": {
                    "type": "boolean",
                    "default": false
                },
                "approvedBy": {
                    "$ref": "#/definitions/Employee"
                },
                "approvedDate": {
                    "type": "string"
                }
            }
        },
        "ResponseWrapperSalesForceEmployee": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/SalesForceEmployee"
                }
            }
        },
        "ResponseWrapperProjectPeriodHourlyReport": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ProjectPeriodHourlyReport"
                }
            }
        },
        "ResponseWrapperSalarySpecification": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/SalarySpecification"
                }
            }
        },
        "Entitlement": {
            "type": "object",
            "required": [
                "customer",
                "employee",
                "entitlementId"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "employee": {
                    "description": "Employee which has this privilege",
                    "$ref": "#/definitions/Employee"
                },
                "name": {
                    "type": "string",
                    "description": "Descriptive name for the privilege. Might change between releases.",
                    "readOnly": true
                },
                "entitlementId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Unique id for the type of privilege."
                },
                "customer": {
                    "description": "The company this role applies for",
                    "$ref": "#/definitions/Company"
                }
            }
        },
        "ResponseWrapperVoucher": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Voucher"
                }
            }
        },
        "ResponseWrapperSalesForceAccountInfo": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/SalesForceAccountInfo"
                }
            }
        },
        "Address": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "employee": {
                    "$ref": "#/definitions/Employee"
                },
                "addressLine1": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 255
                },
                "addressLine2": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 255
                },
                "postalCode": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 100
                },
                "city": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 100
                },
                "country": {
                    "$ref": "#/definitions/Country"
                }
            }
        },
        "ListResponseCompany": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Company"
                    }
                }
            }
        },
        "BankReconciliationPaymentType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "description": {
                    "type": "string",
                    "description": "Description",
                    "readOnly": true,
                    "maxLength": 255
                },
                "debitAccount": {
                    "description": "Debit account",
                    "readOnly": true,
                    "$ref": "#/definitions/Account"
                },
                "creditAccount": {
                    "description": "Credit account",
                    "readOnly": true,
                    "$ref": "#/definitions/Account"
                },
                "isInactive": {
                    "type": "boolean",
                    "readOnly": true,
                    "default": false
                }
            }
        },
        "ResponseWrapperProjectInvoiceDetails": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ProjectInvoiceDetails"
                }
            }
        },
        "ResponseWrapperNextOfKin": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/NextOfKin"
                }
            }
        },
        "SalaryType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "number": {
                    "type": "string",
                    "maxLength": 10
                },
                "name": {
                    "type": "string",
                    "maxLength": 255
                },
                "description": {
                    "type": "string"
                },
                "showInTimesheet": {
                    "type": "boolean",
                    "readOnly": true,
                    "default": false
                }
            }
        },
        "ResponseWrapperVatType": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/VatType"
                }
            }
        },
        "Stocktaking": {
            "type": "object",
            "required": [
                "date",
                "inventory",
                "typeOfStocktaking"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "number": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "date": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "typeOfStocktaking": {
                    "type": "string",
                    "description": "Define the type of stoctaking.\u003cbr\u003eALL_PRODUCTS_WITH_INVENTORIES: Create a stocktaking for all products with inventories.\u003cbr\u003eINCLUDE_PRODUCTS: Create a stocktaking which includes all products.\u003cbr\u003eNO_PRODUCTS: Create a stocktaking without products.\u003cbr\u003eIf not specified, the value \u0027ALL_PRODUCTS_WITH_INVENTORIES\u0027 is used.",
                    "enum": [
                        "ALL_PRODUCTS_WITH_INVENTORIES",
                        "INCLUDE_PRODUCTS",
                        "NO_PRODUCTS"
                    ]
                },
                "inventory": {
                    "description": "The inventory this applies for",
                    "$ref": "#/definitions/Inventory"
                },
                "isCompleted": {
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "CloseGroup": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "date": {
                    "type": "string"
                },
                "postings": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Posting"
                    }
                }
            }
        },
        "ListResponsePaymentType": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PaymentType"
                    }
                }
            }
        },
        "ProjectSpecificRate": {
            "type": "object",
            "required": [
                "hourlyRate",
                "projectHourlyRate"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "hourlyRate": {
                    "type": "number"
                },
                "hourlyCostPercentage": {
                    "type": "number"
                },
                "projectHourlyRate": {
                    "$ref": "#/definitions/ProjectHourlyRate"
                },
                "employee": {
                    "$ref": "#/definitions/Employee"
                },
                "activity": {
                    "$ref": "#/definitions/Activity"
                }
            }
        },
        "CurrencyExchangeRate": {
            "type": "object",
            "required": [
                "sourceCurrency",
                "targetCurrency"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "targetCurrency": {
                    "$ref": "#/definitions/Currency"
                },
                "sourceCurrency": {
                    "$ref": "#/definitions/Currency"
                },
                "rate": {
                    "type": "number",
                    "minimum": 0.0
                },
                "source": {
                    "type": "string",
                    "description": "Source of exchange rates, i.e Norges Bank",
                    "enum": [
                        "NORGES_BANK",
                        "HALLONEN"
                    ]
                },
                "date": {
                    "type": "string"
                }
            }
        },
        "ResponseWrapperPaymentTypeOut": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/PaymentTypeOut"
                }
            }
        },
        "ExternalProduct": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "maxLength": 255
                },
                "elNumber": {
                    "type": "string",
                    "maxLength": 14
                },
                "nrfNumber": {
                    "type": "string",
                    "maxLength": 14
                },
                "costExcludingVatCurrency": {
                    "type": "number",
                    "description": "Price purchase (cost) excluding VAT in the product\u0027s currency"
                },
                "priceExcludingVatCurrency": {
                    "type": "number",
                    "description": "Price of purchase excluding VAT in the product\u0027s currency"
                },
                "priceIncludingVatCurrency": {
                    "type": "number",
                    "description": "Price of purchase including VAT in the product\u0027s currency"
                },
                "isInactive": {
                    "type": "boolean",
                    "default": false
                },
                "productUnit": {
                    "$ref": "#/definitions/ProductUnit"
                },
                "isStockItem": {
                    "type": "boolean",
                    "default": false
                },
                "vatType": {
                    "$ref": "#/definitions/VatType"
                },
                "currency": {
                    "$ref": "#/definitions/Currency"
                },
                "department": {
                    "$ref": "#/definitions/Department"
                },
                "account": {
                    "$ref": "#/definitions/Account"
                },
                "discountPrice": {
                    "type": "number",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperString": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                }
            }
        },
        "CustomerCategory": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255
                },
                "number": {
                    "type": "string",
                    "maxLength": 100
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0.0
                }
            }
        },
        "TriggerDTO": {
            "type": "object",
            "properties": {
                "calendarName": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nextFireTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "previousFireTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "NextOfKin": {
            "type": "object",
            "required": [
                "name",
                "phoneNumber"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "employee": {
                    "$ref": "#/definitions/Employee"
                },
                "name": {
                    "type": "string",
                    "maxLength": 255
                },
                "phoneNumber": {
                    "type": "string",
                    "maxLength": 20
                },
                "address": {
                    "type": "string",
                    "maxLength": 255
                },
                "typeOfRelationship": {
                    "type": "string",
                    "description": "Define the employee\u0027s next of kin relationtype.\u003cbr\u003eSPOUSE\u003cbr\u003ePARTNER\u003cbr\u003ePARENT\u003cbr\u003eCHILD\u003cbr\u003eSIBLING",
                    "enum": [
                        "SPOUSE",
                        "PARTNER",
                        "PARENT",
                        "CHILD",
                        "SIBLING"
                    ]
                }
            }
        },
        "OrderOffer": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "number": {
                    "type": "string",
                    "maxLength": 100
                },
                "department": {
                    "$ref": "#/definitions/Department"
                },
                "offerDate": {
                    "type": "string"
                },
                "customer": {
                    "description": "The offer\u0027s customer",
                    "$ref": "#/definitions/Customer"
                }
            }
        },
        "TimeClock": {
            "type": "object",
            "required": [
                "date",
                "employee",
                "timeStart",
                "timeStop",
                "timesheetEntry"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "employee": {
                    "$ref": "#/definitions/Employee"
                },
                "project": {
                    "$ref": "#/definitions/Project"
                },
                "activity": {
                    "$ref": "#/definitions/Activity"
                },
                "timesheetEntry": {
                    "$ref": "#/definitions/TimesheetEntry"
                },
                "date": {
                    "type": "string"
                },
                "timeStart": {
                    "type": "string"
                },
                "timeStop": {
                    "type": "string"
                },
                "hoursStart": {
                    "type": "number",
                    "format": "double",
                    "minimum": 0.0
                }
            }
        },
        "ListResponseBankReconciliation": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BankReconciliation"
                    }
                }
            }
        },
        "ResponseWrapperTimeClock": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/TimeClock"
                }
            }
        },
        "ResponseWrapperCustomer": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Customer"
                }
            }
        },
        "BankReconciliationMatch": {
            "type": "object",
            "required": [
                "bankReconciliation"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "bankReconciliation": {
                    "$ref": "#/definitions/BankReconciliation"
                },
                "type": {
                    "type": "string",
                    "description": "Type of match, MANUAL and APPROVED_SUGGESTION are considered part of reconciliation.",
                    "enum": [
                        "MANUAL",
                        "PENDING_SUGGESTION",
                        "REJECTED_SUGGESTION",
                        "APPROVED_SUGGESTION",
                        "ADJUSTMENT",
                        "AUTO_MATCHED",
                        "REJECTED_AUTO_MATCH"
                    ]
                },
                "transactions": {
                    "type": "array",
                    "description": "Match transactions",
                    "items": {
                        "$ref": "#/definitions/BankTransaction"
                    }
                },
                "postings": {
                    "type": "array",
                    "description": "Match postings",
                    "items": {
                        "$ref": "#/definitions/Posting"
                    }
                }
            }
        },
        "ListResponseTravelCostCategory": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TravelCostCategory"
                    }
                }
            }
        },
        "ListResponseOrderOffer": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrderOffer"
                    }
                }
            }
        },
        "ResponseWrapperNotification": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Notification"
                }
            }
        },
        "FormDataContentDisposition": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "parameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "fileName": {
                    "type": "string"
                },
                "creationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "modificationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "readDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "size": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "SupplierBalance": {
            "type": "object",
            "properties": {
                "supplier": {
                    "$ref": "#/definitions/Supplier"
                },
                "balanceIn": {
                    "type": "number",
                    "readOnly": true
                },
                "balanceChange": {
                    "type": "number",
                    "readOnly": true
                },
                "balanceOut": {
                    "type": "number",
                    "readOnly": true
                },
                "balanceInCurrencies": {
                    "type": "array",
                    "description": "Currencies that have been used prior to this period, for the given filter",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Currency"
                    }
                },
                "sumAmountNegative": {
                    "type": "number",
                    "readOnly": true
                }
            }
        },
        "LegacyAddress": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "employee": {
                    "$ref": "#/definitions/Employee"
                },
                "addressLine1": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 255
                },
                "addressLine2": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 255
                },
                "postalCode": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 100
                },
                "city": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 100
                },
                "country": {
                    "$ref": "#/definitions/Country"
                },
                "name": {
                    "type": "string",
                    "maxLength": 100
                }
            }
        },
        "CompanyAutoCompleteDTO": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "alternateName": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "postalCode": {
                    "type": "string"
                },
                "postalArea": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "score": {
                    "type": "integer",
                    "format": "int32"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "SEARCH1881",
                            "TRIPLETEX",
                            "NICKNAME",
                            "EMPLOYEE",
                            "CONTACT",
                            "ACTIVITY",
                            "PROJECT",
                            "ORDER",
                            "OFFER",
                            "CUSTOMER",
                            "COMPANY",
                            "CONTROLSCHEMA",
                            "HOUR",
                            "TRAVELEXPENSE"
                        ]
                    }
                },
                "companyCode": {
                    "type": "string"
                },
                "companyType": {
                    "type": "integer",
                    "format": "int32"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "phoneNumberMobile": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "countryId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ListResponseWorkingHoursScheme": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WorkingHoursScheme"
                    }
                }
            }
        },
        "ListResponseTravelExpenseRateCategoryGroup": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TravelExpenseRateCategoryGroup"
                    }
                }
            }
        },
        "LedgerAccount": {
            "type": "object",
            "properties": {
                "account": {
                    "readOnly": true,
                    "$ref": "#/definitions/Account"
                },
                "sumAmount": {
                    "type": "number",
                    "readOnly": true
                },
                "currency": {
                    "readOnly": true,
                    "$ref": "#/definitions/Currency"
                },
                "sumAmountCurrency": {
                    "type": "number",
                    "readOnly": true
                },
                "openingBalance": {
                    "type": "number",
                    "readOnly": true
                },
                "openingBalanceCurrency": {
                    "type": "number",
                    "readOnly": true
                },
                "closingBalance": {
                    "type": "number",
                    "readOnly": true
                },
                "closingBalanceCurrency": {
                    "type": "number",
                    "readOnly": true
                },
                "postings": {
                    "type": "array",
                    "description": "Link to postings on this account.",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Posting"
                    }
                }
            }
        },
        "ResponseWrapperBankReconciliationPaymentType": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/BankReconciliationPaymentType"
                }
            }
        },
        "Division": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255
                },
                "startDate": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "organizationNumber": {
                    "type": "string",
                    "maxLength": 100
                },
                "municipality": {
                    "$ref": "#/definitions/Municipality"
                }
            }
        },
        "Supplier": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "maxLength": 255
                },
                "organizationNumber": {
                    "type": "string",
                    "maxLength": 100
                },
                "supplierNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "customerNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "isSupplier": {
                    "type": "boolean",
                    "readOnly": true,
                    "default": false
                },
                "isCustomer": {
                    "type": "boolean",
                    "description": "Determine if the supplier is also a customer",
                    "default": false
                },
                "isInactive": {
                    "type": "boolean",
                    "readOnly": true,
                    "default": false
                },
                "email": {
                    "type": "string",
                    "format": "email",
                    "minLength": 0,
                    "maxLength": 254
                },
                "bankAccounts": {
                    "type": "array",
                    "description": "List of the bank account numbers for this supplier.  Norwegian bank account numbers only.",
                    "items": {
                        "type": "string"
                    }
                },
                "invoiceEmail": {
                    "type": "string",
                    "format": "email",
                    "minLength": 0,
                    "maxLength": 254
                },
                "overdueNoticeEmail": {
                    "type": "string",
                    "format": "email",
                    "description": "The email address of the customer where the noticing emails are sent in case of an overdue",
                    "minLength": 0,
                    "maxLength": 254
                },
                "phoneNumber": {
                    "type": "string",
                    "maxLength": 100
                },
                "phoneNumberMobile": {
                    "type": "string",
                    "maxLength": 100
                },
                "description": {
                    "type": "string"
                },
                "isPrivateIndividual": {
                    "type": "boolean",
                    "default": false
                },
                "showProducts": {
                    "type": "boolean",
                    "default": false
                },
                "accountManager": {
                    "readOnly": true,
                    "$ref": "#/definitions/Employee"
                },
                "postalAddress": {
                    "$ref": "#/definitions/Address"
                },
                "physicalAddress": {
                    "$ref": "#/definitions/Address"
                },
                "deliveryAddress": {
                    "$ref": "#/definitions/DeliveryAddress"
                },
                "category1": {
                    "description": "Category 1 of this supplier",
                    "$ref": "#/definitions/CustomerCategory"
                },
                "category2": {
                    "description": "Category 2 of this supplier",
                    "$ref": "#/definitions/CustomerCategory"
                },
                "category3": {
                    "description": "Category 3 of this supplier",
                    "$ref": "#/definitions/CustomerCategory"
                }
            }
        },
        "ProjectParticipant": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "project": {
                    "$ref": "#/definitions/Project"
                },
                "employee": {
                    "$ref": "#/definitions/Employee"
                },
                "adminAccess": {
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "ListResponseExternalProduct": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ExternalProduct"
                    }
                }
            }
        },
        "ProjectPeriodHourlyReport": {
            "type": "object",
            "properties": {
                "chargeableHours": {
                    "type": "number",
                    "readOnly": true
                },
                "nonChargeableHours": {
                    "type": "number",
                    "readOnly": true
                },
                "approvedButUnchargedHours": {
                    "type": "number",
                    "readOnly": true
                },
                "nonApprovedHours": {
                    "type": "number",
                    "readOnly": true
                },
                "registeredHours": {
                    "type": "number",
                    "readOnly": true
                }
            }
        },
        "ListResponseOccupationCode": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OccupationCode"
                    }
                }
            }
        },
        "ResponseWrapperSalesModuleDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/SalesModuleDTO"
                }
            }
        },
        "SessionToken": {
            "type": "object",
            "required": [
                "expirationDate"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "consumerToken": {
                    "$ref": "#/definitions/ConsumerToken"
                },
                "employeeToken": {
                    "$ref": "#/definitions/EmployeeToken"
                },
                "expirationDate": {
                    "type": "string"
                },
                "token": {
                    "type": "string",
                    "maxLength": 100
                },
                "encryptionKey": {
                    "type": "string",
                    "readOnly": true,
                    "maxLength": 100
                }
            }
        },
        "Banner": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "bannerType": {
                    "type": "string",
                    "readOnly": true
                },
                "title": {
                    "type": "string",
                    "readOnly": true,
                    "maxLength": 255
                },
                "message": {
                    "type": "string",
                    "readOnly": true
                },
                "button": {
                    "type": "string",
                    "readOnly": true,
                    "maxLength": 255
                },
                "link": {
                    "type": "string",
                    "readOnly": true
                },
                "tag": {
                    "type": "string",
                    "readOnly": true,
                    "maxLength": 255
                },
                "done": {
                    "type": "boolean",
                    "readOnly": true,
                    "default": false
                }
            }
        },
        "ListResponseContact": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Contact"
                    }
                }
            }
        },
        "ResponseWrapperTravelExpense": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/TravelExpense"
                }
            }
        },
        "FormDataBodyPart": {
            "type": "object",
            "properties": {
                "contentDisposition": {
                    "$ref": "#/definitions/ContentDisposition"
                },
                "entity": {
                    "type": "object"
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "mediaType": {
                    "$ref": "#/definitions/MediaType"
                },
                "messageBodyWorkers": {
                    "$ref": "#/definitions/MessageBodyWorkers"
                },
                "parent": {
                    "$ref": "#/definitions/MultiPart"
                },
                "providers": {
                    "$ref": "#/definitions/Providers"
                },
                "simple": {
                    "type": "boolean",
                    "default": false
                },
                "formDataContentDisposition": {
                    "$ref": "#/definitions/FormDataContentDisposition"
                },
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "parameterizedHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/ParameterizedHeader"
                        }
                    }
                }
            }
        },
        "PurchaseOrder": {
            "type": "object",
            "required": [
                "deliveryDate",
                "ourContact",
                "supplier"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "number": {
                    "type": "string",
                    "description": "Purchase order number",
                    "readOnly": true,
                    "maxLength": 100
                },
                "supplier": {
                    "$ref": "#/definitions/Supplier"
                },
                "deliveryDate": {
                    "type": "string"
                },
                "orderLines": {
                    "type": "array",
                    "description": "Order lines tied to the purchase order",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/PurchaseOrderline"
                    }
                },
                "project": {
                    "description": "Project/order",
                    "$ref": "#/definitions/Project"
                },
                "department": {
                    "description": "Department/order",
                    "$ref": "#/definitions/Department"
                },
                "deliveryAddress": {
                    "description": "Address/order",
                    "$ref": "#/definitions/Address"
                },
                "creationDate": {
                    "type": "string"
                },
                "isClosed": {
                    "type": "boolean",
                    "default": false
                },
                "ourContact": {
                    "$ref": "#/definitions/Employee"
                },
                "supplierContact": {
                    "description": "Recipient when purchase order is send by email.",
                    "$ref": "#/definitions/Employee"
                },
                "status": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "STATUS_OPEN",
                        "STATUS_SENT",
                        "STATUS_CONFIRMED",
                        "STATUS_RECEIVING"
                    ]
                }
            }
        },
        "Prospect": {
            "type": "object",
            "required": [
                "createdDate"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "maxLength": 255
                },
                "description": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string"
                },
                "customer": {
                    "$ref": "#/definitions/Customer"
                },
                "salesEmployee": {
                    "$ref": "#/definitions/Employee"
                },
                "isClosed": {
                    "type": "boolean",
                    "default": false
                },
                "closedReason": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0.0
                },
                "closedDate": {
                    "type": "string"
                },
                "competitor": {
                    "type": "string",
                    "maxLength": 255
                },
                "prospectType": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1.0
                },
                "project": {
                    "description": "The project connected to this prospect.",
                    "$ref": "#/definitions/Project"
                },
                "projectOffer": {
                    "description": "The project offer connected to this prospect.",
                    "$ref": "#/definitions/Project"
                },
                "finalIncomeDate": {
                    "type": "string",
                    "description": "The estimated start date for income on the prospect."
                },
                "finalInitialValue": {
                    "type": "number",
                    "description": "The estimated startup fee on this prospect."
                },
                "finalMonthlyValue": {
                    "type": "number",
                    "description": "The estimated monthly fee on this prospect."
                },
                "finalAdditionalServicesValue": {
                    "type": "number",
                    "description": "Tripletex specific."
                },
                "totalValue": {
                    "type": "number",
                    "description": "The estimated total fee on this prospect.",
                    "readOnly": true
                }
            }
        },
        "BodyPart": {
            "type": "object",
            "properties": {
                "contentDisposition": {
                    "$ref": "#/definitions/ContentDisposition"
                },
                "entity": {
                    "type": "object"
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "mediaType": {
                    "$ref": "#/definitions/MediaType"
                },
                "messageBodyWorkers": {
                    "$ref": "#/definitions/MessageBodyWorkers"
                },
                "parent": {
                    "$ref": "#/definitions/MultiPart"
                },
                "providers": {
                    "$ref": "#/definitions/Providers"
                },
                "parameterizedHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/ParameterizedHeader"
                        }
                    }
                }
            }
        },
        "Task": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperBoolean": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "Inventories": {
            "type": "object",
            "properties": {
                "product": {
                    "readOnly": true,
                    "$ref": "#/definitions/Product"
                },
                "stock": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Stock"
                    }
                }
            }
        },
        "SalaryCompilationLine": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "readOnly": true
                },
                "amount": {
                    "type": "number",
                    "readOnly": true
                },
                "taxable": {
                    "type": "boolean",
                    "readOnly": true,
                    "default": false
                },
                "taxableDescription": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "TravelPaymentType": {
            "type": "object",
            "required": [
                "description"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "description": {
                    "type": "string",
                    "maxLength": 255
                },
                "account": {
                    "$ref": "#/definitions/Account"
                },
                "showOnTravelExpenses": {
                    "type": "boolean",
                    "readOnly": true,
                    "default": false
                },
                "showOnEmployeeExpenses": {
                    "type": "boolean",
                    "readOnly": true,
                    "default": false
                },
                "isInactive": {
                    "type": "boolean",
                    "readOnly": true,
                    "default": false
                }
            }
        },
        "OccupationCode": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "nameNO": {
                    "type": "string",
                    "maxLength": 100
                },
                "code": {
                    "type": "string",
                    "maxLength": 7
                }
            }
        },
        "EmploymentType": {
            "type": "object",
            "required": [
                "employmentType"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "employmentType": {
                    "type": "string",
                    "description": "Defines the employment type option. ",
                    "enum": [
                        "ORDINARY",
                        "MARITIME",
                        "FREELANCE"
                    ]
                },
                "nameNO": {
                    "type": "string",
                    "maxLength": 100
                },
                "code": {
                    "type": "string",
                    "maxLength": 100
                }
            }
        },
        "ResponseWrapperPerDiemCompensation": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/PerDiemCompensation"
                }
            }
        },
        "StandardTime": {
            "type": "object",
            "required": [
                "fromDate",
                "hoursPerDay"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "employee": {
                    "$ref": "#/definitions/Employee"
                },
                "fromDate": {
                    "type": "string"
                },
                "hoursPerDay": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "TripletexAccount2": {
            "type": "object",
            "required": [
                "accountType",
                "administratorPassword",
                "company",
                "modules",
                "numberOfVouchers"
            ],
            "properties": {
                "company": {
                    "description": "Information about the company to create. Supply as much info as you have, but at least name, type and address.",
                    "$ref": "#/definitions/Company"
                },
                "administrator": {
                    "description": "Employee to create. Department on this object will also be created if supplied. If null a dummy user and department will be created instead",
                    "$ref": "#/definitions/Employee"
                },
                "accountType": {
                    "type": "string",
                    "description": "Is this a test account or a paying account?",
                    "enum": [
                        "TEST",
                        "PAYING"
                    ]
                },
                "modules": {
                    "type": "array",
                    "description": "Sales modules (functionality in the application) to activate for the newly created account. Some modules have extra costs.",
                    "items": {
                        "$ref": "#/definitions/SalesModuleDTO"
                    }
                },
                "administratorPassword": {
                    "type": "string",
                    "description": "Password for the administrator user to create. Not a part of the administrator employee object since this is a value that never can be read (it is salted and hashed before storing)"
                },
                "sendEmails": {
                    "type": "boolean",
                    "description": "Should the regular creation emails be sent to the company created and its users? If false you probably want to set autoValidateUserLogin to true",
                    "default": false
                },
                "autoValidateUserLogin": {
                    "type": "boolean",
                    "description": "If true, the users created will be allowed to log in without validating their email address. ONLY USE THIS IF YOU ALREADY HAVE VALIDATED THE USER EMAILS.",
                    "default": false
                },
                "createAdministratorApiToken": {
                    "type": "boolean",
                    "description": "Create an API token for the administrator user for the consumer token used during this call. The token will be returned in the response.",
                    "default": false
                },
                "createCompanyOwnedApiToken": {
                    "type": "boolean",
                    "description": "Create an API token for the company to use to call their clients, only possible for accounting and auditor accounts. The token will be returned in the response.",
                    "default": false
                },
                "mayCreateTripletexAccounts": {
                    "type": "boolean",
                    "description": "Should the company we are creating be able to create new Tripletex accounts?",
                    "default": false
                },
                "numberOfVouchers": {
                    "type": "string",
                    "description": "Used to calculate prices.",
                    "enum": [
                        "INTERVAL_0_100",
                        "INTERVAL_101_500",
                        "INTERVAL_0_500",
                        "INTERVAL_501_1000",
                        "INTERVAL_1001_2000",
                        "INTERVAL_2001_3500",
                        "INTERVAL_3501_5000",
                        "INTERVAL_5001_10000",
                        "INTERVAL_UNLIMITED"
                    ]
                },
                "chartOfAccountsType": {
                    "type": "string",
                    "description": "The chart of accounts to use for the new company",
                    "enum": [
                        "DEFAULT",
                        "MAMUT_STD_PAYROLL",
                        "MAMUT_NARF_PAYROLL",
                        "AGRO_FORRETNING_PAYROLL",
                        "AGRO_LANDBRUK_PAYROLL",
                        "AGRO_FISKE_PAYROLL",
                        "AGRO_FORSOKSRING_PAYROLL",
                        "AGRO_IDRETTSLAG_PAYROLL",
                        "AGRO_FORENING_PAYROLL"
                    ]
                },
                "auditor": {
                    "type": "boolean",
                    "default": false
                },
                "reseller": {
                    "type": "boolean",
                    "default": false
                },
                "accountingOffice": {
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "ListResponseNotification": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Notification"
                    }
                }
            }
        },
        "ResponseWrapperInvoice": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Invoice"
                }
            }
        },
        "ResponseWrapperApiConsumer": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ApiConsumer"
                }
            }
        },
        "EventInfoDTO": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "payloadModel": {
                    "type": "string"
                },
                "examples": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WebHookWrapper"
                    }
                }
            }
        },
        "VoucherSearchResponse": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Voucher"
                    }
                },
                "totalNumberOfPostings": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Number of postings returned (if postings are returned)"
                }
            }
        },
        "ResponseWrapperAccount": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Account"
                }
            }
        },
        "ResponseWrapperSalaryTransaction": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/SalaryTransaction"
                }
            }
        },
        "CompanyAuthorityDTO": {
            "type": "object",
            "properties": {
                "hasCompanyAuthority": {
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "ResponseWrapperDashboardDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/DashboardDTO"
                }
            }
        },
        "Payslip": {
            "type": "object",
            "required": [
                "employee"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "transaction": {
                    "$ref": "#/definitions/SalaryTransaction"
                },
                "employee": {
                    "$ref": "#/definitions/Employee"
                },
                "date": {
                    "type": "string",
                    "description": "Voucher date."
                },
                "year": {
                    "type": "integer",
                    "format": "int32"
                },
                "month": {
                    "type": "integer",
                    "format": "int32"
                },
                "specifications": {
                    "type": "array",
                    "description": "Link to salary specifications.",
                    "items": {
                        "$ref": "#/definitions/SalarySpecification"
                    }
                },
                "vacationAllowanceAmount": {
                    "type": "number",
                    "readOnly": true
                },
                "grossAmount": {
                    "type": "number",
                    "readOnly": true
                },
                "amount": {
                    "type": "number",
                    "readOnly": true
                },
                "number": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true,
                    "minimum": 0.0
                }
            }
        },
        "MaventaEventDataDTO": {
            "type": "object",
            "required": [
                "destination",
                "invoice_id",
                "invoice_number",
                "recipient_bid",
                "recipient_name"
            ],
            "properties": {
                "invoice_id": {
                    "type": "string",
                    "readOnly": true
                },
                "invoice_number": {
                    "type": "string",
                    "readOnly": true
                },
                "destination": {
                    "type": "string",
                    "readOnly": true
                },
                "recipient_name": {
                    "type": "string",
                    "readOnly": true
                },
                "recipient_bid": {
                    "type": "string",
                    "readOnly": true
                },
                "error_message": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperProductLine": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ProductLine"
                }
            }
        },
        "ListResponseProductUnit": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProductUnit"
                    }
                }
            }
        },
        "UnreadCountDTO": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "readCursor": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "DocumentArchive": {
            "type": "object",
            "required": [
                "fileName",
                "mimeType"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "fileName": {
                    "type": "string",
                    "description": "The name of the document.",
                    "maxLength": 255
                },
                "size": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The size of the document in readable format.",
                    "readOnly": true,
                    "minimum": 0.0
                },
                "archiveDate": {
                    "type": "string"
                },
                "mimeType": {
                    "type": "string",
                    "description": "Type of the document",
                    "maxLength": 100
                }
            }
        },
        "SalesForceEmployeeRole": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "companyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "employeeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "roleId": {
                    "type": "integer",
                    "format": "int32"
                },
                "userId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tripletexCustomerId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "TravelExpenseSettings": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "useRates": {
                    "type": "boolean",
                    "default": false
                },
                "approvalRequired": {
                    "type": "boolean",
                    "default": false
                },
                "taxFreePerDiemRates": {
                    "type": "boolean",
                    "default": false
                },
                "taxFreeMileageRates": {
                    "type": "boolean",
                    "default": false
                },
                "perDiemNotCompensated": {
                    "type": "boolean",
                    "default": false
                },
                "accommodationNotCompensated": {
                    "type": "boolean",
                    "default": false
                },
                "mileageNotCompensated": {
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "ListResponseTravelExpense": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TravelExpense"
                    }
                }
            }
        },
        "ListResponseSupplierBalance": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SupplierBalance"
                    }
                }
            }
        },
        "ResponseWrapperSalaryCompilation": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/SalaryCompilation"
                }
            }
        },
        "TravelExpenseRateCategory": {
            "type": "object",
            "required": [
                "fromDate",
                "toDate"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "readOnly": true
                },
                "ameldingWageCode": {
                    "type": "integer",
                    "format": "int32"
                },
                "wageCodeNumber": {
                    "type": "string",
                    "maxLength": 10
                },
                "isValidDayTrip": {
                    "type": "boolean",
                    "default": false
                },
                "isValidAccommodation": {
                    "type": "boolean",
                    "default": false
                },
                "isValidDomestic": {
                    "type": "boolean",
                    "default": false
                },
                "isValidForeignTravel": {
                    "type": "boolean",
                    "default": false
                },
                "isRequiresZone": {
                    "type": "boolean",
                    "default": false
                },
                "isRequiresOvernightAccommodation": {
                    "type": "boolean",
                    "default": false
                },
                "fromDate": {
                    "type": "string"
                },
                "toDate": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "PER_DIEM",
                        "ACCOMMODATION_ALLOWANCE",
                        "MILEAGE_ALLOWANCE"
                    ]
                }
            }
        },
        "EmployeeToken": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "employee": {
                    "$ref": "#/definitions/Employee"
                },
                "apiConsumer": {
                    "$ref": "#/definitions/ApiConsumer"
                },
                "token": {
                    "type": "string",
                    "maxLength": 100
                },
                "expirationDate": {
                    "type": "string"
                }
            }
        },
        "ResponseWrapperTravelExpenseSettings": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/TravelExpenseSettings"
                }
            }
        },
        "ResponseWrapperPageOptions": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/PageOptions"
                }
            }
        },
        "ResponseWrapperPosting": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Posting"
                }
            }
        },
        "PaymentType": {
            "type": "object",
            "required": [
                "description"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "description": {
                    "type": "string",
                    "maxLength": 255
                },
                "debitAccount": {
                    "$ref": "#/definitions/Account"
                },
                "creditAccount": {
                    "$ref": "#/definitions/Account"
                },
                "vatType": {
                    "$ref": "#/definitions/VatType"
                },
                "customer": {
                    "readOnly": true,
                    "$ref": "#/definitions/Customer"
                },
                "supplier": {
                    "readOnly": true,
                    "$ref": "#/definitions/Supplier"
                }
            }
        },
        "ListResponseRemunerationType": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RemunerationType"
                    }
                }
            }
        },
        "ResponseWrapperSessionToken": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/SessionToken"
                }
            }
        },
        "ResponseWrapperProjectActivity": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ProjectActivity"
                }
            }
        },
        "HourlyCostAndRate": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "employee": {
                    "$ref": "#/definitions/Employee"
                },
                "date": {
                    "type": "string"
                },
                "rate": {
                    "type": "number"
                },
                "budgetRate": {
                    "type": "number"
                },
                "hourCostRate": {
                    "type": "number"
                }
            }
        },
        "ListResponseDocumentArchive": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DocumentArchive"
                    }
                }
            }
        },
        "ListResponseCustomer": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Customer"
                    }
                }
            }
        },
        "ResponseWrapperTripletexAccountReturn": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/TripletexAccountReturn"
                }
            }
        },
        "ListResponseEmployeeCompanyDTO": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EmployeeCompanyDTO"
                    }
                }
            }
        },
        "ResponseWrapperProjectSpecificRate": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ProjectSpecificRate"
                }
            }
        },
        "ListResponseHourlyCostAndRate": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HourlyCostAndRate"
                    }
                }
            }
        },
        "ResponseWrapperCustomerCategory": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/CustomerCategory"
                }
            }
        },
        "ResponseWrapperProjectParticipant": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ProjectParticipant"
                }
            }
        },
        "ListResponseTravelPaymentType": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TravelPaymentType"
                    }
                }
            }
        },
        "ProductGroup": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "description": "Product group name",
                    "maxLength": 255
                },
                "parentGroup": {
                    "description": "Product group parent",
                    "$ref": "#/definitions/ProductGroup"
                }
            }
        },
        "ListResponseProductGroupRelation": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProductGroupRelation"
                    }
                }
            }
        },
        "ResponseWrapperWeek": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Week"
                }
            }
        },
        "ResponseWrapperExternalProduct": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ExternalProduct"
                }
            }
        },
        "Activity": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "maxLength": 255
                },
                "number": {
                    "type": "string",
                    "maxLength": 100
                },
                "description": {
                    "type": "string"
                },
                "activityType": {
                    "type": "string",
                    "description": "PROJECT_SPECIFIC_ACTIVITY are made via project/projectactivity, as they must be part of a project.",
                    "enum": [
                        "GENERAL_ACTIVITY",
                        "PROJECT_GENERAL_ACTIVITY",
                        "PROJECT_SPECIFIC_ACTIVITY",
                        "TASK"
                    ]
                },
                "isProjectActivity": {
                    "type": "boolean",
                    "description": "Manipulate these with ActivityType",
                    "readOnly": true,
                    "default": false
                },
                "isGeneral": {
                    "type": "boolean",
                    "description": "Manipulate these with ActivityType",
                    "readOnly": true,
                    "default": false
                },
                "isTask": {
                    "type": "boolean",
                    "description": "Manipulate these with ActivityType",
                    "readOnly": true,
                    "default": false
                },
                "isChargeable": {
                    "type": "boolean",
                    "default": false
                },
                "rate": {
                    "type": "number"
                }
            }
        },
        "ListResponseNextOfKin": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NextOfKin"
                    }
                }
            }
        },
        "Document": {
            "type": "object",
            "required": [
                "fileName"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "fileName": {
                    "type": "string",
                    "description": "The name of the document.",
                    "maxLength": 255
                },
                "size": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The size of the document in bytes.",
                    "readOnly": true,
                    "minimum": 0.0
                },
                "mimeType": {
                    "type": "string",
                    "example": "type/subtype of resource. E.g. application/pdf",
                    "description": "Type of the document",
                    "readOnly": true,
                    "maxLength": 100
                }
            }
        },
        "ResponseWrapperEventInfoDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/EventInfoDTO"
                }
            }
        },
        "ResponseWrapperMonthlyStatus": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/MonthlyStatus"
                }
            }
        },
        "Department": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255
                },
                "departmentNumber": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 100
                },
                "departmentManager": {
                    "$ref": "#/definitions/Employee"
                }
            }
        },
        "ProjectPeriodInvoicingReserve": {
            "type": "object",
            "properties": {
                "invoiceFeeReserveCurrency": {
                    "type": "number",
                    "readOnly": true
                },
                "periodOrderLinesIncomeCurrency": {
                    "type": "number",
                    "readOnly": true
                },
                "invoiceExtracostsReserveCurrency": {
                    "type": "number",
                    "readOnly": true
                },
                "invoiceAkontoReserveAmountCurrency": {
                    "type": "number",
                    "readOnly": true
                },
                "invoiceReserveTotalAmountCurrency": {
                    "type": "number",
                    "readOnly": true
                }
            }
        },
        "ListResponseSalarySpecification": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SalarySpecification"
                    }
                }
            }
        },
        "ListResponseGoodsReceipt": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GoodsReceipt"
                    }
                }
            }
        },
        "Currency": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "code": {
                    "type": "string",
                    "maxLength": 10
                },
                "description": {
                    "type": "string",
                    "maxLength": 100
                },
                "factor": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1.0,
                    "maximum": 100.0
                }
            }
        },
        "ResponseWrapperProjectHourlyRate": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ProjectHourlyRate"
                }
            }
        },
        "MediaType": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "subtype": {
                    "type": "string"
                },
                "parameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "wildcardType": {
                    "type": "boolean",
                    "default": false
                },
                "wildcardSubtype": {
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "ListResponseBankStatement": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BankStatement"
                    }
                }
            }
        },
        "ListResponseEmployee": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Employee"
                    }
                }
            }
        },
        "ListResponseStandardTime": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/StandardTime"
                    }
                }
            }
        },
        "ListResponseBank": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Bank"
                    }
                }
            }
        },
        "ResponseWrapperCost": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Cost"
                }
            }
        },
        "AccountingPeriod": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "readOnly": true,
                    "maxLength": 255
                },
                "number": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true,
                    "minimum": 0.0,
                    "maximum": 11.0
                },
                "start": {
                    "type": "string",
                    "readOnly": true
                },
                "end": {
                    "type": "string",
                    "readOnly": true
                },
                "isClosed": {
                    "type": "boolean",
                    "readOnly": true,
                    "default": false
                }
            }
        },
        "ProjectHourlyRate": {
            "type": "object",
            "required": [
                "hourlyRateModel",
                "startDate"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "project": {
                    "$ref": "#/definitions/Project"
                },
                "startDate": {
                    "type": "string"
                },
                "showInProjectOrder": {
                    "type": "boolean",
                    "description": "Show on contract confirmation/offers",
                    "default": false
                },
                "hourlyRateModel": {
                    "type": "string",
                    "description": "Defines the model used for the hourly rate.",
                    "enum": [
                        "TYPE_PREDEFINED_HOURLY_RATES",
                        "TYPE_PROJECT_SPECIFIC_HOURLY_RATES",
                        "TYPE_FIXED_HOURLY_RATE"
                    ]
                },
                "projectSpecificRates": {
                    "type": "array",
                    "description": "Project specific rates if hourlyRateModel is TYPE_PROJECT_SPECIFIC_HOURLY_RATES. ",
                    "items": {
                        "$ref": "#/definitions/ProjectSpecificRate"
                    }
                },
                "fixedRate": {
                    "type": "number",
                    "description": "Fixed Hourly rates if hourlyRateModel is TYPE_FIXED_HOURLY_RATE."
                }
            }
        },
        "ResponseWrapperProjectPeriodInvoicingReserve": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ProjectPeriodInvoicingReserve"
                }
            }
        },
        "Project": {
            "type": "object",
            "required": [
                "isInternal",
                "name",
                "projectManager",
                "startDate"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "maxLength": 255
                },
                "number": {
                    "type": "string",
                    "maxLength": 100
                },
                "displayName": {
                    "type": "string",
                    "readOnly": true
                },
                "description": {
                    "type": "string"
                },
                "projectManager": {
                    "$ref": "#/definitions/Employee"
                },
                "department": {
                    "$ref": "#/definitions/Department"
                },
                "mainProject": {
                    "$ref": "#/definitions/Project"
                },
                "startDate": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "customer": {
                    "description": "The project\u0027s customer",
                    "$ref": "#/definitions/Customer"
                },
                "isClosed": {
                    "type": "boolean",
                    "default": false
                },
                "isReadyForInvoicing": {
                    "type": "boolean",
                    "default": false
                },
                "isInternal": {
                    "type": "boolean",
                    "default": false
                },
                "isOffer": {
                    "type": "boolean",
                    "readOnly": true,
                    "default": false
                },
                "isFixedPrice": {
                    "type": "boolean",
                    "description": "Project is fixed price if set to true, hourly rate if set to false.",
                    "default": false
                },
                "projectCategory": {
                    "$ref": "#/definitions/ProjectCategory"
                },
                "deliveryAddress": {
                    "readOnly": true,
                    "$ref": "#/definitions/DeliveryAddress"
                },
                "displayNameFormat": {
                    "type": "string",
                    "description": "Defines project name presentation in overviews.",
                    "enum": [
                        "NAME_STANDARD",
                        "NAME_INCL_CUSTOMER_NAME",
                        "NAME_INCL_PARENT_NAME",
                        "NAME_INCL_PARENT_NUMBER",
                        "NAME_INCL_PARENT_NAME_AND_NUMBER"
                    ]
                },
                "externalAccountsNumber": {
                    "type": "string",
                    "maxLength": 100
                },
                "discountPercentage": {
                    "type": "number",
                    "description": "Project discount percentage.",
                    "readOnly": true
                },
                "extraPercentOrderLines": {
                    "type": "number",
                    "description": "Project markup percentage.",
                    "readOnly": true
                },
                "vatType": {
                    "description": "The default vat type for this project.",
                    "$ref": "#/definitions/VatType"
                },
                "fixedprice": {
                    "type": "number",
                    "description": "Fixed price amount, in the project\u0027s currency."
                },
                "contributionMarginPercent": {
                    "type": "number",
                    "readOnly": true
                },
                "numberOfSubProjects": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "numberOfProjectParticipants": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "orderLines": {
                    "type": "array",
                    "description": "Order lines tied to the order",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/ProjectOrderLine"
                    }
                },
                "currency": {
                    "$ref": "#/definitions/Currency"
                },
                "markUpOrderLines": {
                    "type": "number",
                    "description": "Set mark-up (%) for order lines."
                },
                "markUpFeesEarned": {
                    "type": "number",
                    "description": "Set mark-up (%) for fees earned."
                },
                "isPriceCeiling": {
                    "type": "boolean",
                    "description": "Set to true if an hourly rate project has a price ceiling.",
                    "default": false
                },
                "priceCeilingAmount": {
                    "type": "number",
                    "description": "Price ceiling amount, in the project\u0027s currency."
                },
                "projectHourlyRates": {
                    "type": "array",
                    "description": "Project Rate Types tied to the project.",
                    "items": {
                        "$ref": "#/definitions/ProjectHourlyRate"
                    }
                },
                "forParticipantsOnly": {
                    "type": "boolean",
                    "description": "Set to true if only project participants can register information on the project",
                    "default": false
                },
                "participants": {
                    "type": "array",
                    "description": "Link to individual project participants.",
                    "items": {
                        "$ref": "#/definitions/ProjectParticipant"
                    }
                },
                "contact": {
                    "readOnly": true,
                    "$ref": "#/definitions/Contact"
                },
                "invoicingPlan": {
                    "type": "array",
                    "description": "Invoicing plans tied to the project",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Invoice"
                    }
                },
                "preliminaryInvoice": {
                    "readOnly": true,
                    "$ref": "#/definitions/Invoice"
                },
                "generalProjectActivitiesPerProjectOnly": {
                    "type": "boolean",
                    "description": "Set to true if a general project activity must be linked to project to allow time tracking.",
                    "default": false
                },
                "projectActivities": {
                    "type": "array",
                    "description": "Project Activities",
                    "items": {
                        "$ref": "#/definitions/ProjectActivity"
                    }
                }
            }
        },
        "ListResponseAccountingPeriod": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AccountingPeriod"
                    }
                }
            }
        },
        "ResponseWrapperProjectCategory": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ProjectCategory"
                }
            }
        },
        "LoggedInUserInfoDTO": {
            "type": "object",
            "properties": {
                "employeeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "employee": {
                    "$ref": "#/definitions/Employee"
                },
                "companyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "company": {
                    "$ref": "#/definitions/Company"
                },
                "language": {
                    "type": "string"
                }
            }
        },
        "TripletexAccountReturn": {
            "type": "object",
            "properties": {
                "company": {
                    "$ref": "#/definitions/Company"
                },
                "administrator": {
                    "$ref": "#/definitions/Employee"
                },
                "administratorApiToken": {
                    "$ref": "#/definitions/EmployeeToken"
                },
                "companyOwnedApiToken": {
                    "$ref": "#/definitions/EmployeeToken"
                },
                "companyOwnedApiTokenRobotId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Inventory": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255
                },
                "number": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                },
                "isMainInventory": {
                    "type": "boolean",
                    "default": false
                },
                "isInactive": {
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "Stock": {
            "type": "object",
            "properties": {
                "inventory": {
                    "type": "string",
                    "readOnly": true,
                    "maxLength": 255
                },
                "openingStock": {
                    "type": "number",
                    "readOnly": true
                },
                "changesInPeriod": {
                    "type": "number",
                    "readOnly": true
                },
                "closingStock": {
                    "type": "number",
                    "readOnly": true
                }
            }
        },
        "ListResponsePosting": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Posting"
                    }
                }
            }
        },
        "ParameterizedHeader": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                },
                "parameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "Bank": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "description": "Bank name",
                    "readOnly": true,
                    "maxLength": 255
                },
                "bankStatementFileFormatSupport": {
                    "type": "array",
                    "description": "Bank statement file formats supported.",
                    "readOnly": true,
                    "items": {
                        "type": "string",
                        "enum": [
                            "DNB_CSV",
                            "EIKA_TELEPAY",
                            "SPAREBANK1_TELEPAY",
                            "VISMA_ACCOUNT_STATEMENT",
                            "HANDELSBANKEN_TELEPAY",
                            "SPAREBANKEN_VEST_TELEPAY",
                            "NORDEA_CSV",
                            "TRANSFERWISE",
                            "SPAREBANKEN_SOR_TELEPAY",
                            "DANSKE_BANK_CSV"
                        ]
                    }
                },
                "registerNumbers": {
                    "type": "array",
                    "description": "Register numbers belonging to bank.",
                    "readOnly": true,
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            }
        },
        "BankStatement": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "openingBalanceCurrency": {
                    "type": "number",
                    "description": "Opening balance on the account.",
                    "readOnly": true
                },
                "closingBalanceCurrency": {
                    "type": "number",
                    "description": "Closing balance on the account.",
                    "readOnly": true
                },
                "fileName": {
                    "type": "string",
                    "description": "Bank statement file name.",
                    "readOnly": true
                },
                "bank": {
                    "description": "Bank",
                    "readOnly": true,
                    "$ref": "#/definitions/Bank"
                },
                "fromDate": {
                    "type": "string",
                    "readOnly": true
                },
                "toDate": {
                    "type": "string",
                    "readOnly": true
                },
                "transactions": {
                    "type": "array",
                    "description": "Bank transactions tied to the bank statement",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/BankTransaction"
                    }
                }
            }
        },
        "ResponseWrapperProductUnit": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ProductUnit"
                }
            }
        },
        "SalesForceAddressDTO": {
            "type": "object",
            "properties": {
                "addressLine1": {
                    "type": "string"
                },
                "addressLine2": {
                    "type": "string"
                },
                "postalCode": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "$ref": "#/definitions/SalesForceCountryDTO"
                }
            }
        },
        "AutoLoginPayloadDTO": {
            "type": "object",
            "properties": {
                "redirectPath": {
                    "type": "string"
                }
            }
        },
        "DeliveryAddress": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "employee": {
                    "$ref": "#/definitions/Employee"
                },
                "addressLine1": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 255
                },
                "addressLine2": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 255
                },
                "postalCode": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 100
                },
                "city": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 100
                },
                "country": {
                    "$ref": "#/definitions/Country"
                },
                "name": {
                    "type": "string",
                    "maxLength": 100
                }
            }
        },
        "ResponseWrapperTravelExpenseRateCategoryGroup": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/TravelExpenseRateCategoryGroup"
                }
            }
        },
        "Providers": {
            "type": "object"
        },
        "ResponseWrapperBankReconciliationMatch": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/BankReconciliationMatch"
                }
            }
        },
        "ApiValidationMessage": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "rootId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ListResponseReminder": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Reminder"
                    }
                }
            }
        },
        "ResponseWrapperSalarySettings": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/SalarySettings"
                }
            }
        },
        "FormDataMultiPart": {
            "type": "object",
            "properties": {
                "contentDisposition": {
                    "$ref": "#/definitions/ContentDisposition"
                },
                "entity": {
                    "type": "object"
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "mediaType": {
                    "$ref": "#/definitions/MediaType"
                },
                "messageBodyWorkers": {
                    "$ref": "#/definitions/MessageBodyWorkers"
                },
                "parent": {
                    "$ref": "#/definitions/MultiPart"
                },
                "providers": {
                    "$ref": "#/definitions/Providers"
                },
                "bodyParts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BodyPart"
                    }
                },
                "fields": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/FormDataBodyPart"
                        }
                    }
                },
                "parameterizedHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/ParameterizedHeader"
                        }
                    }
                }
            }
        },
        "ListResponseProjectSpecificRate": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProjectSpecificRate"
                    }
                }
            }
        },
        "MaritimeEmployment": {
            "type": "object",
            "properties": {
                "shipRegister": {
                    "type": "string",
                    "description": "Define the ship register. NIS: Norwegian International Ship Register, NOR: Norwegian Ordinary Ship Register, FOREIGN: Foreign Ship Register. ",
                    "enum": [
                        "NIS",
                        "NOR",
                        "FOREIGN"
                    ]
                },
                "shipType": {
                    "type": "string",
                    "description": "Define the ship type.",
                    "enum": [
                        "OTHER",
                        "DRILLING_PLATFORM",
                        "TOURIST"
                    ]
                },
                "tradeArea": {
                    "type": "string",
                    "description": "Define the trade area.",
                    "enum": [
                        "DOMESTIC",
                        "FOREIGN"
                    ]
                }
            }
        },
        "ResponseWrapperAnnualAccount": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/AnnualAccount"
                }
            }
        },
        "ResponseWrapperTripDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/TripDTO"
                }
            }
        },
        "ListResponseEmploymentType": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EmploymentType"
                    }
                }
            }
        },
        "ConsumerToken": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "apiConsumer": {
                    "$ref": "#/definitions/ApiConsumer"
                },
                "token": {
                    "type": "string",
                    "maxLength": 100
                },
                "expirationDate": {
                    "type": "string"
                }
            }
        },
        "ResponseWrapperTimesheetEntry": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/TimesheetEntry"
                }
            }
        },
        "BankReconciliationAdjustment": {
            "type": "object",
            "required": [
                "paymentType"
            ],
            "properties": {
                "paymentType": {
                    "$ref": "#/definitions/BankReconciliationPaymentType"
                },
                "bankTransactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BankTransaction"
                    }
                },
                "postingDate": {
                    "type": "string"
                },
                "amount": {
                    "type": "number",
                    "minimum": 0.0
                },
                "postings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Posting"
                    }
                },
                "bankReconciliationMatch": {
                    "readOnly": true,
                    "$ref": "#/definitions/BankReconciliationMatch"
                }
            }
        },
        "ResponseWrapperSalesForceEmployeeRole": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/SalesForceEmployeeRole"
                }
            }
        },
        "ResponseWrapperLoggedInUserInfoDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/LoggedInUserInfoDTO"
                }
            }
        },
        "Credentials": {
            "type": "object",
            "required": [
                "appSecret",
                "password",
                "username"
            ],
            "properties": {
                "username": {
                    "type": "string",
                    "description": "Users username (email)"
                },
                "password": {
                    "type": "string",
                    "description": "Users password"
                },
                "appSecret": {
                    "type": "string",
                    "description": "App secret"
                },
                "mfaCode": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Optional mfa auth code"
                }
            }
        },
        "RestrictedEntitlementChangeDTO": {
            "type": "object",
            "properties": {
                "change": {
                    "type": "string"
                },
                "customerId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "EmploymentDetails": {
            "type": "object",
            "required": [
                "percentageOfFullTimeEquivalent"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "employment": {
                    "$ref": "#/definitions/Employment"
                },
                "date": {
                    "type": "string"
                },
                "employmentType": {
                    "type": "string",
                    "description": "Define the employment type.",
                    "enum": [
                        "ORDINARY",
                        "MARITIME",
                        "FREELANCE"
                    ]
                },
                "maritimeEmployment": {
                    "$ref": "#/definitions/MaritimeEmployment"
                },
                "remunerationType": {
                    "type": "string",
                    "description": "Define the remuneration type.",
                    "enum": [
                        "MONTHLY_WAGE",
                        "HOURLY_WAGE",
                        "COMMISION_PERCENTAGE",
                        "FEE",
                        "PIECEWORK_WAGE"
                    ]
                },
                "workingHoursScheme": {
                    "type": "string",
                    "description": "Define the working hours scheme type. If you enter a value for SHIFT WORK, you must also enter value for shiftDurationHours",
                    "enum": [
                        "NOT_SHIFT",
                        "ROUND_THE_CLOCK",
                        "SHIFT_365",
                        "OFFSHORE_336",
                        "CONTINUOUS",
                        "OTHER_SHIFT"
                    ]
                },
                "shiftDurationHours": {
                    "type": "number",
                    "format": "double"
                },
                "occupationCode": {
                    "description": "To find the right value to enter in this field, you could go to GET /employee/employment/occupationCode to get a list of valid ID\u0027s.",
                    "$ref": "#/definitions/OccupationCode"
                },
                "percentageOfFullTimeEquivalent": {
                    "type": "number",
                    "format": "double"
                },
                "annualSalary": {
                    "type": "number",
                    "format": "double"
                },
                "hourlyWage": {
                    "type": "number",
                    "format": "double"
                },
                "payrollTaxMunicipalityId": {
                    "$ref": "#/definitions/Municipality"
                }
            }
        },
        "ListResponseBankTransaction": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BankTransaction"
                    }
                }
            }
        },
        "ListResponseInvoice": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Invoice"
                    }
                }
            }
        },
        "AppSpecific": {
            "type": "object",
            "properties": {
                "hourRegistrationEnabled": {
                    "type": "boolean",
                    "default": false
                },
                "projectEnabled": {
                    "type": "boolean",
                    "default": false
                },
                "userIsAllowedToRegisterHours": {
                    "type": "boolean",
                    "default": false
                },
                "payrollAccountingEnabled": {
                    "type": "boolean",
                    "default": false
                },
                "userIsAuthWageMenu": {
                    "type": "boolean",
                    "default": false
                },
                "userIsAuthMySalary": {
                    "type": "boolean",
                    "default": false
                },
                "electronicVouchersEnabled": {
                    "type": "boolean",
                    "default": false
                },
                "travelExpenseEnabled": {
                    "type": "boolean",
                    "default": false
                },
                "documentArchiveEnabled": {
                    "type": "boolean",
                    "default": false
                },
                "archiveReceptionEnabled": {
                    "type": "boolean",
                    "default": false
                },
                "userIsPayslipOnly": {
                    "type": "boolean",
                    "default": false
                },
                "travelExpenseRatesEnabled": {
                    "type": "boolean",
                    "default": false
                },
                "taxFreeMileageRatesEnabled": {
                    "type": "boolean",
                    "default": false
                },
                "approveTravelExpenseEnabled": {
                    "type": "boolean",
                    "default": false
                },
                "userIsAuthProjectInfo": {
                    "type": "boolean",
                    "default": false
                },
                "userIsAuthTravelAndExpenseApprove": {
                    "type": "boolean",
                    "default": false
                },
                "userIsAuthEmployeeInfo": {
                    "type": "boolean",
                    "default": false
                },
                "userIsAuthVoucherApprove": {
                    "type": "boolean",
                    "default": false
                },
                "userIsAuthRemitApprove": {
                    "type": "boolean",
                    "default": false
                },
                "vatOnForCompany": {
                    "type": "boolean",
                    "default": false
                },
                "taxFreeDietRatesEnabled": {
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "ListResponseProduct": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Product"
                    }
                }
            }
        },
        "MaventaStatusDTO": {
            "type": "object",
            "required": [
                "company_id",
                "event",
                "event_data",
                "event_timestamp"
            ],
            "properties": {
                "event": {
                    "type": "string",
                    "readOnly": true
                },
                "company_id": {
                    "type": "string",
                    "readOnly": true
                },
                "event_timestamp": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "event_data": {
                    "readOnly": true,
                    "$ref": "#/definitions/MaventaEventDataDTO"
                }
            }
        },
        "ResponseWrapperModules": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Modules"
                }
            }
        },
        "ResponseWrapperProduct": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Product"
                }
            }
        },
        "MileageAllowance": {
            "type": "object",
            "required": [
                "date",
                "departureLocation",
                "destination"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "travelExpense": {
                    "$ref": "#/definitions/TravelExpense"
                },
                "rateType": {
                    "$ref": "#/definitions/TravelExpenseRate"
                },
                "rateCategory": {
                    "$ref": "#/definitions/TravelExpenseRateCategory"
                },
                "date": {
                    "type": "string"
                },
                "departureLocation": {
                    "type": "string"
                },
                "destination": {
                    "type": "string"
                },
                "km": {
                    "type": "number"
                },
                "rate": {
                    "type": "number"
                },
                "amount": {
                    "type": "number"
                },
                "isCompanyCar": {
                    "type": "boolean",
                    "default": false
                },
                "passengers": {
                    "type": "array",
                    "description": "Link to individual passengers.",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Passenger"
                    }
                }
            }
        },
        "AccommodationAllowance": {
            "type": "object",
            "required": [
                "location"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "travelExpense": {
                    "$ref": "#/definitions/TravelExpense"
                },
                "rateType": {
                    "$ref": "#/definitions/TravelExpenseRate"
                },
                "rateCategory": {
                    "$ref": "#/definitions/TravelExpenseRateCategory"
                },
                "zone": {
                    "type": "string"
                },
                "location": {
                    "type": "string",
                    "maxLength": 255
                },
                "address": {
                    "type": "string"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "rate": {
                    "type": "number"
                },
                "amount": {
                    "type": "number"
                }
            }
        },
        "ListResponseEmployment": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Employment"
                    }
                }
            }
        },
        "ListResponsePurchaseOrder": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PurchaseOrder"
                    }
                }
            }
        },
        "ListResponseTask": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Task"
                    }
                }
            }
        },
        "ResponseWrapperEmployment": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Employment"
                }
            }
        },
        "ResponseWrapperListJob": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Job"
                    }
                }
            }
        },
        "SalarySettings": {
            "type": "object",
            "required": [
                "payrollTaxCalcMethod"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "municipality": {
                    "$ref": "#/definitions/Municipality"
                },
                "payrollTaxCalcMethod": {
                    "type": "string",
                    "description": "Define the Payroll Tax Calculation Method. AA General industries,BB Central government administration and health trusts, CC Exempted business sectors (and undertakings in economic difficulty),DD Agriculture and forestry, fisheries etc., EE Reporting of payroll withholding tax only,GG Road freight transport",
                    "enum": [
                        "AA",
                        "BB",
                        "CC",
                        "DD",
                        "EE",
                        "GG",
                        "JJ",
                        "EMPTY"
                    ]
                }
            }
        },
        "ListResponseCountry": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Country"
                    }
                }
            }
        },
        "ResponseWrapperDeliveryAddress": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/DeliveryAddress"
                }
            }
        },
        "VoucherType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "maxLength": 100
                }
            }
        },
        "ResponseWrapperBanner": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Banner"
                }
            }
        },
        "ListResponseInventories": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Inventories"
                    }
                }
            }
        },
        "JobDetailDTO": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "group": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "jobclass": {
                    "type": "string"
                },
                "jobData": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "ListResponseCustomerCategory": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomerCategory"
                    }
                }
            }
        },
        "LeaveOfAbsence": {
            "type": "object",
            "required": [
                "percentage",
                "startDate"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "employment": {
                    "$ref": "#/definitions/Employment"
                },
                "leaveOfAbsenceId": {
                    "type": "string",
                    "description": "Existing leave of absence ID used by the current accounting system",
                    "maxLength": 255
                },
                "startDate": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "percentage": {
                    "type": "number",
                    "format": "double"
                },
                "isWageDeduction": {
                    "type": "boolean",
                    "default": false
                },
                "type": {
                    "type": "string",
                    "description": "Define the leave of absence type.",
                    "enum": [
                        "LEAVE_OF_ABSENCE",
                        "FURLOUGH",
                        "PARENTAL_BENEFITS",
                        "MILITARY_SERVICE",
                        "EDUCATIONAL",
                        "COMPASSIONATE"
                    ]
                }
            }
        },
        "ResponseWrapperCurrency": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Currency"
                }
            }
        },
        "ListResponseSalesForceAccountInfo": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SalesForceAccountInfo"
                    }
                }
            }
        },
        "ResponseWrapperActivity": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Activity"
                }
            }
        },
        "ListResponseCompanyHoliday": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CompanyHoliday"
                    }
                }
            }
        },
        "ResponseWrapperDocument": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Document"
                }
            }
        },
        "ResponseWrapperCountry": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Country"
                }
            }
        },
        "ResponseWrapperEmploymentDetails": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/EmploymentDetails"
                }
            }
        },
        "ProjectPeriodMonthlyStatus": {
            "type": "object",
            "properties": {
                "income": {
                    "type": "number",
                    "readOnly": true
                },
                "costs": {
                    "type": "number",
                    "readOnly": true
                },
                "dateFrom": {
                    "type": "string",
                    "readOnly": true
                },
                "dateTo": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperCurrencyExchangeRate": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/CurrencyExchangeRate"
                }
            }
        },
        "ResponseWrapperDivision": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Division"
                }
            }
        },
        "ListResponsePersonAutoCompleteDTO": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PersonAutoCompleteDTO"
                    }
                }
            }
        },
        "HolidayAllowanceEarned": {
            "type": "object",
            "properties": {
                "year": {
                    "type": "integer",
                    "format": "int32"
                },
                "amount": {
                    "type": "number"
                },
                "basis": {
                    "type": "number"
                },
                "amountExtraHolidayWeek": {
                    "type": "number"
                }
            }
        },
        "PerDiemCompensation": {
            "type": "object",
            "required": [
                "location"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "travelExpense": {
                    "$ref": "#/definitions/TravelExpense"
                },
                "rateType": {
                    "$ref": "#/definitions/TravelExpenseRate"
                },
                "rateCategory": {
                    "$ref": "#/definitions/TravelExpenseRateCategory"
                },
                "zone": {
                    "type": "string"
                },
                "overnightAccommodation": {
                    "type": "string",
                    "description": "Set what sort of accommodation was had overnight.",
                    "enum": [
                        "NONE",
                        "HOTEL",
                        "BOARDING_HOUSE_WITHOUT_COOKING",
                        "BOARDING_HOUSE_WITH_COOKING"
                    ]
                },
                "location": {
                    "type": "string",
                    "maxLength": 255
                },
                "address": {
                    "type": "string"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "rate": {
                    "type": "number"
                },
                "amount": {
                    "type": "number"
                },
                "isDeductionForBreakfast": {
                    "type": "boolean",
                    "default": false
                },
                "isDeductionForLunch": {
                    "type": "boolean",
                    "default": false
                },
                "isDeductionForDinner": {
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "ResponseWrapperOrderLine": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/OrderLine"
                }
            }
        },
        "ListResponseLegacyAddress": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LegacyAddress"
                    }
                }
            }
        },
        "ContentDisposition": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "parameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "fileName": {
                    "type": "string"
                },
                "creationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "modificationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "readDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "size": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "PaymentTypeOut": {
            "type": "object",
            "required": [
                "creditAccount",
                "description"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "description": {
                    "type": "string",
                    "maxLength": 255
                },
                "isBruttoWageDeduction": {
                    "type": "boolean",
                    "description": "true if it should be a deduction from the wage. The module PROVISIONSALARY is required to both view and change this setting",
                    "default": false
                },
                "creditAccount": {
                    "$ref": "#/definitions/Account"
                },
                "showIncomingInvoice": {
                    "type": "boolean",
                    "description": "true if the payment type should be available in supplier invoices",
                    "default": false
                },
                "showWagePayment": {
                    "type": "boolean",
                    "description": "true if the payment type should be available in wage payments. The wage module is required to both view and change this setting",
                    "default": false
                },
                "showVatReturns": {
                    "type": "boolean",
                    "description": "true if the payment type should be available in vat returns",
                    "default": false
                },
                "showWagePeriodTransaction": {
                    "type": "boolean",
                    "description": "true if the payment type should be available in period transactionsThe wage module is required to both view and change this setting",
                    "default": false
                },
                "requiresSeparateVoucher": {
                    "type": "boolean",
                    "description": "true if a separate voucher is required",
                    "default": false
                },
                "sequence": {
                    "type": "integer",
                    "format": "int32",
                    "description": "determines in which order the types should be listed. No 1 is listed first"
                },
                "isInactive": {
                    "type": "boolean",
                    "description": "true if the payment type should be hidden from available payment types",
                    "default": false
                }
            }
        },
        "ResponseWrapperContact": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Contact"
                }
            }
        },
        "ListResponseVatType": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VatType"
                    }
                }
            }
        },
        "Account": {
            "type": "object",
            "required": [
                "name",
                "number"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "number": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0.0
                },
                "name": {
                    "type": "string",
                    "maxLength": 255
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "ASSETS",
                        "EQUITY",
                        "LIABILITIES",
                        "OPERATING_REVENUES",
                        "OPERATING_EXPENSES",
                        "INVESTMENT_INCOME",
                        "COST_OF_CAPITAL",
                        "TAX_ON_ORDINARY_ACTIVITIES",
                        "EXTRAORDINARY_INCOME",
                        "EXTRAORDINARY_COST",
                        "TAX_ON_EXTRAORDINARY_ACTIVITIES",
                        "ANNUAL_RESULT",
                        "TRANSFERS_AND_ALLOCATIONS"
                    ]
                },
                "vatType": {
                    "description": "The default vat type for this account.",
                    "$ref": "#/definitions/VatType"
                },
                "vatLocked": {
                    "type": "boolean",
                    "description": "True if all entries on this account must have the vat type given by vatType.",
                    "default": false
                },
                "currency": {
                    "description": "If given, all entries on this account must have this currency.",
                    "$ref": "#/definitions/Currency"
                },
                "isCloseable": {
                    "type": "boolean",
                    "description": "True if it should be possible to close entries on this account and it is possible to filter on open entries.",
                    "default": false
                },
                "isApplicableForSupplierInvoice": {
                    "type": "boolean",
                    "description": "True if this account is applicable for supplier invoice registration.",
                    "default": false
                },
                "requireReconciliation": {
                    "type": "boolean",
                    "description": "True if this account must be reconciled before the accounting period closure.",
                    "default": false
                },
                "isInactive": {
                    "type": "boolean",
                    "description": "Inactive accounts will not show up in UI lists.",
                    "default": false
                },
                "isBankAccount": {
                    "type": "boolean",
                    "default": false
                },
                "isInvoiceAccount": {
                    "type": "boolean",
                    "default": false
                },
                "bankAccountNumber": {
                    "type": "string",
                    "maxLength": 100
                },
                "bankAccountCountry": {
                    "$ref": "#/definitions/Country"
                },
                "bankName": {
                    "type": "string",
                    "maxLength": 255
                },
                "bankAccountIBAN": {
                    "type": "string",
                    "maxLength": 100
                },
                "bankAccountSWIFT": {
                    "type": "string",
                    "maxLength": 100
                }
            }
        },
        "ResponseWrapperTravelExpenseRateCategory": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/TravelExpenseRateCategory"
                }
            }
        },
        "Invoice": {
            "type": "object",
            "required": [
                "invoiceDate",
                "invoiceDueDate",
                "orders"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "invoiceNumber": {
                    "type": "integer",
                    "format": "int32",
                    "description": "If value is set to 0, the invoice number will be generated.",
                    "minimum": 0.0
                },
                "invoiceDate": {
                    "type": "string"
                },
                "customer": {
                    "description": "The invoice customer",
                    "readOnly": true,
                    "$ref": "#/definitions/Customer"
                },
                "invoiceDueDate": {
                    "type": "string"
                },
                "kid": {
                    "type": "string",
                    "description": "KID - Kundeidentifikasjonsnummer.",
                    "maxLength": 25
                },
                "comment": {
                    "type": "string"
                },
                "orders": {
                    "type": "array",
                    "description": "Related orders. Only one order per invoice is supported at the moment.",
                    "items": {
                        "$ref": "#/definitions/Order"
                    }
                },
                "projectInvoiceDetails": {
                    "type": "array",
                    "description": "ProjectInvoiceDetails contains additional information about the invoice, in particular invoices for projects. It contains information about the charged project, the fee amount, extra percent and amount, extra costs, travel expenses, invoice and project comments, akonto amount and values determining if extra costs, akonto and hours should be included. ProjectInvoiceDetails is an object which represents the relation between an invoice and a Project, Orderline and OrderOut object.",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/ProjectInvoiceDetails"
                    }
                },
                "voucher": {
                    "description": "The invoice voucher.",
                    "readOnly": true,
                    "$ref": "#/definitions/Voucher"
                },
                "deliveryDate": {
                    "type": "string",
                    "description": "The delivery date.",
                    "readOnly": true
                },
                "amount": {
                    "type": "number",
                    "description": "In the company???s currency, typically NOK.",
                    "readOnly": true
                },
                "amountCurrency": {
                    "type": "number",
                    "description": "In the specified currency.",
                    "readOnly": true
                },
                "amountExcludingVat": {
                    "type": "number",
                    "description": "Amount excluding VAT (NOK).",
                    "readOnly": true
                },
                "amountExcludingVatCurrency": {
                    "type": "number",
                    "description": "Amount excluding VAT in the specified currency.",
                    "readOnly": true
                },
                "amountRoundoff": {
                    "type": "number",
                    "description": "Amount of round off to nearest integer.",
                    "readOnly": true
                },
                "amountRoundoffCurrency": {
                    "type": "number",
                    "description": "Amount of round off to nearest integer in the specified currency.",
                    "readOnly": true
                },
                "amountOutstanding": {
                    "type": "number",
                    "description": "The amount outstanding based on the history collection, excluding reminders and any existing remits, in the invoice currency.",
                    "readOnly": true
                },
                "amountOutstandingTotal": {
                    "type": "number",
                    "description": "The amount outstanding based on the history collection and including the last reminder and any existing remits. This is the total invoice balance including reminders and remittances, in the invoice currency.",
                    "readOnly": true
                },
                "sumRemits": {
                    "type": "number",
                    "description": "The sum of all open remittances of the invoice. Remittances are reimbursement payments back to the customer and are therefore relevant to the bookkeeping of the invoice in the accounts.",
                    "readOnly": true
                },
                "currency": {
                    "readOnly": true,
                    "$ref": "#/definitions/Currency"
                },
                "isCreditNote": {
                    "type": "boolean",
                    "readOnly": true,
                    "default": false
                },
                "isCharged": {
                    "type": "boolean",
                    "readOnly": true,
                    "default": false
                },
                "isApproved": {
                    "type": "boolean",
                    "readOnly": true,
                    "default": false
                },
                "postings": {
                    "type": "array",
                    "description": "The invoice postings, which includes a posting for the invoice with a positive amount, and one or more posting for the payments with negative amounts.",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Posting"
                    }
                },
                "reminders": {
                    "type": "array",
                    "description": "Invoice debt collection and reminders.",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Reminder"
                    }
                },
                "ehfSendStatus": {
                    "type": "string",
                    "description": "[Deprecated] EHF (Peppol) send status. This only shows status for historic EHFs.",
                    "enum": [
                        "DO_NOT_SEND",
                        "SEND",
                        "SENT",
                        "SEND_FAILURE_RECIPIENT_NOT_FOUND"
                    ]
                }
            }
        },
        "TravelDetails": {
            "type": "object",
            "properties": {
                "isForeignTravel": {
                    "type": "boolean",
                    "default": false
                },
                "isDayTrip": {
                    "type": "boolean",
                    "default": false
                },
                "isCompensationFromRates": {
                    "type": "boolean",
                    "default": false
                },
                "departureDate": {
                    "type": "string"
                },
                "returnDate": {
                    "type": "string"
                },
                "detailedJourneyDescription": {
                    "type": "string"
                },
                "departureFrom": {
                    "type": "string",
                    "maxLength": 255
                },
                "destination": {
                    "type": "string",
                    "maxLength": 255
                },
                "departureTime": {
                    "type": "string",
                    "maxLength": 20
                },
                "returnTime": {
                    "type": "string",
                    "maxLength": 20
                },
                "purpose": {
                    "type": "string"
                }
            }
        },
        "ListResponseLedgerAccount": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LedgerAccount"
                    }
                }
            }
        },
        "ResponseWrapperEmployee": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Employee"
                }
            }
        },
        "ResponseWrapperHourlyCostAndRate": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/HourlyCostAndRate"
                }
            }
        },
        "ListResponseProspect": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Prospect"
                    }
                }
            }
        },
        "Modules": {
            "type": "object",
            "properties": {
                "accounting": {
                    "type": "boolean",
                    "description": "Not readable. Only for input.",
                    "default": false
                },
                "invoice": {
                    "type": "boolean",
                    "description": "Not readable. Only for input.",
                    "default": false
                },
                "salary": {
                    "type": "boolean",
                    "description": "Not readable. Only for input.",
                    "default": false
                },
                "salaryStartDate": {
                    "type": "string",
                    "format": "date"
                },
                "project": {
                    "type": "boolean",
                    "description": "Not readable. Only for input.",
                    "default": false
                },
                "ocr": {
                    "type": "boolean",
                    "default": false
                },
                "remit": {
                    "type": "boolean",
                    "default": false
                },
                "electronicVouchers": {
                    "type": "boolean",
                    "description": "Not readable. Only for input.",
                    "default": false
                },
                "electro": {
                    "type": "boolean",
                    "description": "Not readable. Only for input.",
                    "default": false
                },
                "vvs": {
                    "type": "boolean",
                    "description": "Not readable. Only for input.",
                    "default": false
                },
                "agro": {
                    "type": "boolean",
                    "default": false
                },
                "mamut": {
                    "type": "boolean",
                    "default": false
                },
                "approveVoucher": {
                    "type": "boolean",
                    "description": "Only readable for now",
                    "readOnly": true,
                    "default": false
                }
            }
        },
        "ResponseWrapperGoodsReceiptLine": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/GoodsReceiptLine"
                }
            }
        },
        "ResponseWrapperUnreadCountDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/UnreadCountDTO"
                }
            }
        },
        "ResponseWrapperCompany": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Company"
                }
            }
        },
        "EventInfoDescription": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "payloadModel": {
                    "type": "string"
                }
            }
        },
        "ResponseWrapperTimesheetSalaryTypeSpecification": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/TimesheetSalaryTypeSpecification"
                }
            }
        },
        "ResponseWrapperProjectPeriodOverallStatus": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ProjectPeriodOverallStatus"
                }
            }
        },
        "ResponseWrapperAccommodationAllowance": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/AccommodationAllowance"
                }
            }
        },
        "Subscription": {
            "type": "object",
            "required": [
                "event",
                "targetUrl"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "event": {
                    "type": "string",
                    "example": "customer.create",
                    "description": "Event name (from /v2/event) you wish to subscribe to. Form should be: *subject.verb*.",
                    "minLength": 1,
                    "maxLength": 255
                },
                "targetUrl": {
                    "type": "string",
                    "example": "https://username:password@myintegration.example/tripletexCallback",
                    "description": "The callback URL used for subscriptions (including authentication tokens). Must be absolute and use HTTPS. Basic authentication is supported.",
                    "minLength": 1,
                    "maxLength": 255
                },
                "fields": {
                    "type": "string",
                    "example": "id,version,number",
                    "description": "The fields in the object delivered with the notification callback, nested as in other API calls.",
                    "maxLength": 255
                },
                "status": {
                    "type": "string",
                    "description": "The status of the subscription.",
                    "readOnly": true,
                    "enum": [
                        "ACTIVE",
                        "DISABLED",
                        "DISABLED_TOO_MANY_ERRORS",
                        "DISABLED_RATE_LIMIT_EXCEEDED",
                        "DISABLED_MISUSE"
                    ]
                },
                "authHeaderName": {
                    "type": "string",
                    "example": "Authorization",
                    "description": "Custom authentication header name",
                    "maxLength": 255
                },
                "authHeaderValue": {
                    "type": "string",
                    "example": "Basic dXNlcm5hbWU6cGFzc3dvcmQ=",
                    "description": "Custom authentication header value (write only)",
                    "maxLength": 4096
                }
            }
        },
        "ProductLine": {
            "type": "object",
            "required": [
                "product",
                "stocktaking"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "stocktaking": {
                    "$ref": "#/definitions/Stocktaking"
                },
                "product": {
                    "$ref": "#/definitions/Product"
                },
                "count": {
                    "type": "number"
                },
                "unitCostCurrency": {
                    "type": "number",
                    "description": "Unit price purchase (cost) excluding VAT in the order\u0027s currency"
                },
                "costCurrency": {
                    "type": "number",
                    "readOnly": true
                },
                "comment": {
                    "type": "string"
                }
            }
        },
        "ListResponseProjectInvoiceDetails": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProjectInvoiceDetails"
                    }
                }
            }
        },
        "Municipality": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "number": {
                    "type": "string",
                    "readOnly": true,
                    "maxLength": 4
                },
                "name": {
                    "type": "string",
                    "readOnly": true,
                    "maxLength": 100
                },
                "county": {
                    "type": "string",
                    "readOnly": true,
                    "maxLength": 100
                },
                "payrollTaxZone": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ProjectCategory": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255
                },
                "number": {
                    "type": "string",
                    "maxLength": 100
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "ListResponseInventory": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Inventory"
                    }
                }
            }
        },
        "ListResponseCompanyAutoCompleteDTO": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CompanyAutoCompleteDTO"
                    }
                }
            }
        },
        "EmployeeCompanyDTO": {
            "type": "object",
            "properties": {
                "isDefault": {
                    "type": "boolean",
                    "default": false
                },
                "company": {
                    "$ref": "#/definitions/Company"
                },
                "employee": {
                    "$ref": "#/definitions/Employee"
                }
            }
        },
        "ListResponseSalaryTransaction": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SalaryTransaction"
                    }
                }
            }
        },
        "ResponseWrapperBankStatement": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/BankStatement"
                }
            }
        },
        "TravelExpenseRateCategoryGroup": {
            "type": "object",
            "required": [
                "fromDate",
                "toDate"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "readOnly": true
                },
                "isForeignTravel": {
                    "type": "boolean",
                    "default": false
                },
                "fromDate": {
                    "type": "string"
                },
                "toDate": {
                    "type": "string"
                }
            }
        },
        "ResponseWrapperEntitlement": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Entitlement"
                }
            }
        },
        "ResponseWrapperStocktaking": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Stocktaking"
                }
            }
        },
        "ResponseWrapperProjectOrderLine": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ProjectOrderLine"
                }
            }
        },
        "Country": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "readOnly": true
                },
                "isoAlpha2Code": {
                    "type": "string",
                    "description": "The ISO 3166-1 Alpha2 code of the country (2 letters). https://en.wikipedia.org/wiki/ISO_3166-1",
                    "readOnly": true
                },
                "isoAlpha3Code": {
                    "type": "string",
                    "description": "The ISO 3166-1 Alpha3 code of the country (3 letters). https://en.wikipedia.org/wiki/ISO_3166-1",
                    "readOnly": true,
                    "maxLength": 3
                },
                "isoNumericCode": {
                    "type": "string",
                    "description": "The ISO 3166-1 numeric code of the country (3 digits). https://en.wikipedia.org/wiki/ISO_3166-1",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperReminder": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Reminder"
                }
            }
        },
        "ListResponseTimesheetSalaryTypeSpecification": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TimesheetSalaryTypeSpecification"
                    }
                }
            }
        },
        "WebHookWrapper": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "object"
                },
                "event": {
                    "type": "string"
                },
                "subscriptionId": {
                    "type": "integer",
                    "format": "int32"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "PerDiemCompensationTransientDTO": {
            "type": "object",
            "properties": {
                "travelExpense": {
                    "$ref": "#/definitions/TravelExpense"
                },
                "rateType": {
                    "$ref": "#/definitions/TravelExpenseRate"
                },
                "rateCategory": {
                    "$ref": "#/definitions/TravelExpenseRateCategory"
                },
                "zone": {
                    "type": "string"
                },
                "overnightAccommodation": {
                    "type": "string",
                    "enum": [
                        "NONE",
                        "HOTEL",
                        "BOARDING_HOUSE_WITHOUT_COOKING",
                        "BOARDING_HOUSE_WITH_COOKING"
                    ]
                },
                "location": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "rate": {
                    "type": "number"
                },
                "amount": {
                    "type": "number"
                },
                "isDeductionForBreakfast": {
                    "type": "boolean",
                    "default": false
                },
                "isDeductionForLunch": {
                    "type": "boolean",
                    "default": false
                },
                "isDeductionForDinner": {
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "ListResponseMileageAllowance": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MileageAllowance"
                    }
                }
            }
        },
        "ListResponseProjectPeriodMonthlyStatus": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProjectPeriodMonthlyStatus"
                    }
                }
            }
        },
        "ResponseWrapperOrder": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Order"
                }
            }
        },
        "VNTCStatusDTO": {
            "type": "object",
            "required": [
                "ExternalMessageId",
                "ExternalSenderId",
                "MessageId",
                "Operator",
                "Status"
            ],
            "properties": {
                "MessageId": {
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "ExternalSenderId": {
                    "type": "string",
                    "readOnly": true
                },
                "ExternalMessageId": {
                    "type": "string",
                    "readOnly": true
                },
                "PartCount": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "Status": {
                    "type": "string",
                    "readOnly": true
                },
                "Operator": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ProjectActivity": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "activity": {
                    "description": "Add existing project activity or create new project specific activity",
                    "$ref": "#/definitions/Activity"
                },
                "project": {
                    "$ref": "#/definitions/Project"
                },
                "startDate": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "isClosed": {
                    "type": "boolean",
                    "default": false
                },
                "budgetHours": {
                    "type": "number",
                    "description": "Set budget hours"
                },
                "budgetHourlyRateCurrency": {
                    "type": "number",
                    "description": "Set budget hourly rate"
                },
                "budgetFeeCurrency": {
                    "type": "number",
                    "description": "Set budget fee"
                }
            }
        },
        "TripDTO": {
            "type": "object",
            "properties": {
                "distance": {
                    "type": "number"
                },
                "travelTimeInMinutes": {
                    "type": "number"
                },
                "sumTollNOK": {
                    "type": "number"
                }
            }
        },
        "AutoPayMessageDTO": {
            "type": "object",
            "required": [
                "message",
                "messageId",
                "messageType"
            ],
            "properties": {
                "messageId": {
                    "type": "string",
                    "readOnly": true
                },
                "messageType": {
                    "type": "string",
                    "readOnly": true
                },
                "message": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "Passenger": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "maxLength": 255
                },
                "mileageAllowance": {
                    "$ref": "#/definitions/MileageAllowance"
                }
            }
        },
        "ListResponseProductLine": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProductLine"
                    }
                }
            }
        },
        "ListResponseSalesForceEmployee": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SalesForceEmployee"
                    }
                }
            }
        },
        "AltinnCompanyModule": {
            "type": "object",
            "required": [
                "altInnId",
                "altInnPassword"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "altInnId": {
                    "type": "integer",
                    "format": "int32"
                },
                "altInnPassword": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                }
            }
        },
        "ListResponseCloseGroup": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CloseGroup"
                    }
                }
            }
        },
        "ListResponseStocktaking": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Stocktaking"
                    }
                }
            }
        },
        "ListResponseDivision": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Division"
                    }
                }
            }
        },
        "ResponseWrapperTimesheetSettings": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/TimesheetSettings"
                }
            }
        },
        "SalesForceOpportunity": {
            "type": "object",
            "properties": {
                "allPrices": {
                    "type": "object",
                    "description": "A nested map of all active sales modules. The key in the outer map is the sales module, whilest the inner map contains the different pricing types for the given sales module. A pricing type could be PER_USE(10).",
                    "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "number",
                            "format": "double"
                        }
                    }
                },
                "sumStartupCategory1Users": {
                    "type": "number",
                    "format": "double",
                    "description": "The total startup price for users of category 1."
                },
                "sumServiceCategory1Users": {
                    "type": "number",
                    "format": "double",
                    "description": "The total price per monthly price for users of category 1."
                },
                "listPriceCategory1UserStartup": {
                    "type": "number",
                    "format": "double",
                    "description": "The startup list price per user."
                },
                "listPriceCategory1UserService": {
                    "type": "number",
                    "format": "double",
                    "description": "The monthly list price per user."
                },
                "sumStartup": {
                    "type": "number",
                    "format": "double",
                    "description": "The startup price for the company."
                },
                "sumService": {
                    "type": "number",
                    "format": "double",
                    "description": "The monthly price for the company."
                },
                "sumAdditionalServices": {
                    "type": "number",
                    "format": "double",
                    "description": "The total startup price for additional services."
                },
                "accountantStartupProvision": {
                    "type": "number",
                    "format": "double",
                    "description": "The initial provision for the accountant of the startup price (percentage)"
                },
                "accountantMonthlyProvision": {
                    "type": "number",
                    "format": "double",
                    "description": "The monthly provision for the accountant of the monthly price (percentage)"
                },
                "noOfUsersPrepaid": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of users prepaid when creating the company."
                },
                "noOfUsersIncluded": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of users included for free in the purchased module."
                }
            }
        },
        "ListResponseOrder": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Order"
                    }
                }
            }
        },
        "ResponseWrapperAccountingPeriod": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/AccountingPeriod"
                }
            }
        },
        "ListResponseSearchCompletionDTO": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SearchCompletionDTO"
                    }
                }
            }
        },
        "ResponseWrapperCloseGroup": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/CloseGroup"
                }
            }
        },
        "ResponseWrapperPurchaseOrder": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/PurchaseOrder"
                }
            }
        },
        "ListResponseProjectCategory": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProjectCategory"
                    }
                }
            }
        },
        "ResponseWrapperLeaveOfAbsence": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/LeaveOfAbsence"
                }
            }
        },
        "Company": {
            "type": "object",
            "required": [
                "address",
                "name",
                "type"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "maxLength": 255
                },
                "startDate": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "organizationNumber": {
                    "type": "string",
                    "maxLength": 100
                },
                "email": {
                    "type": "string",
                    "format": "email",
                    "maxLength": 254
                },
                "phoneNumber": {
                    "type": "string",
                    "maxLength": 100
                },
                "phoneNumberMobile": {
                    "type": "string",
                    "maxLength": 100
                },
                "faxNumber": {
                    "type": "string",
                    "maxLength": 100
                },
                "address": {
                    "$ref": "#/definitions/Address"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "NONE",
                        "ENK",
                        "AS",
                        "NUF",
                        "ANS",
                        "DA",
                        "PRE",
                        "KS",
                        "ASA",
                        "BBL",
                        "BRL",
                        "GFS",
                        "SPA",
                        "SF",
                        "IKS",
                        "KF_FKF",
                        "FCD",
                        "EOFG",
                        "BA",
                        "STI",
                        "ORG",
                        "ESEK",
                        "SA",
                        "SAM",
                        "BO",
                        "VPFO",
                        "OS",
                        "Other"
                    ]
                }
            }
        },
        "PageOptions": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "key": {
                    "type": "string",
                    "description": "The lookup key for this PageOptions entry",
                    "maxLength": 255
                },
                "type": {
                    "type": "string",
                    "description": "The type that `data` is",
                    "enum": [
                        "IncomingInvoiceViewOptions"
                    ]
                },
                "data": {
                    "type": "object",
                    "description": "The actual options as a JSON blob",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "ListResponseBankReconciliationAdjustment": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BankReconciliationAdjustment"
                    }
                }
            }
        },
        "ListResponseMunicipality": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Municipality"
                    }
                }
            }
        },
        "ResponseWrapperSubscription": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Subscription"
                }
            }
        },
        "ResponseWrapperProductGroup": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ProductGroup"
                }
            }
        },
        "ResponseWrapperPaymentType": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/PaymentType"
                }
            }
        },
        "ListResponseProjectHourlyRate": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProjectHourlyRate"
                    }
                }
            }
        },
        "Job": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "group": {
                    "type": "string"
                },
                "stateful": {
                    "type": "boolean",
                    "default": false
                },
                "interruptable": {
                    "type": "boolean",
                    "default": false
                },
                "jobDetail": {
                    "$ref": "#/definitions/JobDetailDTO"
                },
                "triggers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TriggerDTO"
                    }
                }
            }
        },
        "Order": {
            "type": "object",
            "required": [
                "customer",
                "deliveryDate",
                "orderDate"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "customer": {
                    "$ref": "#/definitions/Customer"
                },
                "contact": {
                    "$ref": "#/definitions/Contact"
                },
                "attn": {
                    "$ref": "#/definitions/Contact"
                },
                "receiverEmail": {
                    "type": "string",
                    "format": "email",
                    "maxLength": 254
                },
                "overdueNoticeEmail": {
                    "type": "string",
                    "format": "email",
                    "maxLength": 254
                },
                "number": {
                    "type": "string",
                    "maxLength": 100
                },
                "reference": {
                    "type": "string",
                    "maxLength": 255
                },
                "ourContact": {
                    "description": "If the contact is not an employee",
                    "$ref": "#/definitions/Contact"
                },
                "ourContactEmployee": {
                    "description": "If the contact is an employee",
                    "$ref": "#/definitions/Employee"
                },
                "department": {
                    "$ref": "#/definitions/Department"
                },
                "orderDate": {
                    "type": "string"
                },
                "project": {
                    "$ref": "#/definitions/Project"
                },
                "invoiceComment": {
                    "type": "string"
                },
                "currency": {
                    "$ref": "#/definitions/Currency"
                },
                "invoicesDueIn": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of days/months in which invoices created from this order is due",
                    "minimum": 0.0,
                    "maximum": 10000.0
                },
                "invoicesDueInType": {
                    "type": "string",
                    "description": "Set the time unit of invoicesDueIn. The special case RECURRING_DAY_OF_MONTH enables the due date to be fixed to a specific day of the month, in this case the fixed due date will automatically be set as standard on all invoices created from this order. Note that when RECURRING_DAY_OF_MONTH is set, the due date will be set to the last day of month if \"31\" is set in invoicesDueIn.",
                    "enum": [
                        "DAYS",
                        "MONTHS",
                        "RECURRING_DAY_OF_MONTH"
                    ]
                },
                "isShowOpenPostsOnInvoices": {
                    "type": "boolean",
                    "description": "Show account statement - open posts on invoices created from this order",
                    "default": false
                },
                "isClosed": {
                    "type": "boolean",
                    "description": "Denotes if this order is closed. A closed order can no longer be invoiced unless it is opened again.",
                    "default": false
                },
                "deliveryDate": {
                    "type": "string"
                },
                "deliveryAddress": {
                    "description": "Delivery address of this order. This can be a new or existing address\n(useful to know, especially if the delivery is to a private person: if \u0027deliveryAddress.name\u0027 is set, we ignore the state of \u0027customer.id\u0027)",
                    "$ref": "#/definitions/DeliveryAddress"
                },
                "deliveryComment": {
                    "type": "string"
                },
                "isPrioritizeAmountsIncludingVat": {
                    "type": "boolean",
                    "default": false
                },
                "orderLineSorting": {
                    "type": "string",
                    "enum": [
                        "ID",
                        "PRODUCT",
                        "CUSTOM"
                    ]
                },
                "orderLines": {
                    "type": "array",
                    "description": "Order lines tied to the order",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/OrderLine"
                    }
                },
                "isSubscription": {
                    "type": "boolean",
                    "description": "If true, the order is a subscription, which enables periodical invoicing of order lines. First, create an order with isSubscription=true, then approve it for subscription invoicing with the :approveSubscriptionInvoice method.",
                    "default": false
                },
                "subscriptionDuration": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of months/years the subscription shall run",
                    "minimum": 0.0
                },
                "subscriptionDurationType": {
                    "type": "string",
                    "description": "The time unit of subscriptionDuration",
                    "enum": [
                        "MONTHS",
                        "YEAR"
                    ]
                },
                "subscriptionPeriodsOnInvoice": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of periods on each invoice",
                    "minimum": 0.0
                },
                "subscriptionPeriodsOnInvoiceType": {
                    "type": "string",
                    "description": "The time unit of subscriptionPeriodsOnInvoice",
                    "readOnly": true,
                    "enum": [
                        "MONTHS"
                    ]
                },
                "subscriptionInvoicingTimeInAdvanceOrArrears": {
                    "type": "string",
                    "description": "Invoicing in advance/in arrears",
                    "enum": [
                        "ADVANCE",
                        "ARREARS"
                    ]
                },
                "subscriptionInvoicingTime": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of days/months invoicing in advance/in arrears",
                    "minimum": 0.0
                },
                "subscriptionInvoicingTimeType": {
                    "type": "string",
                    "description": "The time unit of subscriptionInvoicingTime",
                    "enum": [
                        "DAYS",
                        "MONTHS"
                    ]
                },
                "isSubscriptionAutoInvoicing": {
                    "type": "boolean",
                    "description": "Automatic invoicing. Starts when the subscription is approved",
                    "default": false
                }
            }
        },
        "ResponseWrapperPassenger": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Passenger"
                }
            }
        },
        "RemunerationType": {
            "type": "object",
            "required": [
                "remunerationType"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "remunerationType": {
                    "type": "string",
                    "description": "Defines the remuneration type option. ",
                    "enum": [
                        "MONTHLY_WAGE",
                        "HOURLY_WAGE",
                        "COMMISION_PERCENTAGE",
                        "FEE",
                        "PIECEWORK_WAGE"
                    ]
                },
                "nameNO": {
                    "type": "string",
                    "maxLength": 100
                },
                "code": {
                    "type": "string",
                    "maxLength": 100
                }
            }
        },
        "ResponseWrapperDocumentArchive": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/DocumentArchive"
                }
            }
        },
        "AutoLogin": {
            "type": "object",
            "properties": {
                "loginUrl": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ListResponseEntitlement": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Entitlement"
                    }
                }
            }
        },
        "SalarySpecification": {
            "type": "object",
            "required": [
                "count",
                "rate",
                "salaryType"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "rate": {
                    "type": "number"
                },
                "count": {
                    "type": "number"
                },
                "project": {
                    "$ref": "#/definitions/Project"
                },
                "department": {
                    "$ref": "#/definitions/Department"
                },
                "salaryType": {
                    "$ref": "#/definitions/SalaryType"
                },
                "payslip": {
                    "$ref": "#/definitions/Payslip"
                },
                "employee": {
                    "$ref": "#/definitions/Employee"
                },
                "description": {
                    "type": "string"
                },
                "year": {
                    "type": "integer",
                    "format": "int32"
                },
                "month": {
                    "type": "integer",
                    "format": "int32"
                },
                "amount": {
                    "type": "number"
                }
            }
        },
        "GoodsReceipt": {
            "type": "object",
            "required": [
                "goodsReceiptLines",
                "registrationDate"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "purchaseOrder": {
                    "$ref": "#/definitions/PurchaseOrder"
                },
                "registrationDate": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "STATUS_OPEN",
                        "STATUS_CONFIRMED"
                    ]
                },
                "goodsReceiptLines": {
                    "type": "array",
                    "description": "Purchase Order lines tied to the goods receipt",
                    "items": {
                        "$ref": "#/definitions/GoodsReceiptLine"
                    }
                }
            }
        },
        "SystemMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "ListResponsePassenger": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Passenger"
                    }
                }
            }
        },
        "ResponseWrapperInteger": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ListResponseBanner": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Banner"
                    }
                }
            }
        },
        "ProjectPeriodOverallStatus": {
            "type": "object",
            "properties": {
                "income": {
                    "type": "number",
                    "readOnly": true
                },
                "costs": {
                    "type": "number",
                    "readOnly": true
                }
            }
        },
        "TimesheetEntry": {
            "type": "object",
            "required": [
                "activity",
                "date",
                "employee",
                "hours"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "project": {
                    "$ref": "#/definitions/Project"
                },
                "activity": {
                    "$ref": "#/definitions/Activity"
                },
                "date": {
                    "type": "string"
                },
                "hours": {
                    "type": "number",
                    "format": "double"
                },
                "chargeableHours": {
                    "type": "number",
                    "format": "double",
                    "readOnly": true
                },
                "employee": {
                    "$ref": "#/definitions/Employee"
                },
                "timeClocks": {
                    "type": "array",
                    "description": "Link to stop watches on this hour.",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/TimeClock"
                    }
                },
                "comment": {
                    "type": "string"
                },
                "locked": {
                    "type": "boolean",
                    "description": "Indicates if the hour can be changed.",
                    "readOnly": true,
                    "default": false
                },
                "chargeable": {
                    "type": "boolean",
                    "readOnly": true,
                    "default": false
                },
                "invoice": {
                    "readOnly": true,
                    "$ref": "#/definitions/Invoice"
                },
                "hourlyRate": {
                    "type": "number",
                    "readOnly": true
                },
                "hourlyCost": {
                    "type": "number",
                    "readOnly": true
                },
                "hourlyCostPercentage": {
                    "type": "number",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperEmployeeToken": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/EmployeeToken"
                }
            }
        },
        "ListResponseSalesModuleDTO": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SalesModuleDTO"
                    }
                }
            }
        },
        "Cost": {
            "type": "object",
            "required": [
                "amountCurrencyIncVat",
                "paymentType"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "travelExpense": {
                    "$ref": "#/definitions/TravelExpense"
                },
                "vatType": {
                    "$ref": "#/definitions/VatType"
                },
                "currency": {
                    "$ref": "#/definitions/Currency"
                },
                "costCategory": {
                    "$ref": "#/definitions/TravelCostCategory"
                },
                "paymentType": {
                    "$ref": "#/definitions/TravelPaymentType"
                },
                "category": {
                    "type": "string",
                    "maxLength": 100
                },
                "comments": {
                    "type": "string"
                },
                "rate": {
                    "type": "number"
                },
                "amountCurrencyIncVat": {
                    "type": "number"
                },
                "amountNOKInclVAT": {
                    "type": "number"
                },
                "amountNOKInclVATLow": {
                    "type": "number",
                    "readOnly": true
                },
                "amountNOKInclVATMedium": {
                    "type": "number",
                    "readOnly": true
                },
                "amountNOKInclVATHigh": {
                    "type": "number",
                    "readOnly": true
                },
                "isPaidByEmployee": {
                    "type": "boolean",
                    "readOnly": true,
                    "default": false
                },
                "isChargeable": {
                    "type": "boolean",
                    "default": false
                },
                "date": {
                    "type": "string"
                }
            }
        },
        "ListResponseSalaryType": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SalaryType"
                    }
                }
            }
        },
        "WorkingHoursScheme": {
            "type": "object",
            "required": [
                "workingHoursScheme"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "workingHoursScheme": {
                    "type": "string",
                    "description": "Defines the working hours scheme option.",
                    "enum": [
                        "NOT_SHIFT",
                        "ROUND_THE_CLOCK",
                        "SHIFT_365",
                        "OFFSHORE_336",
                        "CONTINUOUS",
                        "OTHER_SHIFT"
                    ]
                },
                "nameNO": {
                    "type": "string",
                    "maxLength": 100
                },
                "code": {
                    "type": "string",
                    "maxLength": 100
                }
            }
        },
        "ListResponseTimesheetEntry": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TimesheetEntry"
                    }
                }
            }
        },
        "TravelExpenseRate": {
            "type": "object",
            "required": [
                "rateCategory",
                "zone"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "rateCategory": {
                    "$ref": "#/definitions/TravelExpenseRateCategory"
                },
                "zone": {
                    "type": "string"
                },
                "rate": {
                    "type": "number"
                },
                "breakfastDeductionRate": {
                    "type": "number"
                },
                "lunchDeductionRate": {
                    "type": "number"
                },
                "dinnerDeductionRate": {
                    "type": "number"
                }
            }
        },
        "ResponseWrapperDouble": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "MultiPart": {
            "type": "object",
            "properties": {
                "contentDisposition": {
                    "$ref": "#/definitions/ContentDisposition"
                },
                "entity": {
                    "type": "object"
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "mediaType": {
                    "$ref": "#/definitions/MediaType"
                },
                "messageBodyWorkers": {
                    "$ref": "#/definitions/MessageBodyWorkers"
                },
                "parent": {
                    "$ref": "#/definitions/MultiPart"
                },
                "providers": {
                    "$ref": "#/definitions/Providers"
                },
                "bodyParts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BodyPart"
                    }
                },
                "parameterizedHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/ParameterizedHeader"
                        }
                    }
                }
            }
        },
        "SalaryTransaction": {
            "type": "object",
            "required": [
                "month",
                "payslips",
                "year"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "date": {
                    "type": "string",
                    "description": "Voucher date."
                },
                "year": {
                    "type": "integer",
                    "format": "int32"
                },
                "month": {
                    "type": "integer",
                    "format": "int32"
                },
                "isHistorical": {
                    "type": "boolean",
                    "description": "With historical wage vouchers you can update the wage system with information dated before the opening balance.",
                    "default": false
                },
                "paySlipsAvailableDate": {
                    "type": "string",
                    "description": "The date payslips are made available to the employee. Defaults to voucherDate."
                },
                "payslips": {
                    "type": "array",
                    "description": "Link to individual payslip objects.",
                    "items": {
                        "$ref": "#/definitions/Payslip"
                    }
                }
            }
        },
        "SalesModuleDTO": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "enum": [
                        "MAMUT",
                        "MAMUT_WITH_WAGE",
                        "AGRO_LICENCE",
                        "AGRO_CLIENT",
                        "AGRO_DOCUMENT_CENTER",
                        "AGRO_INVOICE",
                        "AGRO_WAGE"
                    ]
                },
                "costStartDate": {
                    "type": "string"
                }
            }
        },
        "ListResponseProjectControlForm": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProjectControlForm"
                    }
                }
            }
        },
        "ListResponseTravelExpenseRate": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TravelExpenseRate"
                    }
                }
            }
        },
        "Change": {
            "type": "object",
            "properties": {
                "employeeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "timestamp": {
                    "type": "string",
                    "format": "date-time"
                },
                "changeType": {
                    "type": "string",
                    "enum": [
                        "CREATE",
                        "UPDATE",
                        "DELETE",
                        "LOCKED",
                        "REOPENED",
                        "DO_NOT_SHOW"
                    ]
                },
                "periodReopened": {
                    "type": "string"
                },
                "periodLocked": {
                    "type": "string"
                }
            }
        },
        "TripletexAccount": {
            "type": "object",
            "required": [
                "accountType",
                "administratorPassword",
                "company",
                "modules",
                "numberOfVouchers"
            ],
            "properties": {
                "company": {
                    "description": "Information about the company to create. Supply as much info as you have, but at least name, type and address.",
                    "$ref": "#/definitions/Company"
                },
                "administrator": {
                    "description": "Employee to create. Department on this object will also be created if supplied. If null a dummy user and department will be created instead",
                    "$ref": "#/definitions/Employee"
                },
                "accountType": {
                    "type": "string",
                    "description": "Is this a test account or a paying account?",
                    "enum": [
                        "TEST",
                        "PAYING"
                    ]
                },
                "modules": {
                    "description": "Modules (functionality in the application) to activate for the newly created account. Some modules have extra costs.",
                    "$ref": "#/definitions/Modules"
                },
                "administratorPassword": {
                    "type": "string",
                    "description": "Password for the administrator user to create. Not a part of the administrator employee object since this is a value that never can be read (it is salted and hashed before storing)"
                },
                "sendEmails": {
                    "type": "boolean",
                    "description": "Should the regular creation emails be sent to the company created and its users? If false you probably want to set autoValidateUserLogin to true",
                    "default": false
                },
                "autoValidateUserLogin": {
                    "type": "boolean",
                    "description": "If true, the users created will be allowed to log in without validating their email address. ONLY USE THIS IF YOU ALREADY HAVE VALIDATED THE USER EMAILS.",
                    "default": false
                },
                "createAdministratorApiToken": {
                    "type": "boolean",
                    "description": "Create an API token for the administrator user for the consumer token used during this call. The token will be returned in the response.",
                    "default": false
                },
                "createCompanyOwnedApiToken": {
                    "type": "boolean",
                    "description": "Create an API token for the company to use to call their clients, only possible for accounting and auditor accounts. The token will be returned in the response.",
                    "default": false
                },
                "mayCreateTripletexAccounts": {
                    "type": "boolean",
                    "description": "Should the company we are creating be able to create new Tripletex accounts?",
                    "default": false
                },
                "numberOfVouchers": {
                    "type": "string",
                    "description": "Used to calculate prices.",
                    "enum": [
                        "INTERVAL_0_100",
                        "INTERVAL_101_500",
                        "INTERVAL_0_500",
                        "INTERVAL_501_1000",
                        "INTERVAL_1001_2000",
                        "INTERVAL_2001_3500",
                        "INTERVAL_3501_5000",
                        "INTERVAL_5001_10000",
                        "INTERVAL_UNLIMITED"
                    ]
                },
                "chartOfAccountsType": {
                    "type": "string",
                    "description": "The chart of accounts to use for the new company",
                    "enum": [
                        "DEFAULT",
                        "MAMUT_STD_PAYROLL",
                        "MAMUT_NARF_PAYROLL",
                        "AGRO_FORRETNING_PAYROLL",
                        "AGRO_LANDBRUK_PAYROLL",
                        "AGRO_FISKE_PAYROLL",
                        "AGRO_FORSOKSRING_PAYROLL",
                        "AGRO_IDRETTSLAG_PAYROLL",
                        "AGRO_FORENING_PAYROLL"
                    ]
                },
                "auditor": {
                    "type": "boolean",
                    "default": false
                },
                "reseller": {
                    "type": "boolean",
                    "default": false
                },
                "accountingOffice": {
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "Contact": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "firstName": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 100
                },
                "lastName": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 100
                },
                "email": {
                    "type": "string",
                    "format": "email",
                    "minLength": 0,
                    "maxLength": 100
                },
                "phoneNumberMobileCountry": {
                    "description": "The country of the mobile phone number. If not set, the country is derived as best as possible from phoneNumberMobile. NB! 8 digit numbers are assumed to be Norwegian.",
                    "$ref": "#/definitions/Country"
                },
                "phoneNumberMobile": {
                    "type": "string",
                    "maxLength": 100
                },
                "customer": {
                    "$ref": "#/definitions/Customer"
                }
            }
        },
        "Voucher": {
            "type": "object",
            "required": [
                "date",
                "description",
                "postings"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "date": {
                    "type": "string"
                },
                "number": {
                    "type": "integer",
                    "format": "int32",
                    "description": "System generated number that cannot be changed.",
                    "readOnly": true,
                    "minimum": 0.0
                },
                "year": {
                    "type": "integer",
                    "format": "int32",
                    "description": "System generated number that cannot be changed.",
                    "readOnly": true,
                    "minimum": 0.0
                },
                "description": {
                    "type": "string"
                },
                "voucherType": {
                    "description": "Voucher type. Must not be of type \u0027Utg??ende faktura\u0027 (\u0027Outgoing Invoice\u0027) on new vouchers, instead use voucherType=null or use the Invoice endpoint.",
                    "$ref": "#/definitions/VoucherType"
                },
                "reverseVoucher": {
                    "readOnly": true,
                    "$ref": "#/definitions/Voucher"
                },
                "postings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Posting"
                    }
                },
                "document": {
                    "description": "If the documentation for the voucher has been generated by the system (e.g. an invoice) then this is a reference to the generated document. This document is always a PDF. Note that a voucher may have both a document, an attachment and an ediDocument.",
                    "readOnly": true,
                    "$ref": "#/definitions/Document"
                },
                "attachment": {
                    "description": "If the documentation for the voucher has been provided from an external source (e.g. another system via API or a user upload) then this is a reference to the document. This is always a PDF. Note that a voucher may have both a document, an attachment and an ediDocument.",
                    "readOnly": true,
                    "$ref": "#/definitions/Document"
                },
                "ediDocument": {
                    "description": "If the voucher is created based on a machine readable document (such as EHF or EFO/NELFO) then this is a reference to that document. Note that a voucher may have both a document, an attachment and an ediDocument.",
                    "readOnly": true,
                    "$ref": "#/definitions/Document"
                }
            }
        },
        "ListResponseVoucherType": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VoucherType"
                    }
                }
            }
        },
        "ProductGroupRelation": {
            "type": "object",
            "required": [
                "product",
                "productGroup"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "product": {
                    "$ref": "#/definitions/Product"
                },
                "productGroup": {
                    "$ref": "#/definitions/ProductGroup"
                }
            }
        },
        "ResponseWrapperSalaryType": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/SalaryType"
                }
            }
        },
        "ListResponseAccommodationAllowance": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Indicates whether there are more values available. Note: The value is not exact"
                },
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AccommodationAllowance"
                    }
                }
            }
        },
        "VoucherOptions": {
            "type": "object",
            "properties": {
                "delete": {
                    "description": "A data structure containing information about the delete operation.",
                    "readOnly": true,
                    "$ref": "#/definitions/Delete"
                }
            }
        }
    }
}
