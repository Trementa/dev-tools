{
  "openapi": "3.0.1",
  "info": {
    "title": "SpeedyCraft REST API",
    "description": "The REST API for SpeedyCraft.\r\n\r\n__1. How to use Filter, Sort, Page and PageSize by example__\r\n ```\r\nGET /Customer\r\n?sorts=-rowversion,companyLastname                     // sort by rowversion descending, then by companyLastname\r\n&filters=regemployeeIdExt==1234, Notes@=some note,     // filter by regemployeeIdExt equals to 1234, and by notes that contains the phrase 'some note'\r\n&page=1                                                // get the first page\r\n&pageSize=10                                           // get 10 customer records per page\r\n ```\r\nMore formally:\r\n* sorts is a comma-delimited ordered list of property names to sort by. Adding a - before the name switches to sorting descendingly.\r\n* filters is a comma-delimited list of {Name}{Operator}{Value} where\r\n    * {Name} is the name of a property for the given entity.\r\n        * You can also have multiple names (for OR logic) by enclosing them in brackets and using a pipe delimiter, eg. (Phone|Mobile)==90919293 asks if Phone or Mobile equals 90919293\r\n    * {Operator} is one of the supported Operators (see below for list of Operators).\r\n    * {Value} is the case-insensitive value to use for filtering\r\n        * You can also have multiple values (for OR logic) by using a pipe delimiter, eg. Notes@=new|old will return records with Notes that contain the text 'new' or 'old'.\r\n* page is the number of page to return\r\n* pageSize is the number of items returned per page\r\n\r\n\r\n__Supported Operators:__\r\nOprator | Meaning\r\n--------|--------\r\n==      | Equals\r\n!=      | Not equals\r\n>       | Greater than\r\n<       | Less than\r\n>=      | Greater than or equal to\r\n<=      | Less than or equal to\r\n@=      | Contains \r\n_=      | Starts with\r\n!@=     | Does not contain\r\n!_=     | Does not start with\r\n\r\n__Special filters:__\r\n* IsNull: Use the IsNull filter if you need to find records where a certain property is null. Example query:\r\n```\r\nhttps://<your-url>/api/Customer?Filters=IsNull==CustomerIdext&Page=1&Pagesize=50\r\n```\r\n* IsNotNull: Use the IsNotNull filter if you need to find records where a certain property is not null. Example query:\r\n```\r\nhttps://<your-url>/api/Customer?Filters=IsNotNull==CustomerIdext&Page=1&Pagesize=50\r\n```\r\n\r\n__2. Some example queries__\r\n```\r\nhttps://<your-url>/api/Customer?Filters=regemployeeIdExt==2707720,rowversion>349734047,(companyLastname|contactFirstname)@=John,notes_=this is a test&Sorts=rowversion&Page=1&Pagesize=50\r\n```\r\nThe above example filters on \r\n* regemployeeIdExt equal to 2707720\r\n* rowversion greater than 349734047\r\n* companyLastname OR contactFirstname contains John (john would also work as the value search is case-insensitive)\r\n* notes starts with this is a test\r\n\r\nThe result is sorted by rowversion, and page 1 with 50 records is shown.\r\n\r\nHere is an example of how to do filtering with IN(). The IN(..) operator is not supported, but we can use the OR (|) operator instead: \r\n```\r\nhttps:///<your-url>/api/Customer?Filters=customerId==114961|114962|114963&Sorts=rowversion&Page=1&Pagesize=50\r\n```\r\nThe above example finds records where customerId is either 114961, 114962 or 114963. \r\n\r\n__3. A word of warning__\r\nWhen editing entity objects (e.g. Assignment, Customer etc) it is possible to send an entity object without the Id field in the payload. As an example, consider the following Assignment object: \r\n```\r\n{\r\n    'assignmentIdext': 'PM1239',\r\n    'assignmentIdtext': 'PM1239',\r\n    'parentAssignmentId': 0,\r\n    'customerId': 56700,\r\n    'description': 'An example Assignment object without AssignmentId'\r\n    ...\r\n}\r\n```\r\nIn the above example, the assignmentId field is omitted. If this Assignment object is used in a PUT transaction against the Assignment end point, there is a chance of overwriting an existing Assignment. If the use case is to edit the assignmentIdext property of an existing assignment, one must make sure that the value of the assignmentIdext does not already exist in the database. If there is another Assignment in the database with assignmentIdext equal to 'PM1239', this Assignment will be overwritten by the data given in the Assignment object above. This may not be intended. \r\nTo avoid this, the safe bet is to include the assignmentId in the Assignment object: \r\n```\r\n{\r\n    'assignmentId:' 12345,\r\n    'assignmentIdext': 'PM1239',\r\n    'assignmentIdtext': 'PM1239',\r\n    'parentAssignmentId': 0,\r\n    'customerId': 56700,\r\n    'description': 'An example Assignment object with AssignmentId'\r\n    ...\r\n}\r\n```\r\nThe same rule applies to all entities, i.e. include the Id value of the entity (if possible) when editing entities. \r\n\r\n__4. Some special properties (that need a bit more explanation)__\r\n* ```\r\n    TblAssignment.UseService\r\n  ```\r\n  Defines what service hours types are to be shown when adding AssignmentService on Assignment. \r\n  It is important to understand the hierarchy of how UseService is read from database on mobile devices.\r\n  Assignment.UseService has a higher priority than AssignmentType.UseService, so if * or empty string in\r\n  Assignment.UseService, it will look at AssignmentType.UseService.\r\n  Here is an overview on various alternatives:\r\n    * Alternative 1. ”Union with UserProfile”. Assignment.UseService or AssignmentType.UseService without special text\r\n      Example: 15;16;17;65\r\n      gives access to ServiceIDs 15;16;17;65, but ONLY if these are included in the current UserProfile.UseService (using AND with user profile).\r\n      Example: 0\r\n      gives access to no ServiceIDs at all.\r\n    * Alternative 2. ”In addition to UserProfile”. Using both Service Types from UserProfile and in current list from Assignment or AssignmentType.\r\n      Special text UP: Using (ServiceIDs from Assignment / AssignmentType) OR (UserProfile.UseService)\r\n      Example: UP;15;16;17;65\r\n      gives access to ServiceIDs in current user profile plus 15;16;17;65 (using 'OR' to UserProfile)\r\n    * Alternative 3. ”No UserProfile”. Skips the Service Types from UserProfile.UseService, and only gets them from Assignment.UseService / AssignmentType.UseService\r\n      Special text NUP: Using only UseService from Assignment / AssignmentType, ignoring UserProfile completely.\r\n      Example: NUP;15;16;17;65\r\n      gives only access to ServiceIDs 15;16;17;65\r\n        \r\n  Additional comments:\r\n    * Using both NUP and UP gives alternative 2.\r\n    * Setting Assignment.UseService = NUP  (without anything else), gives empty list of service types.\r\n\r\n* ```\r\n    TblAssignment.UseAssignmentListChoice\r\n  ```\r\n  Assignment menu items to appear on this assignment.\r\n  Please note that UseAssignmentListChoice parameter is present in multiple tables. The entries are overridden by this chain of priorities:\r\n    * Assignment\r\n    * AssignmentType\r\n    * UserProfile\r\n  With * or empty string in Assignment, SpeedyCraft looks for the next. Eventually UserProfile fallback value is used.\r\n  This string is semicolon-separated, and can have the following values:\r\n    * '*' = Show all items\r\n    *   = Show none [blank]\r\n    * PRO = Assignment products\r\n    * SER = Assignment services\r\n    * OBJ = Assignment objects\r\n    * OTH = Other\r\n    * INV = Invoice comment\r\n    * JOB = Job description\r\n    * ANO = Assignment notes\r\n    * LTG = Line tag\r\n    * TOT = Total list\r\n    * ECO = Economy info\r\n    * CON = Contact info\r\n\r\n    Example string: 'PRO;JOB;CON' -> Displays assignment products, job description and contact info.\r\n",
    "contact": {
      "name": "Devinco AS",
      "url": "https://devinco.com",
      "email": "aslak@devinco.com"
    },
    "version": "3.0.1"
  },
  "servers": [
    {
      "url": "https://137.135.134.2:4443/"
    }
  ],
  "paths": {
    "/api/AssignmentNote": {
      "get": {
        "tags": [
          "AssignmentNote"
        ],
        "summary": "Get Assignment Note entities",
        "operationId": "AssignmentNote_Get",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAssignmentNote"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AssignmentNote"
        ],
        "summary": "Edit an existing Assignment Note",
        "operationId": "AssignmentNote_EditAssignmentNote",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentNote"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentNote"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentNote"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "assignmentNote"
      },
      "post": {
        "tags": [
          "AssignmentNote"
        ],
        "summary": "Add a new Assignment Note",
        "operationId": "AssignmentNote_AddAssignmentNote",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentNote"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentNote"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentNote"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAssignmentNote"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "assignmentNote"
      }
    },
    "/api/AssignmentNote/Id/{assignmentNoteId}": {
      "get": {
        "tags": [
          "AssignmentNote"
        ],
        "summary": "Get Assignment Note by AssignmentNoteID",
        "operationId": "AssignmentNote_GetAssignmentNoteById",
        "parameters": [
          {
            "name": "assignmentNoteId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAssignmentNote"
                }
              }
            }
          }
        }
      }
    },
    "/api/AssignmentNote/IdExt/{assignmentNoteIdExt}": {
      "get": {
        "tags": [
          "AssignmentNote"
        ],
        "summary": "Get Assignment Note by AssignmentNoteIDExt",
        "operationId": "AssignmentNote_GetAssignmentNoteByIdExt",
        "parameters": [
          {
            "name": "assignmentNoteIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAssignmentNote"
                }
              }
            }
          }
        }
      }
    },
    "/api/AssignmentNote/neworchanged/{rowVersion}": {
      "get": {
        "tags": [
          "AssignmentNote"
        ],
        "summary": "Get new or changed Assignment Note entities",
        "operationId": "AssignmentNote_GetNewOrChanged",
        "parameters": [
          {
            "name": "rowVersion",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": false
            }
          },
          {
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAssignmentNote"
                }
              }
            }
          }
        }
      }
    },
    "/api/AssignmentNote/{assignmentNoteIdExt}": {
      "delete": {
        "tags": [
          "AssignmentNote"
        ],
        "summary": "Delete an AssignmentNote",
        "operationId": "AssignmentNote_DeleteAssignmentNote",
        "parameters": [
          {
            "name": "assignmentNoteIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        }
      }
    },
    "/api/Assignment": {
      "get": {
        "tags": [
          "Assignment"
        ],
        "summary": "Get Assignment entities",
        "operationId": "Assignment_Get",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAssignment"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Assignment"
        ],
        "summary": "Edit an existing Assignment",
        "operationId": "Assignment_EditAssignment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignment"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "assignment"
      },
      "post": {
        "tags": [
          "Assignment"
        ],
        "summary": "Add a new Assignment",
        "operationId": "Assignment_AddAssignment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignment"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAssignment"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "assignment"
      }
    },
    "/api/Assignment/extended/Id/{assignmentId}": {
      "get": {
        "tags": [
          "Assignment"
        ],
        "summary": "Get Assignment with related entities by AssignmentID",
        "operationId": "Assignment_GetExtendedById",
        "parameters": [
          {
            "name": "assignmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          },
          {
            "name": "IncludeCustomer",
            "in": "query",
            "description": "Include Customer data. Default true",
            "schema": {
              "type": "boolean",
              "nullable": false
            }
          },
          {
            "name": "IncludeEmployee",
            "in": "query",
            "description": "Include Employee data. Default true",
            "schema": {
              "type": "boolean",
              "nullable": false
            }
          },
          {
            "name": "IncludeAssignmentProduct",
            "in": "query",
            "description": "Include Assignment Product data. Default true",
            "schema": {
              "type": "boolean",
              "nullable": false
            }
          },
          {
            "name": "IncludeAssignmentService",
            "in": "query",
            "description": "Include Assignment Service data. Default true",
            "schema": {
              "type": "boolean",
              "nullable": false
            }
          },
          {
            "name": "IncludeAssignmentQualityControl",
            "in": "query",
            "description": "Include Assignment QualityControl data. Default true",
            "schema": {
              "type": "boolean",
              "nullable": false
            }
          },
          {
            "name": "IncludeAttachment",
            "in": "query",
            "description": "Include Attachment data. Default true",
            "schema": {
              "type": "boolean",
              "nullable": false
            }
          },
          {
            "name": "IncludeAttachmentFileData",
            "in": "query",
            "description": "Include Attachment file data Only valid if IncludeAttachment=true. Default false",
            "schema": {
              "type": "boolean",
              "nullable": false
            }
          },
          {
            "name": "IncludeAssignmentNote",
            "in": "query",
            "description": "Include Assignment Note data. Default true",
            "schema": {
              "type": "boolean",
              "nullable": false
            }
          },
          {
            "name": "IncludeAssignmentObject",
            "in": "query",
            "description": "Include Assignment Object data. Default true",
            "schema": {
              "type": "boolean",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AssignmentExtended"
                }
              }
            }
          }
        }
      }
    },
    "/api/Assignment/neworchanged/{rowVersion}": {
      "get": {
        "tags": [
          "Assignment"
        ],
        "summary": "Get new or changed Assignment entities",
        "operationId": "Assignment_GetNewOrChanged",
        "parameters": [
          {
            "name": "rowVersion",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": false
            }
          },
          {
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAssignment"
                }
              }
            }
          }
        }
      }
    },
    "/api/Assignment/Id/{assignmentId}": {
      "get": {
        "tags": [
          "Assignment"
        ],
        "summary": "Get Assignment by AssignmentID",
        "operationId": "Assignment_GetById",
        "parameters": [
          {
            "name": "assignmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAssignment"
                }
              }
            }
          }
        }
      }
    },
    "/api/Assignment/IdExt/{assignmentIdExt}": {
      "get": {
        "tags": [
          "Assignment"
        ],
        "summary": "Get Assignment by AssignmentIDExt",
        "operationId": "Assignment_GetByIdExt",
        "parameters": [
          {
            "name": "assignmentIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAssignment"
                }
              }
            }
          }
        }
      }
    },
    "/api/Assignment/{assignmentIdExt}": {
      "delete": {
        "tags": [
          "Assignment"
        ],
        "summary": "Delete an Assignment",
        "operationId": "Assignment_DeleteAssignment",
        "parameters": [
          {
            "name": "assignmentIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        }
      }
    },
    "/api/Assignment/IdExt/{assignmentIdExt}/attachment": {
      "post": {
        "tags": [
          "Assignment"
        ],
        "summary": "Add a new Attachment to an Assignment",
        "operationId": "Assignment_AddAttachment",
        "parameters": [
          {
            "name": "assignmentIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "AttachmentId": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "AttachmentIdext": {
                    "type": "string",
                    "nullable": true
                  },
                  "AttachmentIdtext": {
                    "type": "string",
                    "nullable": true
                  },
                  "AttachmentType": {
                    "type": "integer",
                    "format": "byte",
                    "nullable": true
                  },
                  "Description": {
                    "type": "string",
                    "nullable": true
                  },
                  "FileName": {
                    "type": "string",
                    "nullable": true
                  },
                  "FileSize": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "FileData": {
                    "type": "string",
                    "format": "byte",
                    "nullable": true
                  },
                  "IsOnServer": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "RegTime": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "RegEmployeeId": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "RegEmployeeIdext": {
                    "type": "string",
                    "nullable": true
                  },
                  "UpdateInfoExt": {
                    "type": "integer",
                    "format": "byte",
                    "nullable": true
                  },
                  "OwnerId": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "OwnerIdext": {
                    "type": "string",
                    "nullable": true
                  },
                  "OwnerType": {
                    "type": "integer",
                    "format": "byte",
                    "nullable": true
                  },
                  "OwnerIdtag": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "ShowRecord": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "EdokStatus": {
                    "type": "integer",
                    "format": "byte",
                    "nullable": true
                  },
                  "EdokRegTime": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "ParentAttachmentId": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "RevisionNumber": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "RowVer": {
                    "type": "integer",
                    "format": "int64",
                    "nullable": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAttachment"
                }
              }
            }
          }
        }
      }
    },
    "/api/Assignment/IdExt/{assignmentIdExt}/assignmentProduct": {
      "post": {
        "tags": [
          "Assignment"
        ],
        "summary": "Add a new Assignment Product to an Assignment",
        "operationId": "Assignment_AddAssignmentProduct",
        "parameters": [
          {
            "name": "assignmentIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentProduct"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentProduct"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentProduct"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAssignmentProduct"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "assignmentProduct"
      }
    },
    "/api/Assignment/IdExt/{assignmentIdExt}/assignmentService": {
      "post": {
        "tags": [
          "Assignment"
        ],
        "summary": "Add a new Assignment Service to an Assignment",
        "operationId": "Assignment_AddAssignmentService",
        "parameters": [
          {
            "name": "assignmentIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentService"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentService"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentService"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAssignmentService"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "assignmentService"
      }
    },
    "/api/Assignment/IdExt/{assignmentIdExt}/assignmentQualityControl": {
      "post": {
        "tags": [
          "Assignment"
        ],
        "summary": "Add a new Assignment Quality Control to an Assignment",
        "operationId": "Assignment_AddAssignmentQualityControl",
        "parameters": [
          {
            "name": "assignmentIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentQualityControl"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentQualityControl"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentQualityControl"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAssignmentQualityControl"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "assignmentQualityControl"
      }
    },
    "/api/AssignmentObject": {
      "get": {
        "tags": [
          "AssignmentObject"
        ],
        "summary": "Get Assignment Object entities",
        "operationId": "AssignmentObject_Get",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAssignmentObject"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AssignmentObject"
        ],
        "summary": "Edit an existing Assignment Object",
        "operationId": "AssignmentObject_EditAssignmentObject",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentObject"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentObject"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentObject"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "assignmentObject"
      },
      "post": {
        "tags": [
          "AssignmentObject"
        ],
        "summary": "Add a new Assignment Object",
        "operationId": "AssignmentObject_AddObject",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentObject"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentObject"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentObject"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAssignmentObject"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "assignmentObject"
      }
    },
    "/api/AssignmentObject/Id/{assignmentObjectId}": {
      "get": {
        "tags": [
          "AssignmentObject"
        ],
        "summary": "Get AssignmentObject by AssignmentObjectID",
        "operationId": "AssignmentObject_GetAssignmentObjectById",
        "parameters": [
          {
            "name": "assignmentObjectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAssignmentObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/AssignmentObject/IdExt/{assignmentObjectIdExt}": {
      "get": {
        "tags": [
          "AssignmentObject"
        ],
        "summary": "Get AssignmentObject by AssignmentObjectIDExt",
        "operationId": "AssignmentObject_GetAssignmentObjectByIdExt",
        "parameters": [
          {
            "name": "assignmentObjectIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAssignmentObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/AssignmentObject/neworchanged/{rowVersion}": {
      "get": {
        "tags": [
          "AssignmentObject"
        ],
        "summary": "Get new or changed Assignment Object entities",
        "operationId": "AssignmentObject_GetNewOrChanged",
        "parameters": [
          {
            "name": "rowVersion",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": false
            }
          },
          {
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAssignmentObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/AssignmentObject/{assignmentObjectIdExt}": {
      "delete": {
        "tags": [
          "AssignmentObject"
        ],
        "summary": "Delete an Assignment Object",
        "operationId": "AssignmentObject_DeleteAssignmentObject",
        "parameters": [
          {
            "name": "assignmentObjectIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        }
      }
    },
    "/api/AssignmentParticipant": {
      "get": {
        "tags": [
          "AssignmentParticipant"
        ],
        "summary": "Get Assignment Participant entities",
        "operationId": "AssignmentParticipant_Get",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAssignmentParticipant"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AssignmentParticipant"
        ],
        "summary": "Edit an existing Assignment Participant",
        "operationId": "AssignmentParticipant_EditAssignmentParticipant",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentParticipant"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentParticipant"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentParticipant"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "assignmentParticipant"
      },
      "post": {
        "tags": [
          "AssignmentParticipant"
        ],
        "summary": "Add a new AssignmentParticipant",
        "operationId": "AssignmentParticipant_AddAssignmentParticipant",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentParticipant"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentParticipant"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentParticipant"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAssignmentParticipant"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "assignmentParticipant"
      }
    },
    "/api/AssignmentParticipant/Id/{assignmentParticipantId}": {
      "get": {
        "tags": [
          "AssignmentParticipant"
        ],
        "summary": "Get AssignmentParticipant by AssignmentParticipantID",
        "operationId": "AssignmentParticipant_GetAssignmentParticipantById",
        "parameters": [
          {
            "name": "assignmentParticipantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAssignmentParticipant"
                }
              }
            }
          }
        }
      }
    },
    "/api/AssignmentParticipant/IdExt/{assignmentParticipantIdExt}": {
      "get": {
        "tags": [
          "AssignmentParticipant"
        ],
        "summary": "Get AssignmentParticipant by AssignmentParticipantIDExt",
        "operationId": "AssignmentParticipant_GetAssignmentParticipantByIdExt",
        "parameters": [
          {
            "name": "assignmentParticipantIdext",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAssignmentObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/AssignmentParticipant/neworchanged/{rowVersion}": {
      "get": {
        "tags": [
          "AssignmentParticipant"
        ],
        "summary": "Get new or changed Assignment Participant entities",
        "operationId": "AssignmentParticipant_GetNewOrChanged",
        "parameters": [
          {
            "name": "rowVersion",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": false
            }
          },
          {
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAssignmentParticipant"
                }
              }
            }
          }
        }
      }
    },
    "/api/AssignmentParticipant/{assignmentParticipantIdExt}": {
      "delete": {
        "tags": [
          "AssignmentParticipant"
        ],
        "summary": "Delete an Assignment Participant",
        "operationId": "AssignmentParticipant_DeleteAssignmentObject",
        "parameters": [
          {
            "name": "assignmentParticipantIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        }
      }
    },
    "/api/AssignmentPriority": {
      "get": {
        "tags": [
          "AssignmentPriority"
        ],
        "summary": "Get Assignment Pririty entities",
        "operationId": "AssignmentPriority_Get",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAssignmentPriority"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AssignmentPriority"
        ],
        "summary": "Edit an existing Assignment Priority",
        "operationId": "AssignmentPriority_EditAssignmentPriority",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentPriority"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentPriority"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentPriority"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "assignmentPriority"
      },
      "post": {
        "tags": [
          "AssignmentPriority"
        ],
        "summary": "Add a new Assignment Priority",
        "operationId": "AssignmentPriority_AddAssignmentType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentPriority"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentPriority"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentPriority"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAssignmentPriority"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "assignmentPriority"
      }
    },
    "/api/AssignmentPriority/Id/{assignmentPriorityId}": {
      "get": {
        "tags": [
          "AssignmentPriority"
        ],
        "summary": "Get Assignment Priority by AssignmentPriorityID",
        "operationId": "AssignmentPriority_GetAssignmentPriorityById",
        "parameters": [
          {
            "name": "assignmentPriorityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAssignmentPriority"
                }
              }
            }
          }
        }
      }
    },
    "/api/AssignmentPriority/IdExt/{assignmentPriorityIdExt}": {
      "get": {
        "tags": [
          "AssignmentPriority"
        ],
        "summary": "Get Assignment Priority by AssignmentPriorityIDExt",
        "operationId": "AssignmentPriority_GetAssignmentPriorityByIdExt",
        "parameters": [
          {
            "name": "assignmentPriorityIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAssignmentPriority"
                }
              }
            }
          }
        }
      }
    },
    "/api/AssignmentPriority/{assignmentPriorityIdExt}": {
      "delete": {
        "tags": [
          "AssignmentPriority"
        ],
        "summary": "Delete an AssignmentPriority",
        "operationId": "AssignmentPriority_DeleteAssignmentPriority",
        "parameters": [
          {
            "name": "assignmentPriorityIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        }
      }
    },
    "/api/AssignmentProduct": {
      "get": {
        "tags": [
          "AssignmentProduct"
        ],
        "summary": "Get Assigment Product entities",
        "operationId": "AssignmentProduct_Get",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAssignmentProduct"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AssignmentProduct"
        ],
        "summary": "Edit an existing Assignment Product",
        "operationId": "AssignmentProduct_EditAssignmentProduct",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentProduct"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentProduct"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentProduct"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "assignmentProduct"
      },
      "post": {
        "tags": [
          "AssignmentProduct"
        ],
        "summary": "Add a new AssignmentProduct",
        "operationId": "AssignmentProduct_AddAssignmentProduct",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentProduct"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentProduct"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentProduct"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAssignmentProduct"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "assignmentProduct"
      }
    },
    "/api/AssignmentProduct/Id/{assignmentProductId}": {
      "get": {
        "tags": [
          "AssignmentProduct"
        ],
        "summary": "Get Assignment Product by AssignmentProductID",
        "operationId": "AssignmentProduct_GetAssignmentProductById",
        "parameters": [
          {
            "name": "assignmentProductId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAssignmentService"
                }
              }
            }
          }
        }
      }
    },
    "/api/AssignmentProduct/IdExt/{assignmentProductIdExt}": {
      "get": {
        "tags": [
          "AssignmentProduct"
        ],
        "summary": "Get Assignment Product by AssignmentProductIDExt",
        "operationId": "AssignmentProduct_GetAssignmentProductByIdExt",
        "parameters": [
          {
            "name": "assignmentProductIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAssignmentService"
                }
              }
            }
          }
        }
      }
    },
    "/api/AssignmentProduct/{assignmentProductIdExt}": {
      "delete": {
        "tags": [
          "AssignmentProduct"
        ],
        "summary": "Delete an AssignmentProduct",
        "operationId": "AssignmentProduct_DeleteAssignmentProduct",
        "parameters": [
          {
            "name": "assignmentProductIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        }
      }
    },
    "/api/AssignmentProduct/neworchanged/{rowVersion}": {
      "get": {
        "tags": [
          "AssignmentProduct"
        ],
        "summary": "Get new or changed Assignment Product entities",
        "operationId": "AssignmentProduct_GetNewOrChanged",
        "parameters": [
          {
            "name": "rowVersion",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": false
            }
          },
          {
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAssignmentProduct"
                }
              }
            }
          }
        }
      }
    },
    "/api/AssignmentQualityControl": {
      "get": {
        "tags": [
          "AssignmentQualityControl"
        ],
        "summary": "Get Assigment QualityControl entities",
        "operationId": "AssignmentQualityControl_Get",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAssignmentQualityControl"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AssignmentQualityControl"
        ],
        "summary": "Edit an existing Assignment Quality Control",
        "operationId": "AssignmentQualityControl_EditAssignmentQualityControl",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentQualityControl"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentQualityControl"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentQualityControl"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "assignmentQualityControl"
      },
      "post": {
        "tags": [
          "AssignmentQualityControl"
        ],
        "summary": "Add a new Assignment Quality Control",
        "operationId": "AssignmentQualityControl_AddAssignmentQualityControl",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentQualityControl"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentQualityControl"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentQualityControl"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAssignmentQualityControl"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "assignmentQualityControl"
      }
    },
    "/api/AssignmentQualityControl/Id/{assignmentQualityControlId}": {
      "get": {
        "tags": [
          "AssignmentQualityControl"
        ],
        "summary": "Get Assignment Quality Control by AssignmentQualityControlID",
        "operationId": "AssignmentQualityControl_GetAssignmentQualityControlById",
        "parameters": [
          {
            "name": "assignmentQualityControlId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAssignmentQualityControl"
                }
              }
            }
          }
        }
      }
    },
    "/api/AssignmentQualityControl/IdExt/{assignmentQualityControlIdExt}": {
      "get": {
        "tags": [
          "AssignmentQualityControl"
        ],
        "summary": "Get Assignment Quality Control by AssignmentQualityControlIDExt",
        "operationId": "AssignmentQualityControl_GetAssignmentQualityControlByIdExt",
        "parameters": [
          {
            "name": "assignmentQualityControlIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAssignmentQualityControl"
                }
              }
            }
          }
        }
      }
    },
    "/api/AssignmentQualityControl/neworchanged/{rowVersion}": {
      "get": {
        "tags": [
          "AssignmentQualityControl"
        ],
        "summary": "Get new or changed Assignment Quality Control entities",
        "operationId": "AssignmentQualityControl_GetNewOrChanged",
        "parameters": [
          {
            "name": "rowVersion",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": false
            }
          },
          {
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAssignmentQualityControl"
                }
              }
            }
          }
        }
      }
    },
    "/api/AssignmentQualityControl/{assignmentQualityControlIdExt}": {
      "delete": {
        "tags": [
          "AssignmentQualityControl"
        ],
        "summary": "Delete an Assignment Quality Control",
        "operationId": "AssignmentQualityControl_DeleteAssignmentQualityControl",
        "parameters": [
          {
            "name": "assignmentQualityControlIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        }
      }
    },
    "/api/AssignmentQualityControl/download/IdExt/{assignmentQualityControlIdExt}": {
      "get": {
        "tags": [
          "AssignmentQualityControl"
        ],
        "summary": "Download Assignment Quality Control PDF by AssignmentQualityControlIDExt",
        "operationId": "AssignmentQualityControl_DownloadAssignmentQualityControlByIdExt",
        "parameters": [
          {
            "name": "assignmentQualityControlIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAssignmentService"
                }
              }
            }
          }
        }
      }
    },
    "/api/AssignmentQualityControl/IdExt/{assignmentQualityControlIdExt}/attachment": {
      "post": {
        "tags": [
          "AssignmentQualityControl"
        ],
        "summary": "Add a new Attachment to the Assignment Quality Control",
        "operationId": "AssignmentQualityControl_AddAttachment",
        "parameters": [
          {
            "name": "assignmentQualityControlIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "AttachmentId": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "AttachmentIdext": {
                    "type": "string",
                    "nullable": true
                  },
                  "AttachmentIdtext": {
                    "type": "string",
                    "nullable": true
                  },
                  "AttachmentType": {
                    "type": "integer",
                    "format": "byte",
                    "nullable": true
                  },
                  "Description": {
                    "type": "string",
                    "nullable": true
                  },
                  "FileName": {
                    "type": "string",
                    "nullable": true
                  },
                  "FileSize": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "FileData": {
                    "type": "string",
                    "format": "byte",
                    "nullable": true
                  },
                  "IsOnServer": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "RegTime": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "RegEmployeeId": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "RegEmployeeIdext": {
                    "type": "string",
                    "nullable": true
                  },
                  "UpdateInfoExt": {
                    "type": "integer",
                    "format": "byte",
                    "nullable": true
                  },
                  "OwnerId": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "OwnerIdext": {
                    "type": "string",
                    "nullable": true
                  },
                  "OwnerType": {
                    "type": "integer",
                    "format": "byte",
                    "nullable": true
                  },
                  "OwnerIdtag": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "ShowRecord": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "EdokStatus": {
                    "type": "integer",
                    "format": "byte",
                    "nullable": true
                  },
                  "EdokRegTime": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "ParentAttachmentId": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "RevisionNumber": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "RowVer": {
                    "type": "integer",
                    "format": "int64",
                    "nullable": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAttachment"
                }
              }
            }
          }
        }
      }
    },
    "/api/AssignmentService": {
      "get": {
        "tags": [
          "AssignmentService"
        ],
        "summary": "Get Assigment Service entities",
        "operationId": "AssignmentService_Get",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAssignmentService"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AssignmentService"
        ],
        "summary": "Edit an existing Assignment Service",
        "operationId": "AssignmentService_EditAssignmentService",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentService"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentService"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentService"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "assignmentService"
      },
      "post": {
        "tags": [
          "AssignmentService"
        ],
        "summary": "Add a new AssignmentService",
        "operationId": "AssignmentService_AddAssignmentService",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentService"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentService"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentService"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAssignmentService"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "assignmentService"
      }
    },
    "/api/AssignmentService/Id/{assignmentServiceId}": {
      "get": {
        "tags": [
          "AssignmentService"
        ],
        "summary": "Get Assignment Service by AssignmentServiceID",
        "operationId": "AssignmentService_GetAssignmentServiceById",
        "parameters": [
          {
            "name": "assignmentServiceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAssignmentService"
                }
              }
            }
          }
        }
      }
    },
    "/api/AssignmentService/IdExt/{assignmentServiceIdExt}": {
      "get": {
        "tags": [
          "AssignmentService"
        ],
        "summary": "Get Assignment Service by AssignmentServiceIDExt",
        "operationId": "AssignmentService_GetAssignmentServiceByIdExt",
        "parameters": [
          {
            "name": "assignmentServiceIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAssignmentService"
                }
              }
            }
          }
        }
      }
    },
    "/api/AssignmentService/neworchanged/{rowVersion}": {
      "get": {
        "tags": [
          "AssignmentService"
        ],
        "summary": "Get new or changed Assignment Service entities",
        "operationId": "AssignmentService_GetNewOrChanged",
        "parameters": [
          {
            "name": "rowVersion",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": false
            }
          },
          {
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAssignmentService"
                }
              }
            }
          }
        }
      }
    },
    "/api/AssignmentService/{assignmentServiceIdExt}": {
      "delete": {
        "tags": [
          "AssignmentService"
        ],
        "summary": "Delete an Assignment Service",
        "operationId": "AssignmentService_DeleteAssignmentService",
        "parameters": [
          {
            "name": "assignmentServiceIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        }
      }
    },
    "/api/AssignmentStatus": {
      "get": {
        "tags": [
          "AssignmentStatus"
        ],
        "summary": "Get Assignment Status entities",
        "operationId": "AssignmentStatus_Get",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAssignmentStatus"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AssignmentStatus"
        ],
        "summary": "Edit an existing Assignment Status",
        "operationId": "AssignmentStatus_EditAssignmentStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentStatus"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentStatus"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentStatus"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "assignmentStatus"
      },
      "post": {
        "tags": [
          "AssignmentStatus"
        ],
        "summary": "Add a new Assignment Status",
        "operationId": "AssignmentStatus_AddAssignmentStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentStatus"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentStatus"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentStatus"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAssignmentStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "assignmentStatus"
      }
    },
    "/api/AssignmentStatus/Id/{assignmentStatusId}": {
      "get": {
        "tags": [
          "AssignmentStatus"
        ],
        "summary": "Get Assignment Status by AssignmentStatusID",
        "operationId": "AssignmentStatus_GetAssignmentStatusById",
        "parameters": [
          {
            "name": "assignmentStatusId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAssignmentType"
                }
              }
            }
          }
        }
      }
    },
    "/api/AssignmentStatus/IdExt/{assignmentStatusIdExt}": {
      "get": {
        "tags": [
          "AssignmentStatus"
        ],
        "summary": "Get Assignment Status by AssignmentStatusID",
        "operationId": "AssignmentStatus_GetAssignmentStatusByIdExt",
        "parameters": [
          {
            "name": "assignmentStatusIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAssignmentType"
                }
              }
            }
          }
        }
      }
    },
    "/api/AssignmentStatus/{assignmentStatusIdExt}": {
      "delete": {
        "tags": [
          "AssignmentStatus"
        ],
        "summary": "Delete an AssignmentStatus",
        "operationId": "AssignmentStatus_DeleteAssignmentStatus",
        "parameters": [
          {
            "name": "assignmentStatusIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        }
      }
    },
    "/api/AssignmentType": {
      "get": {
        "tags": [
          "AssignmentType"
        ],
        "summary": "Get Assignment Type entities",
        "operationId": "AssignmentType_Get",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAssignmentType"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AssignmentType"
        ],
        "summary": "Edit an existing Assignment Type",
        "operationId": "AssignmentType_EditAssignmentType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentType"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentType"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentType"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "assignmentType"
      },
      "post": {
        "tags": [
          "AssignmentType"
        ],
        "summary": "Add a new Assignment Type",
        "operationId": "AssignmentType_AddAssignmentType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentType"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentType"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblAssignmentType"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAssignmentType"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "assignmentType"
      }
    },
    "/api/AssignmentType/Id/{assignmentTypeId}": {
      "get": {
        "tags": [
          "AssignmentType"
        ],
        "summary": "Get Assignment Type by AssignmentTypeID",
        "operationId": "AssignmentType_GetAssignmentTypeById",
        "parameters": [
          {
            "name": "assignmentTypeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAssignmentType"
                }
              }
            }
          }
        }
      }
    },
    "/api/AssignmentType/IdExt/{assignmentTypeIdExt}": {
      "get": {
        "tags": [
          "AssignmentType"
        ],
        "summary": "Get Assignment Type by AssignmentTypeIDExt",
        "operationId": "AssignmentType_GetAssignmentTypeByIdExt",
        "parameters": [
          {
            "name": "assignmentTypeIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAssignmentType"
                }
              }
            }
          }
        }
      }
    },
    "/api/AssignmentType/{assignmentTypeIdExt}": {
      "delete": {
        "tags": [
          "AssignmentType"
        ],
        "summary": "Delete an AssignmentType",
        "operationId": "AssignmentType_DeleteAssignmentType",
        "parameters": [
          {
            "name": "assignmentTypeIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        }
      }
    },
    "/api/Attachment": {
      "get": {
        "tags": [
          "Attachment"
        ],
        "summary": "Get Attachment entities",
        "operationId": "Attachment_Get",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "includeFileData",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": false,
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAttachment"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Attachment"
        ],
        "summary": "Edit an existing Attachment. NB! It is not possible to edit the FileData property",
        "operationId": "Attachment_EditAttachment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblAttachment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblAttachment"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblAttachment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "attachment"
      },
      "post": {
        "tags": [
          "Attachment"
        ],
        "summary": "Add a new Attachment",
        "operationId": "Attachment_AddAttachment",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "AttachmentId": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "AttachmentIdext": {
                    "type": "string",
                    "nullable": true
                  },
                  "AttachmentIdtext": {
                    "type": "string",
                    "nullable": true
                  },
                  "AttachmentType": {
                    "type": "integer",
                    "format": "byte",
                    "nullable": true
                  },
                  "Description": {
                    "type": "string",
                    "nullable": true
                  },
                  "FileName": {
                    "type": "string",
                    "nullable": true
                  },
                  "FileSize": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "FileData": {
                    "type": "string",
                    "format": "byte",
                    "nullable": true
                  },
                  "IsOnServer": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "RegTime": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "RegEmployeeId": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "RegEmployeeIdext": {
                    "type": "string",
                    "nullable": true
                  },
                  "UpdateInfoExt": {
                    "type": "integer",
                    "format": "byte",
                    "nullable": true
                  },
                  "OwnerId": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "OwnerIdext": {
                    "type": "string",
                    "nullable": true
                  },
                  "OwnerType": {
                    "type": "integer",
                    "format": "byte",
                    "nullable": true
                  },
                  "OwnerIdtag": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "ShowRecord": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "EdokStatus": {
                    "type": "integer",
                    "format": "byte",
                    "nullable": true
                  },
                  "EdokRegTime": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "ParentAttachmentId": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "RevisionNumber": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "RowVer": {
                    "type": "integer",
                    "format": "int64",
                    "nullable": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAttachment"
                }
              }
            }
          }
        }
      }
    },
    "/api/Attachment/IdExt/{attachmentIdExt}": {
      "get": {
        "tags": [
          "Attachment"
        ],
        "summary": "Get Attachment by AttachmentIdExt. Set includeFileData=true to get the attachment file data",
        "operationId": "Attachment_GetAttachmentByIdExt",
        "parameters": [
          {
            "name": "attachmentIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "includeFileData",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": false,
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAttachment"
                }
              }
            }
          }
        }
      }
    },
    "/api/Attachment/Id/{attachmentId}": {
      "get": {
        "tags": [
          "Attachment"
        ],
        "summary": "Get Attachment by AttachmentId. Set includeFileData=true to get the attachment file data",
        "operationId": "Attachment_GetAttachmentById",
        "parameters": [
          {
            "name": "attachmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          },
          {
            "name": "includeFileData",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": false,
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAssignmentQualityControl"
                }
              }
            }
          }
        }
      }
    },
    "/api/Attachment/neworchanged/{rowVersion}": {
      "get": {
        "tags": [
          "Attachment"
        ],
        "summary": "Get new or changed Attachment entities. Set includeFileData=true to get the attachment file data",
        "operationId": "Attachment_GetNewOrChanged",
        "parameters": [
          {
            "name": "rowVersion",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": false
            }
          },
          {
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "includeFileData",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": false,
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAttachment"
                }
              }
            }
          }
        }
      }
    },
    "/api/Attachment/download/IdExt/{attachmentIdExt}": {
      "get": {
        "tags": [
          "Attachment"
        ],
        "summary": "Download Attachment by AttachmentIDExt",
        "operationId": "Attachment_DownloadAttachmentByIdExt",
        "parameters": [
          {
            "name": "attachmentIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblAttachment"
                }
              }
            }
          }
        }
      }
    },
    "/api/Attachment/{attachmentIdExt}": {
      "delete": {
        "tags": [
          "Attachment"
        ],
        "summary": "Delete an Attachment",
        "operationId": "Attachment_DeleteAttachment",
        "parameters": [
          {
            "name": "attachmentIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        }
      }
    },
    "/api/Customer": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Get Customer entities",
        "operationId": "Customer_Get",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblCustomer"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Edit an existing Customer",
        "operationId": "Customer_EditCustomer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblCustomer"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblCustomer"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblCustomer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "customer"
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Add a new Customer",
        "operationId": "Customer_AddCustomer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblCustomer"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblCustomer"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblCustomer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblCustomer"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "customer"
      }
    },
    "/api/Customer/Id/{customerId}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Get Customer by CustomerID",
        "operationId": "Customer_GetCustomerById",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblCustomer"
                }
              }
            }
          }
        }
      }
    },
    "/api/Customer/IdExt/{customerIdExt}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Get Customer by CustomerIDExt",
        "operationId": "Customer_GetByIdExt",
        "parameters": [
          {
            "name": "customerIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblCustomer"
                }
              }
            }
          }
        }
      }
    },
    "/api/Customer/neworchanged/{rowVersion}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Get new or changed Customer entities",
        "operationId": "Customer_GetNewOrChanged",
        "parameters": [
          {
            "name": "rowVersion",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": false
            }
          },
          {
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblCustomer"
                }
              }
            }
          }
        }
      }
    },
    "/api/Customer/{customerIdExt}": {
      "delete": {
        "tags": [
          "Customer"
        ],
        "summary": "Delete a Customer",
        "operationId": "Customer_DeleteCustomer",
        "parameters": [
          {
            "name": "customerIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        }
      }
    },
    "/api/CustomerSite": {
      "get": {
        "tags": [
          "CustomerSite"
        ],
        "summary": "Get Customer Site entities",
        "operationId": "CustomerSite_Get",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblCustomerSite"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CustomerSite"
        ],
        "summary": "Edit an existing Customer Site",
        "operationId": "CustomerSite_EditCustomerSite",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblCustomerSite"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblCustomerSite"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblCustomerSite"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "customerSite"
      },
      "post": {
        "tags": [
          "CustomerSite"
        ],
        "summary": "Add a new Customer Site",
        "operationId": "CustomerSite_AddCustomerSite",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblCustomerSite"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblCustomerSite"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblCustomerSite"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblCustomerSite"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "customerSite"
      }
    },
    "/api/CustomerSite/Id/{customerSiteId}": {
      "get": {
        "tags": [
          "CustomerSite"
        ],
        "summary": "Get Customer Site by CustomerSiteID",
        "operationId": "CustomerSite_GetCustomerSiteById",
        "parameters": [
          {
            "name": "customerSiteId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblCustomerSite"
                }
              }
            }
          }
        }
      }
    },
    "/api/CustomerSite/IdExt/{customerSiteIdExt}": {
      "get": {
        "tags": [
          "CustomerSite"
        ],
        "summary": "Get Customer Site by CustomerSiteIDExt",
        "operationId": "CustomerSite_GetCustomerSiteByIdExt",
        "parameters": [
          {
            "name": "customerSiteIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblCustomerSite"
                }
              }
            }
          }
        }
      }
    },
    "/api/CustomerSite/neworchanged/{rowVersion}": {
      "get": {
        "tags": [
          "CustomerSite"
        ],
        "summary": "Get new or changed Customer Site entities",
        "operationId": "CustomerSite_GetNewOrChanged",
        "parameters": [
          {
            "name": "rowVersion",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": false
            }
          },
          {
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblCustomerSite"
                }
              }
            }
          }
        }
      }
    },
    "/api/CustomerSite/{customerSiteIdExt}": {
      "delete": {
        "tags": [
          "CustomerSite"
        ],
        "summary": "Delete a Customer Site",
        "operationId": "CustomerSite_DeleteCustomerSite",
        "parameters": [
          {
            "name": "customerSiteIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        }
      }
    },
    "/api/Department": {
      "get": {
        "tags": [
          "Department"
        ],
        "summary": "Get Department entities",
        "operationId": "Department_Get",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblDepartment"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Department"
        ],
        "summary": "Edit an existing Department",
        "operationId": "Department_EditDepartment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblDepartment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblDepartment"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblDepartment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "department"
      },
      "post": {
        "tags": [
          "Department"
        ],
        "summary": "Add a new Department",
        "operationId": "Department_AddSupplier",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblDepartment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblDepartment"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblDepartment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblDepartment"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "department"
      }
    },
    "/api/Department/Id/{departmentId}": {
      "get": {
        "tags": [
          "Department"
        ],
        "summary": "Get Department by DepartmentID",
        "operationId": "Department_GetDepartmentById",
        "parameters": [
          {
            "name": "departmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblDepartment"
                }
              }
            }
          }
        }
      }
    },
    "/api/Department/IdExt/{departmentIdExt}": {
      "get": {
        "tags": [
          "Department"
        ],
        "summary": "Get Department by DepartmentIDExt",
        "operationId": "Department_GetDepartmentByIdExt",
        "parameters": [
          {
            "name": "departmentIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblDepartment"
                }
              }
            }
          }
        }
      }
    },
    "/api/Department/neworchanged/{rowVersion}": {
      "get": {
        "tags": [
          "Department"
        ],
        "summary": "Get new or changed Department entities",
        "operationId": "Department_GetNewOrChanged",
        "parameters": [
          {
            "name": "rowVersion",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": false
            }
          },
          {
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblDepartment"
                }
              }
            }
          }
        }
      }
    },
    "/api/Department/{departmentIdExt}": {
      "delete": {
        "tags": [
          "Department"
        ],
        "summary": "Delete a Department",
        "operationId": "Department_DeleteDepartment",
        "parameters": [
          {
            "name": "departmentIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        }
      }
    },
    "/api/Dimension": {
      "get": {
        "tags": [
          "Dimension"
        ],
        "summary": "Get Dimension entities",
        "operationId": "Dimension_Get",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblDimension"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Dimension"
        ],
        "summary": "Edit an existing Dimension",
        "operationId": "Dimension_EditDimension",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblDimension"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblDimension"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblDimension"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "dimension"
      },
      "post": {
        "tags": [
          "Dimension"
        ],
        "summary": "Add a new Dimension",
        "operationId": "Dimension_AddDimension",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblDimension"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblDimension"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblDimension"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblDimension"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "dimension"
      }
    },
    "/api/Dimension/Id/{dimensionId}": {
      "get": {
        "tags": [
          "Dimension"
        ],
        "summary": "Get Dimension by DimensionId",
        "operationId": "Dimension_GetDimensionById",
        "parameters": [
          {
            "name": "dimensionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblDimension"
                }
              }
            }
          }
        }
      }
    },
    "/api/Dimension/IdExt/{dimensionIDExt}": {
      "get": {
        "tags": [
          "Dimension"
        ],
        "summary": "Get Dimension by DimensionIDExt",
        "operationId": "Dimension_GetDimensionByIdExt",
        "parameters": [
          {
            "name": "dimensionIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblDimension"
                }
              }
            }
          }
        }
      }
    },
    "/api/Dimension/{dimensionIdExt}": {
      "delete": {
        "tags": [
          "Dimension"
        ],
        "summary": "Delete a Dimension",
        "operationId": "Dimension_DeleteDimension",
        "parameters": [
          {
            "name": "dimensionIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        }
      }
    },
    "/api/DimensionLink": {
      "get": {
        "tags": [
          "DimensionLink"
        ],
        "summary": "Get DimensionLink entities",
        "operationId": "DimensionLink_Get",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblDimensionLink"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "DimensionLink"
        ],
        "summary": "Edit an existing DimensionLink",
        "operationId": "DimensionLink_EditDimensionLink",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblDimensionLink"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblDimensionLink"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblDimensionLink"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "dimensionLink"
      },
      "post": {
        "tags": [
          "DimensionLink"
        ],
        "summary": "Add a new DimensionLink",
        "operationId": "DimensionLink_AddDimensionLink",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblDimensionLink"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblDimensionLink"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblDimensionLink"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblDimensionLink"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "dimensionLink"
      }
    },
    "/api/DimensionLink/Id/{dimensionLinkId}": {
      "get": {
        "tags": [
          "DimensionLink"
        ],
        "summary": "Get DimensionLink by DimensionLinkId",
        "operationId": "DimensionLink_GetDimensionLinkById",
        "parameters": [
          {
            "name": "dimensionLinkId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblDimensionLink"
                }
              }
            }
          }
        }
      }
    },
    "/api/DimensionLink/IdExt/{dimensionLinkIDExt}": {
      "get": {
        "tags": [
          "DimensionLink"
        ],
        "summary": "Get DimensionLink by DimensionLinkIDExt",
        "operationId": "DimensionLink_GetDimensionLinkByIdExt",
        "parameters": [
          {
            "name": "dimensionLinkIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblDimensionLink"
                }
              }
            }
          }
        }
      }
    },
    "/api/DimensionLink/neworchanged/{rowVersion}": {
      "get": {
        "tags": [
          "DimensionLink"
        ],
        "summary": "Get new or changed Dimension Link entities",
        "operationId": "DimensionLink_GetNewOrChanged",
        "parameters": [
          {
            "name": "rowVersion",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": false
            }
          },
          {
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblDimensionLink"
                }
              }
            }
          }
        }
      }
    },
    "/api/DimensionLink/{dimensionLinkIdExt}": {
      "delete": {
        "tags": [
          "DimensionLink"
        ],
        "summary": "Delete a Dimension Link",
        "operationId": "DimensionLink_DeleteDimensionLink",
        "parameters": [
          {
            "name": "dimensionLinkIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        }
      }
    },
    "/api/Employee": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get Employee entities",
        "operationId": "Employee_Get",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblEmployee"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Employee"
        ],
        "summary": "Edit an existing Employee",
        "operationId": "Employee_EditEmployee",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblEmployee"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblEmployee"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblEmployee"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "employee"
      },
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Add a new Employee",
        "operationId": "Employee_AddEmployee",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblEmployee"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblEmployee"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblEmployee"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblEmployee"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "employee"
      }
    },
    "/api/Employee/Id/{employeeId}": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get Employee by EmployeeID",
        "operationId": "Employee_GetById",
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblEmployee"
                }
              }
            }
          }
        }
      }
    },
    "/api/Employee/IdExt/{employeeIdExt}": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get Employee by EmployeeIDExt",
        "operationId": "Employee_GetByIdExt",
        "parameters": [
          {
            "name": "employeeIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblEmployee"
                }
              }
            }
          }
        }
      }
    },
    "/api/Employee/neworchanged/{rowVersion}": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get new or changed Employee entities",
        "operationId": "Employee_GetNewOrChanged",
        "parameters": [
          {
            "name": "rowVersion",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": false
            }
          },
          {
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblEmployee"
                }
              }
            }
          }
        }
      }
    },
    "/api/Employee/{employeeIdExt}": {
      "delete": {
        "tags": [
          "Employee"
        ],
        "summary": "Delete an Employee",
        "operationId": "Employee_DeleteEmployee",
        "parameters": [
          {
            "name": "employeeIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        }
      }
    },
    "/api/MobileDevice": {
      "get": {
        "tags": [
          "MobileDevice"
        ],
        "summary": "Get Mobile Device entities",
        "operationId": "MobileDevice_Get",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "includeImageData",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": false,
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblPocketPc"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "MobileDevice"
        ],
        "summary": "Edit an existing Mobile Device",
        "operationId": "MobileDevice_EditMobileDevice",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblPocketPc"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblPocketPc"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblPocketPc"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "mobileDevice"
      },
      "post": {
        "tags": [
          "MobileDevice"
        ],
        "summary": "Add a new Mobile Device",
        "operationId": "MobileDevice_AddMobileDevice",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblPocketPc"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblPocketPc"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblPocketPc"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblPocketPc"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "mobileDevice"
      }
    },
    "/api/MobileDevice/Id/{pocketPcId}": {
      "get": {
        "tags": [
          "MobileDevice"
        ],
        "summary": "Get Mobile Device by PocketPcId",
        "operationId": "MobileDevice_GetMobileDeviceById",
        "parameters": [
          {
            "name": "pocketPcId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblPocketPc"
                }
              }
            }
          }
        }
      }
    },
    "/api/MobileDevice/Serial/{serialNumber}": {
      "get": {
        "tags": [
          "MobileDevice"
        ],
        "summary": "Get Mobile Device by Serial Number",
        "operationId": "MobileDevice_GetMobileDeviceBySerial",
        "parameters": [
          {
            "name": "serialNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblPocketPc"
                }
              }
            }
          }
        }
      }
    },
    "/api/MobileDevice/{serialNumber}": {
      "delete": {
        "tags": [
          "MobileDevice"
        ],
        "summary": "Delete a Mobile Device",
        "operationId": "MobileDevice_DeleteMobileDevice",
        "parameters": [
          {
            "name": "serialNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        }
      }
    },
    "/api/Object": {
      "get": {
        "tags": [
          "Object"
        ],
        "summary": "Get Object entities",
        "operationId": "Object_Get",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblObject"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Object"
        ],
        "summary": "Edit an existing Object",
        "operationId": "Object_EditObject",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblObject"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblObject"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblObject"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "myObject"
      },
      "post": {
        "tags": [
          "Object"
        ],
        "summary": "Add a new Object",
        "operationId": "Object_AddObject",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblObject"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblObject"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblObject"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblObject"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "myObject"
      }
    },
    "/api/Object/Id/{objectId}": {
      "get": {
        "tags": [
          "Object"
        ],
        "summary": "Get Object by ObjectID",
        "operationId": "Object_GetObjectById",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/Object/IdExt/{objectIdExt}": {
      "get": {
        "tags": [
          "Object"
        ],
        "summary": "Get Object by ObjectIDExt",
        "operationId": "Object_GetObjectByIdExt",
        "parameters": [
          {
            "name": "objectIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/Object/neworchanged/{rowVersion}": {
      "get": {
        "tags": [
          "Object"
        ],
        "summary": "Get new or changed Object entities",
        "operationId": "Object_GetNewOrChanged",
        "parameters": [
          {
            "name": "rowVersion",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": false
            }
          },
          {
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/Object/{objectIdExt}": {
      "delete": {
        "tags": [
          "Object"
        ],
        "summary": "Delete an Object",
        "operationId": "Object_DeleteObject",
        "parameters": [
          {
            "name": "objectIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        }
      }
    },
    "/api/Order": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Get Order entities",
        "operationId": "Order_Get",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblOrder"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Order"
        ],
        "summary": "Edit an existing Order",
        "operationId": "Order_EditOrder",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblOrder"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblOrder"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblOrder"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "order"
      },
      "post": {
        "tags": [
          "Order"
        ],
        "summary": "Add a new Order",
        "operationId": "Order_AddOrder",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblOrder"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblOrder"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblOrder"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblOrder"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "order"
      }
    },
    "/api/Order/Id/{orderId}": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Get Order by OrderID",
        "operationId": "Order_GetOrderById",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblOrder"
                }
              }
            }
          }
        }
      }
    },
    "/api/Order/IdExt/{orderIdExt}": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Get Order by OrderIDExt",
        "operationId": "Order_GetOrderByIdExt",
        "parameters": [
          {
            "name": "orderIdext",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblOrder"
                }
              }
            }
          }
        }
      }
    },
    "/api/Order/neworchanged/{rowVersion}": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Get new or changed Order entities",
        "operationId": "Order_GetNewOrChanged",
        "parameters": [
          {
            "name": "rowVersion",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": false
            }
          },
          {
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblOrder"
                }
              }
            }
          }
        }
      }
    },
    "/api/Order/{orderIdExt}": {
      "delete": {
        "tags": [
          "Order"
        ],
        "summary": "Delete an Order",
        "operationId": "Order_DeleteOrder",
        "parameters": [
          {
            "name": "orderIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        }
      }
    },
    "/api/OrderItem": {
      "get": {
        "tags": [
          "OrderItem"
        ],
        "summary": "Get Order Item entities",
        "operationId": "OrderItem_Get",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblOrderItem"
                }
              }
            }
          }
        }
      }
    },
    "/api/OrderItem/Id/{orderItemId}": {
      "get": {
        "tags": [
          "OrderItem"
        ],
        "summary": "Get Order Item by OrderItemID",
        "operationId": "OrderItem_GetOrderItemById",
        "parameters": [
          {
            "name": "orderItemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblOrderItem"
                }
              }
            }
          }
        }
      }
    },
    "/api/OrderItem/IdExt/{orderItemIdExt}": {
      "get": {
        "tags": [
          "OrderItem"
        ],
        "summary": "Get Order Item by OrderItemIDExt",
        "operationId": "OrderItem_GetOrderItemByIdExt",
        "parameters": [
          {
            "name": "orderItemIdext",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblOrderItem"
                }
              }
            }
          }
        }
      }
    },
    "/api/OrderItem/neworchanged/{rowVersion}": {
      "get": {
        "tags": [
          "OrderItem"
        ],
        "summary": "Get new or changed Order Item entities",
        "operationId": "OrderItem_GetNewOrChanged",
        "parameters": [
          {
            "name": "rowVersion",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": false
            }
          },
          {
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblOrderItem"
                }
              }
            }
          }
        }
      }
    },
    "/api/Product": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get Product entities",
        "operationId": "Product_Get",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblProduct"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "summary": "Edit an existing Product",
        "operationId": "Product_EditProduct",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblProduct"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblProduct"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblProduct"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "product"
      },
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Add a new Product",
        "operationId": "Product_AddProduct",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblProduct"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblProduct"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblProduct"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblProduct"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "product"
      }
    },
    "/api/Product/Id/{productId}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get Product by ProductID",
        "operationId": "Product_GetProductById",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblProduct"
                }
              }
            }
          }
        }
      }
    },
    "/api/Product/IdExt/{productIdExt}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get Product by ProductIDExt",
        "operationId": "Product_GetProductByIdExt",
        "parameters": [
          {
            "name": "productIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblProduct"
                }
              }
            }
          }
        }
      }
    },
    "/api/Product/{productIdExt}": {
      "delete": {
        "tags": [
          "Product"
        ],
        "summary": "Delete a Product",
        "operationId": "Product_DeleteProduct",
        "parameters": [
          {
            "name": "productIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        }
      }
    },
    "/api/ProductSupplier": {
      "get": {
        "tags": [
          "ProductSupplier"
        ],
        "summary": "Get Product Supplier entities",
        "operationId": "ProductSupplier_Get",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblProductSupplier"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProductSupplier"
        ],
        "summary": "Edit an existing Product Supplier",
        "operationId": "ProductSupplier_EditProductSupplier",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblProductSupplier"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblProductSupplier"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblProductSupplier"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "productSupplier"
      },
      "post": {
        "tags": [
          "ProductSupplier"
        ],
        "summary": "Add a new Product Supplier",
        "operationId": "ProductSupplier_AddProductSupplier",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblProductSupplier"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblProductSupplier"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblProductSupplier"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblProductSupplier"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "productSupplier"
      }
    },
    "/api/ProductSupplier/Id/{productSupplierId}": {
      "get": {
        "tags": [
          "ProductSupplier"
        ],
        "summary": "Get Product Supplier by ProductSupplierID",
        "operationId": "ProductSupplier_GetProductSupplierById",
        "parameters": [
          {
            "name": "productSupplierId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblProductSupplier"
                }
              }
            }
          }
        }
      }
    },
    "/api/ProductSupplier/IdExt/{productSupplierIdExt}": {
      "get": {
        "tags": [
          "ProductSupplier"
        ],
        "summary": "Get ProductSupplier by ProductSupplierIDExt",
        "operationId": "ProductSupplier_GetProductSupplierByIdExt",
        "parameters": [
          {
            "name": "productSupplierIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblProductSupplier"
                }
              }
            }
          }
        }
      }
    },
    "/api/ProductSupplier/{productSupplierIdExt}": {
      "delete": {
        "tags": [
          "ProductSupplier"
        ],
        "summary": "Delete a Product Supplier",
        "operationId": "ProductSupplier_DeleteProductSupplier",
        "parameters": [
          {
            "name": "productSupplierIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        }
      }
    },
    "/api/QualityControl": {
      "get": {
        "tags": [
          "QualityControl"
        ],
        "summary": "Get QualityControl entities. Set 'includeImageData' to true to include Quality Control image data and QualityControlReport data",
        "operationId": "QualityControl_Get",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "includeImageData",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": false,
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblQualityControl"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "QualityControl"
        ],
        "summary": "Edit an existing QualityControl. NB! It is not possible to edit any of the Image properties, nor the QualityControlReport property",
        "operationId": "QualityControl_EditQualityControl",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblQualityControl"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblQualityControl"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblQualityControl"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "qualityControl"
      },
      "post": {
        "tags": [
          "QualityControl"
        ],
        "summary": "Add a new QualityControl",
        "operationId": "QualityControl_AddQualityControl",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "QualityControlId": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "QualityControlIdext": {
                    "type": "string",
                    "nullable": true
                  },
                  "QualityControlDescription": {
                    "type": "string",
                    "nullable": true
                  },
                  "QualityControlQuestion": {
                    "type": "string",
                    "nullable": true
                  },
                  "LogoPicture": {
                    "type": "string",
                    "format": "byte",
                    "nullable": true
                  },
                  "OnlyEmployeeInCharge": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "ShowRecord": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "UpdateInfoExt": {
                    "type": "integer",
                    "format": "byte",
                    "nullable": true
                  },
                  "SchemaType": {
                    "type": "integer",
                    "format": "byte",
                    "nullable": true
                  },
                  "QualityControlReport": {
                    "type": "string",
                    "format": "byte",
                    "nullable": true
                  },
                  "Guid": {
                    "type": "string",
                    "nullable": true
                  },
                  "Image1": {
                    "type": "string",
                    "format": "byte",
                    "nullable": true
                  },
                  "Image2": {
                    "type": "string",
                    "format": "byte",
                    "nullable": true
                  },
                  "Image3": {
                    "type": "string",
                    "format": "byte",
                    "nullable": true
                  },
                  "FormatVersion": {
                    "type": "string",
                    "nullable": true
                  },
                  "Xmlversion": {
                    "type": "number",
                    "format": "double",
                    "nullable": true
                  },
                  "Rptversion": {
                    "type": "number",
                    "format": "double",
                    "nullable": true
                  },
                  "Activated": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "Personal": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "WriteProtection": {
                    "type": "integer",
                    "format": "byte",
                    "nullable": true
                  },
                  "ReportType": {
                    "type": "integer",
                    "format": "byte",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblQualityControl"
                }
              }
            }
          }
        }
      }
    },
    "/api/QualityControl/Id/{qualityControlId}": {
      "get": {
        "tags": [
          "QualityControl"
        ],
        "summary": "Get QualityControl by QualityControlID. Set 'includeImageData' to true to include Quality Control image data and QualityControlReport data",
        "operationId": "QualityControl_GetQualityControlById",
        "parameters": [
          {
            "name": "qualityControlId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          },
          {
            "name": "includeImageData",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": false,
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblQualityControl"
                }
              }
            }
          }
        }
      }
    },
    "/api/QualityControl/IdExt/{qualityControlIdExt}": {
      "get": {
        "tags": [
          "QualityControl"
        ],
        "summary": "Get QualityControl by QualityControlIDExt. Set 'includeImageData' to true to include Quality Control image data and QualityControlReport data",
        "operationId": "QualityControl_GetQualityControlByIdExt",
        "parameters": [
          {
            "name": "qualityControlIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "includeImageData",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": false,
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblQualityControl"
                }
              }
            }
          }
        }
      }
    },
    "/api/QualityControl/{qualityControlIdExt}": {
      "delete": {
        "tags": [
          "QualityControl"
        ],
        "summary": "Delete a QualityControl",
        "operationId": "QualityControl_DeleteQualityControl",
        "parameters": [
          {
            "name": "qualityControlIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        }
      }
    },
    "/api/Schedule": {
      "get": {
        "tags": [
          "Schedule"
        ],
        "summary": "Get Schedule entities",
        "operationId": "Schedule_Get",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblSchedule"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Schedule"
        ],
        "summary": "Edit an existing Schedule",
        "operationId": "Schedule_EditSchedule",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblSchedule"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblSchedule"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblSchedule"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "schedule"
      },
      "post": {
        "tags": [
          "Schedule"
        ],
        "summary": "Add a new Schedule",
        "operationId": "Schedule_AddSchedule",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblSchedule"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblSchedule"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblSchedule"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblSchedule"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "schedule"
      }
    },
    "/api/Schedule/Id/{scheduleId}": {
      "get": {
        "tags": [
          "Schedule"
        ],
        "summary": "Get Schedule by ScheduleID",
        "operationId": "Schedule_GetScheduleById",
        "parameters": [
          {
            "name": "scheduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblSchedule"
                }
              }
            }
          }
        }
      }
    },
    "/api/Schedule/IdExt/{scheduleIdExt}": {
      "get": {
        "tags": [
          "Schedule"
        ],
        "summary": "Get Schedule by ScheduleIDExt",
        "operationId": "Schedule_GetScheduleByIdExt",
        "parameters": [
          {
            "name": "scheduleIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblSchedule"
                }
              }
            }
          }
        }
      }
    },
    "/api/Schedule/neworchanged/{rowVersion}": {
      "get": {
        "tags": [
          "Schedule"
        ],
        "summary": "Get new or changed Schedule entities",
        "operationId": "Schedule_GetNewOrChanged",
        "parameters": [
          {
            "name": "rowVersion",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": false
            }
          },
          {
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblSchedule"
                }
              }
            }
          }
        }
      }
    },
    "/api/Schedule/{scheduleIdExt}": {
      "delete": {
        "tags": [
          "Schedule"
        ],
        "summary": "Delete a Schedule",
        "operationId": "Schedule_DeleteSchedule",
        "parameters": [
          {
            "name": "scheduleIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        }
      }
    },
    "/api/Service": {
      "get": {
        "tags": [
          "Service"
        ],
        "summary": "Get Service entities",
        "operationId": "Service_Get",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblService"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Service"
        ],
        "summary": "Edit an existing Service",
        "operationId": "Service_EditService",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblService"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblService"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblService"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "service"
      },
      "post": {
        "tags": [
          "Service"
        ],
        "summary": "Add a new Service",
        "operationId": "Service_AddService",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblService"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblService"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblService"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblService"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "service"
      }
    },
    "/api/Service/Id/{serviceId}": {
      "get": {
        "tags": [
          "Service"
        ],
        "summary": "Get Service by ServiceID",
        "operationId": "Service_GetServiceById",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblService"
                }
              }
            }
          }
        }
      }
    },
    "/api/Service/IdExt/{serviceIdExt}": {
      "get": {
        "tags": [
          "Service"
        ],
        "summary": "Get Service by ServiceIDExt",
        "operationId": "Service_GetServiceByIdExt",
        "parameters": [
          {
            "name": "serviceIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblService"
                }
              }
            }
          }
        }
      }
    },
    "/api/Service/{serviceIdExt}": {
      "delete": {
        "tags": [
          "Service"
        ],
        "summary": "Delete a Service",
        "operationId": "Service_DeleteService",
        "parameters": [
          {
            "name": "serviceIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        }
      }
    },
    "/api/Stock": {
      "get": {
        "tags": [
          "Stock"
        ],
        "summary": "Get Stock entities",
        "operationId": "Stock_Get",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblStock"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Stock"
        ],
        "summary": "Edit an existing Stock",
        "operationId": "Stock_EditStock",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblStock"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblStock"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblStock"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "stock"
      },
      "post": {
        "tags": [
          "Stock"
        ],
        "summary": "Add a new Stock",
        "operationId": "Stock_AddStock",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblStock"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblStock"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblStock"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblStock"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "stock"
      }
    },
    "/api/Stock/Id/{stockId}": {
      "get": {
        "tags": [
          "Stock"
        ],
        "summary": "Get Stock by StockID",
        "operationId": "Stock_GetStockById",
        "parameters": [
          {
            "name": "stockId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblStock"
                }
              }
            }
          }
        }
      }
    },
    "/api/Stock/IdExt/{stockIdExt}": {
      "get": {
        "tags": [
          "Stock"
        ],
        "summary": "Get Stock by StockIDExt",
        "operationId": "Stock_GetStockByIdExt",
        "parameters": [
          {
            "name": "stockIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblStock"
                }
              }
            }
          }
        }
      }
    },
    "/api/Stock/{stockIdExt}": {
      "delete": {
        "tags": [
          "Stock"
        ],
        "summary": "Delete a Stock",
        "operationId": "Stock_DeleteStock",
        "parameters": [
          {
            "name": "stockIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        }
      }
    },
    "/api/Storage": {
      "get": {
        "tags": [
          "Storage"
        ],
        "summary": "Get Storage entities",
        "operationId": "Storage_Get",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblStorage"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Storage"
        ],
        "summary": "Edit an existing Storage",
        "operationId": "Storage_EditStorage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblStorage"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblStorage"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblStorage"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "storage"
      },
      "post": {
        "tags": [
          "Storage"
        ],
        "summary": "Add a new Storage",
        "operationId": "Storage_AddStorage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblStorage"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblStorage"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblStorage"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblStorage"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "storage"
      }
    },
    "/api/Storage/Id/{storageId}": {
      "get": {
        "tags": [
          "Storage"
        ],
        "summary": "Get Storage by StorageID",
        "operationId": "Storage_GetStorageById",
        "parameters": [
          {
            "name": "storageId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblStorage"
                }
              }
            }
          }
        }
      }
    },
    "/api/Storage/IdExt/{storageIdExt}": {
      "get": {
        "tags": [
          "Storage"
        ],
        "summary": "Get Storage by StorageIDExt",
        "operationId": "Storage_GetStorageByIdExt",
        "parameters": [
          {
            "name": "storageIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblStorage"
                }
              }
            }
          }
        }
      }
    },
    "/api/Storage/{storageIdExt}": {
      "delete": {
        "tags": [
          "Storage"
        ],
        "summary": "Delete a Storage",
        "operationId": "Storage_DeleteStorage",
        "parameters": [
          {
            "name": "storageIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        }
      }
    },
    "/api/StorageTransfer": {
      "get": {
        "tags": [
          "StorageTransfer"
        ],
        "summary": "Get Storage Transfer entities",
        "operationId": "StorageTransfer_Get",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblStorageTransfer"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "StorageTransfer"
        ],
        "summary": "Edit an existing Storage Transfer",
        "operationId": "StorageTransfer_EditStorageTransfer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblStorageTransfer"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblStorageTransfer"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblStorageTransfer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "storageTransfer"
      },
      "post": {
        "tags": [
          "StorageTransfer"
        ],
        "summary": "Add a new Storage Transfer",
        "operationId": "StorageTransfer_AddStorageTransfer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblStorageTransfer"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblStorageTransfer"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblStorageTransfer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblStorageTransfer"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "storageTransfer"
      }
    },
    "/api/StorageTransfer/Id/{storageTransferId}": {
      "get": {
        "tags": [
          "StorageTransfer"
        ],
        "summary": "Get Storage Transfer by StorageTransferID",
        "operationId": "StorageTransfer_GetStorageTransferById",
        "parameters": [
          {
            "name": "storageTransferId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblStorage"
                }
              }
            }
          }
        }
      }
    },
    "/api/StorageTransfer/IdExt/{storageTransferIdExt}": {
      "get": {
        "tags": [
          "StorageTransfer"
        ],
        "summary": "Get Storage Transfer by StorageTransferIDExt",
        "operationId": "StorageTransfer_GetStorageTransgerByIdExt",
        "parameters": [
          {
            "name": "storageTransferIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblStorage"
                }
              }
            }
          }
        }
      }
    },
    "/api/StorageTransfer/neworchanged/{rowVersion}": {
      "get": {
        "tags": [
          "StorageTransfer"
        ],
        "summary": "Get new or changed Storage Transfer entities",
        "operationId": "StorageTransfer_GetNewOrChanged",
        "parameters": [
          {
            "name": "rowVersion",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": false
            }
          },
          {
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblStorageTransfer"
                }
              }
            }
          }
        }
      }
    },
    "/api/StorageTransfer/{storageTransferIdExt}": {
      "delete": {
        "tags": [
          "StorageTransfer"
        ],
        "summary": "Delete a Storage Transfer",
        "operationId": "StorageTransfer_DeleteStorageTransfer",
        "parameters": [
          {
            "name": "storageTransferIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        }
      }
    },
    "/api/Supplier": {
      "get": {
        "tags": [
          "Supplier"
        ],
        "summary": "Get Supplier entities",
        "operationId": "Supplier_Get",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "description": "A comma-separated filter string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorts",
            "in": "query",
            "description": "A comma-separated sort string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "The page number to load",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblSupplier"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Supplier"
        ],
        "summary": "Edit an existing Supplier",
        "operationId": "Supplier_EditSupplier",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblSupplier"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblSupplier"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblSupplier"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "supplier"
      },
      "post": {
        "tags": [
          "Supplier"
        ],
        "summary": "Add a new Supplier",
        "operationId": "Supplier_AddSupplier",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TblSupplier"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TblSupplier"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TblSupplier"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblSupplier"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "supplier"
      }
    },
    "/api/Supplier/Id/{supplierId}": {
      "get": {
        "tags": [
          "Supplier"
        ],
        "summary": "Get Supplier by SupplierID",
        "operationId": "Supplier_GetSupplierById",
        "parameters": [
          {
            "name": "supplierId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblSupplier"
                }
              }
            }
          }
        }
      }
    },
    "/api/Supplier/IdExt/{supplierIdExt}": {
      "get": {
        "tags": [
          "Supplier"
        ],
        "summary": "Get Supplier by SupplierIDExt",
        "operationId": "Supplier_GetSupplierByIdExt",
        "parameters": [
          {
            "name": "supplierIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TblSupplier"
                }
              }
            }
          }
        }
      }
    },
    "/api/Supplier/{supplierIdExt}": {
      "delete": {
        "tags": [
          "Supplier"
        ],
        "summary": "Delete a Supplier",
        "operationId": "Supplier_DeleteSupplier",
        "parameters": [
          {
            "name": "supplierIdExt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returns 'No Content' on success",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "TblAssignmentNote": {
        "required": [
          "rowVer",
          "sortOrder"
        ],
        "type": "object",
        "properties": {
          "assignmentNoteId": {
            "type": "integer",
            "format": "int32"
          },
          "assignmentNoteIdext": {
            "type": "string"
          },
          "assignmentNoteIdtext": {
            "type": "string"
          },
          "assignmentId": {
            "type": "integer",
            "format": "int32"
          },
          "assignmentIdext": {
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "internal": {
            "type": "boolean"
          },
          "regTime": {
            "type": "string",
            "format": "date-time"
          },
          "regEmployeeId": {
            "type": "integer",
            "format": "int32"
          },
          "regEmployeeIdext": {
            "type": "string"
          },
          "showRecord": {
            "type": "boolean"
          },
          "lastSyncPocketPcid": {
            "type": "integer",
            "format": "int32"
          },
          "updateInfoExt": {
            "type": "integer",
            "format": "byte"
          },
          "lineTag": {
            "type": "boolean"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "active": {
            "type": "boolean"
          },
          "rowVer": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "TblAssignment": {
        "required": [
          "assignmentType",
          "customerId",
          "rowVer"
        ],
        "type": "object",
        "properties": {
          "assignmentId": {
            "type": "integer",
            "format": "int32"
          },
          "assignmentIdext": {
            "type": "string"
          },
          "assignmentIdtext": {
            "type": "string"
          },
          "parentAssignmentId": {
            "type": "integer",
            "format": "int32"
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "assignmentDate": {
            "type": "string",
            "format": "date-time"
          },
          "fromDate": {
            "type": "string",
            "format": "date-time"
          },
          "toDate": {
            "type": "string",
            "format": "date-time"
          },
          "invoiceStatusId": {
            "type": "integer",
            "format": "byte"
          },
          "invoiceDate": {
            "type": "string",
            "format": "date-time"
          },
          "invoiceDateDue": {
            "type": "string",
            "format": "date-time"
          },
          "invoiceComment": {
            "type": "string"
          },
          "ourReferenceCode": {
            "type": "string"
          },
          "reference": {
            "type": "string"
          },
          "contact": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "siteAddress": {
            "type": "string"
          },
          "sitePostalNumber": {
            "type": "string"
          },
          "sitePostalPlace": {
            "type": "string"
          },
          "jobDescription": {
            "type": "string"
          },
          "discountProduct": {
            "type": "number",
            "format": "double"
          },
          "discountService": {
            "type": "number",
            "format": "double"
          },
          "assignmentType": {
            "type": "integer",
            "format": "byte"
          },
          "assignmentPriceType": {
            "type": "integer",
            "format": "byte"
          },
          "assignmentPrice": {
            "type": "number",
            "format": "double"
          },
          "officeClerkId": {
            "type": "integer",
            "format": "int32"
          },
          "employeeInChargeId": {
            "type": "integer",
            "format": "int32"
          },
          "requireQualityControl": {
            "type": "boolean"
          },
          "requireServiceCommentIgnore": {
            "type": "boolean"
          },
          "requirePhase": {
            "type": "boolean"
          },
          "requireCostCategory1": {
            "type": "boolean"
          },
          "requireCostCategory2": {
            "type": "boolean"
          },
          "signatureId": {
            "type": "integer",
            "format": "int32"
          },
          "useEmployee": {
            "type": "string"
          },
          "useService": {
            "type": "string"
          },
          "participants": {
            "type": "string"
          },
          "assignmentProductSyncFilter": {
            "type": "string"
          },
          "assignmentServiceSyncFilter": {
            "type": "string"
          },
          "hierarchyLevel": {
            "type": "integer",
            "format": "byte"
          },
          "regEmployeeId": {
            "type": "integer",
            "format": "int32"
          },
          "showRecord": {
            "type": "boolean"
          },
          "lastSyncPocketPcid": {
            "type": "integer",
            "format": "int32"
          },
          "updateInfoExt": {
            "type": "integer",
            "format": "byte"
          },
          "externalStatus": {
            "type": "integer",
            "format": "byte"
          },
          "unassignedAssignmentEnabled": {
            "type": "integer",
            "format": "byte"
          },
          "useAssignmentListChoice": {
            "type": "string"
          },
          "assignmentCompleteTime": {
            "type": "string",
            "format": "date-time"
          },
          "assignmentComplete": {
            "type": "boolean"
          },
          "gpsposition": {
            "type": "string"
          },
          "assignmentTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "assignmentStatusId": {
            "type": "integer",
            "format": "int32"
          },
          "assignmentPriorityId": {
            "type": "integer",
            "format": "int32"
          },
          "timeEstimate": {
            "type": "number",
            "format": "double"
          },
          "useAssignmentObjectQualityControl": {
            "type": "string"
          },
          "siteName": {
            "type": "string"
          },
          "gpspositionStatus": {
            "type": "integer",
            "format": "byte"
          },
          "gpspositionLat": {
            "type": "number",
            "format": "double"
          },
          "gpspositionLon": {
            "type": "number",
            "format": "double"
          },
          "gpspositionAlt": {
            "type": "number",
            "format": "double"
          },
          "gpspositionAccuracy": {
            "type": "number",
            "format": "double"
          },
          "gpspositionInfo": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "useDimension": {
            "type": "string"
          },
          "lineTagUsage": {
            "type": "integer",
            "format": "byte"
          },
          "workProcess": {
            "type": "string"
          },
          "externalValueInt": {
            "type": "integer",
            "format": "int32"
          },
          "customerSiteId": {
            "type": "integer",
            "format": "int32"
          },
          "rowVer": {
            "type": "integer",
            "format": "int64"
          },
          "serviceApproveRequired": {
            "type": "boolean"
          },
          "useQualityControlRequire": {
            "type": "string"
          },
          "departmentId": {
            "type": "integer",
            "format": "int32"
          },
          "customerIdExt": {
            "type": "string"
          },
          "regEmployeeIdExt": {
            "type": "string"
          },
          "employeeInChargeIdExt": {
            "type": "string"
          },
          "assignmentPriorityIdExt": {
            "type": "string"
          },
          "assignmentTypeIdExt": {
            "type": "string"
          },
          "assignmentStatusIdExt": {
            "type": "string"
          },
          "customerSiteIdExt": {
            "type": "string"
          },
          "parentAssignmentIdExt": {
            "type": "string"
          },
          "signatureIdExt": {
            "type": "string"
          },
          "officeClerkIdExt": {
            "type": "string"
          },
          "departmentIdExt": {
            "type": "string"
          }
        }
      },
      "AssignmentExtended": {
        "type": "object",
        "properties": {
          "assignment": {
            "$ref": "#/components/schemas/TblAssignment"
          },
          "customer": {
            "$ref": "#/components/schemas/TblCustomer"
          },
          "employeeInCharge": {
            "$ref": "#/components/schemas/TblEmployee"
          },
          "assignmentProducts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TblAssignmentProduct"
            }
          },
          "assignmentServices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TblAssignmentService"
            }
          },
          "assignmentQualityControls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TblAssignmentQualityControl"
            }
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TblAttachment"
            }
          },
          "assignmentNotes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TblAssignmentNote"
            }
          },
          "assignmentObjects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TblAssignmentObject"
            }
          }
        }
      },
      "TblCustomer": {
        "required": [
          "rowVer"
        ],
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "customerIdext": {
            "type": "string"
          },
          "customerIdtext": {
            "type": "string"
          },
          "organizationNumber": {
            "type": "string"
          },
          "companyLastname": {
            "type": "string"
          },
          "contactFirstname": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "postalNumber": {
            "type": "string"
          },
          "postalPlace": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "phone2": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "fax": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "discountProduct": {
            "type": "number",
            "format": "double"
          },
          "discountService": {
            "type": "number",
            "format": "double"
          },
          "status": {
            "type": "integer",
            "format": "byte"
          },
          "departmentIdext": {
            "type": "string"
          },
          "regEmployeeId": {
            "type": "integer",
            "format": "int32"
          },
          "showRecord": {
            "type": "boolean"
          },
          "updateInfoExt": {
            "type": "integer",
            "format": "byte"
          },
          "externalStatus": {
            "type": "integer",
            "format": "byte"
          },
          "gpspositionStatus": {
            "type": "integer",
            "format": "byte"
          },
          "gpspositionLat": {
            "type": "number",
            "format": "double"
          },
          "gpspositionLon": {
            "type": "number",
            "format": "double"
          },
          "gpspositionAlt": {
            "type": "number",
            "format": "double"
          },
          "gpspositionAccuracy": {
            "type": "number",
            "format": "double"
          },
          "gpspositionInfo": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "regEmployeeIDExt": {
            "type": "string"
          },
          "rowVer": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "TblEmployee": {
        "required": [
          "rowVer"
        ],
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "integer",
            "format": "int32"
          },
          "employeeIdext": {
            "type": "string"
          },
          "employeeIdtext": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "firstname": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "fax": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "userProfileId": {
            "type": "integer",
            "format": "int32"
          },
          "showRecord": {
            "type": "boolean"
          },
          "updateInfoExt": {
            "type": "integer",
            "format": "byte"
          },
          "pocketPcid": {
            "type": "integer",
            "format": "int32"
          },
          "viaTracksUsername": {
            "type": "string"
          },
          "viaTracksPassword": {
            "type": "string"
          },
          "exchangeUsername": {
            "type": "string"
          },
          "exchangePassword": {
            "type": "string"
          },
          "isOfficeClerk": {
            "type": "boolean"
          },
          "speedyCraftWebUsername": {
            "type": "string"
          },
          "speedyCraftWebPassword": {
            "type": "string"
          },
          "serviceApproveRequired": {
            "type": "boolean"
          },
          "exchangeSyncState": {
            "type": "string"
          },
          "notificationSetup": {
            "type": "string"
          },
          "speedyCraftWebVerificationToken": {
            "type": "string"
          },
          "speedyCraftWebVerificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "departmentId": {
            "type": "integer",
            "format": "int32"
          },
          "departmentIdext": {
            "type": "string"
          },
          "rowVer": {
            "type": "integer",
            "format": "int64"
          },
          "hasMobileDevice": {
            "type": "boolean"
          }
        }
      },
      "TblAssignmentProduct": {
        "required": [
          "rowVer"
        ],
        "type": "object",
        "properties": {
          "assignmentProductId": {
            "type": "integer",
            "format": "int32"
          },
          "assignmentProductIdext": {
            "type": "string"
          },
          "assignmentProductIdtext": {
            "type": "string"
          },
          "editAssignmentProductId": {
            "type": "integer",
            "format": "int32"
          },
          "editAssignmentProductIdext": {
            "type": "string"
          },
          "assignmentId": {
            "type": "integer",
            "format": "int32"
          },
          "assignmentIdext": {
            "type": "string"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "productIdext": {
            "type": "string"
          },
          "supplierId": {
            "type": "integer",
            "format": "int32"
          },
          "modProductName": {
            "type": "string"
          },
          "modPriceOut": {
            "type": "number",
            "format": "double"
          },
          "modDiscount": {
            "type": "number",
            "format": "double"
          },
          "modPriceInNet": {
            "type": "number",
            "format": "double"
          },
          "preQuantity": {
            "type": "number",
            "format": "double"
          },
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "storageId": {
            "type": "integer",
            "format": "int32"
          },
          "regDate": {
            "type": "string",
            "format": "date-time"
          },
          "partlyInvoiceStatus": {
            "type": "integer",
            "format": "byte"
          },
          "phaseIdext": {
            "type": "string"
          },
          "costCategory1Idext": {
            "type": "string"
          },
          "costCategory2Idext": {
            "type": "string"
          },
          "priceModified": {
            "type": "integer",
            "format": "byte"
          },
          "orderItemId": {
            "type": "integer",
            "format": "int32"
          },
          "externalStatus": {
            "type": "integer",
            "format": "byte"
          },
          "regEmployeeId": {
            "type": "integer",
            "format": "int32"
          },
          "parentAssignmentProductId": {
            "type": "integer",
            "format": "int32"
          },
          "parentAssignmentProductIdext": {
            "type": "string"
          },
          "showRecord": {
            "type": "boolean"
          },
          "lastSyncPocketPcid": {
            "type": "integer",
            "format": "int32"
          },
          "updateInfoExt": {
            "type": "integer",
            "format": "byte"
          },
          "miscData1": {
            "type": "string"
          },
          "miscData2": {
            "type": "string"
          },
          "miscData3": {
            "type": "string"
          },
          "miscData4": {
            "type": "string"
          },
          "prePlanned": {
            "type": "integer",
            "format": "byte"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "productIdtext": {
            "type": "string"
          },
          "assignmentObjectId": {
            "type": "integer",
            "format": "int32"
          },
          "assignmentNoteId": {
            "type": "integer",
            "format": "int32"
          },
          "assignmentProductDataDefinition": {
            "type": "string"
          },
          "assignmentProductDataResponse": {
            "type": "string"
          },
          "processed": {
            "type": "boolean"
          },
          "rowVer": {
            "type": "integer",
            "format": "int64"
          },
          "supplierIdext": {
            "type": "string"
          },
          "regEmployeeIdext": {
            "type": "string"
          },
          "storageIdext": {
            "type": "string"
          },
          "orderItemIdext": {
            "type": "string"
          },
          "assignmentObjectIdext": {
            "type": "string"
          },
          "assignmentNoteIdext": {
            "type": "string"
          }
        }
      },
      "TblAssignmentService": {
        "required": [
          "rowVer"
        ],
        "type": "object",
        "properties": {
          "assignmentServiceId": {
            "type": "integer",
            "format": "int32"
          },
          "assignmentServiceIdext": {
            "type": "string"
          },
          "assignmentServiceIdtext": {
            "type": "string"
          },
          "assignmentId": {
            "type": "integer",
            "format": "int32"
          },
          "assignmentIdext": {
            "type": "string"
          },
          "serviceDate": {
            "type": "string",
            "format": "date-time"
          },
          "serviceId": {
            "type": "integer",
            "format": "int32"
          },
          "serviceIdext": {
            "type": "string"
          },
          "modPrice": {
            "type": "number",
            "format": "double"
          },
          "modDiscount": {
            "type": "number",
            "format": "double"
          },
          "modCostPrice": {
            "type": "number",
            "format": "double"
          },
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "serviceComment": {
            "type": "string"
          },
          "employeeId": {
            "type": "integer",
            "format": "int32"
          },
          "partlyInvoiceStatus": {
            "type": "integer",
            "format": "byte"
          },
          "phaseIdext": {
            "type": "string"
          },
          "costCategory1Idext": {
            "type": "string"
          },
          "costCategory2Idext": {
            "type": "string"
          },
          "priceModified": {
            "type": "integer",
            "format": "byte"
          },
          "addOnAnswer": {
            "type": "string"
          },
          "externalStatus": {
            "type": "integer",
            "format": "byte"
          },
          "signatureId": {
            "type": "integer",
            "format": "int32"
          },
          "signatureIdext": {
            "type": "string"
          },
          "regEmployeeId": {
            "type": "integer",
            "format": "int32"
          },
          "showRecord": {
            "type": "boolean"
          },
          "lastSyncPocketPcid": {
            "type": "integer",
            "format": "int32"
          },
          "updateInfoExt": {
            "type": "integer",
            "format": "byte"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "assignmentObjectId": {
            "type": "integer",
            "format": "int32"
          },
          "assignmentNoteId": {
            "type": "integer",
            "format": "int32"
          },
          "regTime": {
            "type": "string",
            "format": "date-time"
          },
          "serviceStartTime": {
            "type": "string"
          },
          "serviceEndTime": {
            "type": "string"
          },
          "delivered": {
            "type": "boolean"
          },
          "approved": {
            "type": "integer",
            "format": "byte"
          },
          "approvedByEmployeeId": {
            "type": "integer",
            "format": "int32"
          },
          "approvedTime": {
            "type": "string",
            "format": "date-time"
          },
          "regWeb": {
            "type": "boolean"
          },
          "rowVer": {
            "type": "integer",
            "format": "int64"
          },
          "processed": {
            "type": "boolean"
          },
          "regEmployeeIdext": {
            "type": "string"
          },
          "assignmentObjectIdext": {
            "type": "string"
          },
          "assignmentNoteIdext": {
            "type": "string"
          },
          "employeeIdext": {
            "type": "string"
          },
          "approvedByEmployeeIdext": {
            "type": "string"
          }
        }
      },
      "TblAssignmentQualityControl": {
        "required": [
          "rowVer"
        ],
        "type": "object",
        "properties": {
          "assignmentQualityControlId": {
            "type": "integer",
            "format": "int32"
          },
          "assignmentQualityControlIdext": {
            "type": "string"
          },
          "ownerId": {
            "type": "integer",
            "format": "int32"
          },
          "ownerIdext": {
            "type": "string"
          },
          "qualityControlId": {
            "type": "integer",
            "format": "int32"
          },
          "qualityControlIdext": {
            "type": "string"
          },
          "assignmentQualityControlDescription": {
            "type": "string"
          },
          "qualityControlAnswer": {
            "type": "string"
          },
          "signatureEmployeeId": {
            "type": "integer",
            "format": "int32"
          },
          "signatureEmployeeIdext": {
            "type": "string"
          },
          "signatureCustomerId": {
            "type": "integer",
            "format": "int32"
          },
          "signatureCustomerIdext": {
            "type": "string"
          },
          "regTime": {
            "type": "string",
            "format": "date-time"
          },
          "regEmployeeId": {
            "type": "integer",
            "format": "int32"
          },
          "regEmployeeIdext": {
            "type": "string"
          },
          "showRecord": {
            "type": "boolean"
          },
          "lastSyncPocketPcid": {
            "type": "integer",
            "format": "int32"
          },
          "updateInfoExt": {
            "type": "integer",
            "format": "byte"
          },
          "externalStatus": {
            "type": "integer",
            "format": "byte"
          },
          "qualityControlQuestion": {
            "type": "string"
          },
          "schemaType": {
            "type": "integer",
            "format": "byte"
          },
          "qualityControlAnswerPreXml": {
            "type": "string"
          },
          "requiredStatus": {
            "type": "integer",
            "format": "byte"
          },
          "edokStatus": {
            "type": "integer",
            "format": "byte"
          },
          "edokRegTime": {
            "type": "string",
            "format": "date-time"
          },
          "processed": {
            "type": "boolean"
          },
          "rowVer": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "TblAttachment": {
        "required": [
          "rowVer"
        ],
        "type": "object",
        "properties": {
          "attachmentId": {
            "type": "integer",
            "format": "int32"
          },
          "attachmentIdext": {
            "type": "string"
          },
          "attachmentIdtext": {
            "type": "string"
          },
          "attachmentType": {
            "type": "integer",
            "format": "byte"
          },
          "description": {
            "type": "string"
          },
          "fileName": {
            "type": "string"
          },
          "fileSize": {
            "type": "integer",
            "format": "int32"
          },
          "fileData": {
            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type": "string",
            "format": "byte"
          },
          "isOnServer": {
            "type": "boolean"
          },
          "regTime": {
            "type": "string",
            "format": "date-time"
          },
          "regEmployeeId": {
            "type": "integer",
            "format": "int32"
          },
          "regEmployeeIdext": {
            "type": "string"
          },
          "updateInfoExt": {
            "type": "integer",
            "format": "byte"
          },
          "ownerId": {
            "type": "integer",
            "format": "int32"
          },
          "ownerIdext": {
            "type": "string"
          },
          "ownerType": {
            "type": "integer",
            "format": "byte"
          },
          "ownerIdtag": {
            "type": "integer",
            "format": "int32"
          },
          "showRecord": {
            "type": "boolean"
          },
          "edokStatus": {
            "type": "integer",
            "format": "byte"
          },
          "edokRegTime": {
            "type": "string",
            "format": "date-time"
          },
          "parentAttachmentId": {
            "type": "integer",
            "format": "int32"
          },
          "revisionNumber": {
            "type": "integer",
            "format": "int32"
          },
          "rowVer": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "TblAssignmentObject": {
        "required": [
          "rowVer"
        ],
        "type": "object",
        "properties": {
          "assignmentObjectId": {
            "type": "integer",
            "format": "int32"
          },
          "assignmentObjectIdext": {
            "type": "string"
          },
          "assignmentObjectIdtext": {
            "type": "string"
          },
          "assignmentId": {
            "type": "integer",
            "format": "int32"
          },
          "assignmentIdext": {
            "type": "string"
          },
          "objectId": {
            "type": "integer",
            "format": "int32"
          },
          "objectIdext": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "additionalInfo": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "deployTime": {
            "type": "string",
            "format": "date-time"
          },
          "assignmentObjectDataDefinition": {
            "type": "string"
          },
          "assignmentObjectDataResponse": {
            "type": "string"
          },
          "regTime": {
            "type": "string",
            "format": "date-time"
          },
          "regEmployeeId": {
            "type": "integer",
            "format": "int32"
          },
          "regEmployeeIdext": {
            "type": "string"
          },
          "showRecord": {
            "type": "boolean"
          },
          "lastSyncPocketPcid": {
            "type": "integer",
            "format": "int32"
          },
          "updateInfoExt": {
            "type": "integer",
            "format": "byte"
          },
          "externalStatus": {
            "type": "integer",
            "format": "byte"
          },
          "gpspositionStatus": {
            "type": "integer",
            "format": "byte"
          },
          "gpspositionLat": {
            "type": "number",
            "format": "double"
          },
          "gpspositionLon": {
            "type": "number",
            "format": "double"
          },
          "gpspositionAlt": {
            "type": "number",
            "format": "double"
          },
          "gpspositionAccuracy": {
            "type": "number",
            "format": "double"
          },
          "gpspositionInfo": {
            "type": "string"
          },
          "assignmentNoteId": {
            "type": "integer",
            "format": "int32"
          },
          "assignmentNoteIdext": {
            "type": "string"
          },
          "parentAssignmentObjectId": {
            "type": "integer",
            "format": "int32"
          },
          "parentAssignmentObjectIdext": {
            "type": "string"
          },
          "assignmentObjectStatusId": {
            "type": "integer",
            "format": "int32"
          },
          "readOnly": {
            "type": "integer",
            "format": "byte"
          },
          "rowVer": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "TblAssignmentParticipant": {
        "required": [
          "rowVer"
        ],
        "type": "object",
        "properties": {
          "assignmentParticipantId": {
            "type": "integer",
            "format": "int32"
          },
          "assignmentParticipantIdext": {
            "type": "string"
          },
          "assignmentParticipantIdtext": {
            "type": "string"
          },
          "assignmentId": {
            "type": "integer",
            "format": "int32"
          },
          "assignmentIdext": {
            "type": "string"
          },
          "employeeId": {
            "type": "integer",
            "format": "int32"
          },
          "employeeIdext": {
            "type": "string"
          },
          "autoStatus": {
            "type": "integer",
            "format": "byte"
          },
          "regTime": {
            "type": "string",
            "format": "date-time"
          },
          "regEmployeeId": {
            "type": "integer",
            "format": "int32"
          },
          "regEmployeeIdext": {
            "type": "string"
          },
          "showRecord": {
            "type": "boolean"
          },
          "updateInfoExt": {
            "type": "integer",
            "format": "byte"
          },
          "workProcess": {
            "type": "string"
          },
          "rowVer": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "TblAssignmentPriority": {
        "type": "object",
        "properties": {
          "assignmentPriorityId": {
            "type": "integer",
            "format": "int32"
          },
          "assignmentPriorityIdext": {
            "type": "string"
          },
          "assignmentPriorityIdtext": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "icon": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "showRecord": {
            "type": "boolean"
          },
          "updateInfoExt": {
            "type": "integer",
            "format": "byte"
          }
        }
      },
      "TblAssignmentStatus": {
        "type": "object",
        "properties": {
          "assignmentStatusId": {
            "type": "integer",
            "format": "int32"
          },
          "assignmentStatusIdext": {
            "type": "string"
          },
          "assignmentStatusIdtext": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "icon": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "predefined": {
            "type": "integer",
            "format": "byte"
          },
          "showRecord": {
            "type": "boolean"
          },
          "updateInfoExt": {
            "type": "integer",
            "format": "byte"
          },
          "assignmentComplete": {
            "type": "boolean"
          }
        }
      },
      "TblAssignmentType": {
        "type": "object",
        "properties": {
          "assignmentTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "assignmentTypeIdext": {
            "type": "string"
          },
          "assignmentTypeIdtext": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "requireQualityControlOverride": {
            "type": "integer",
            "format": "byte"
          },
          "useAssignmentListChoice": {
            "type": "string"
          },
          "showRecord": {
            "type": "boolean"
          },
          "updateInfoExt": {
            "type": "integer",
            "format": "byte"
          },
          "useEmployee": {
            "type": "string"
          },
          "useService": {
            "type": "string"
          },
          "useAssignmentObjectQualityControl": {
            "type": "string"
          },
          "useDimension": {
            "type": "string"
          },
          "workProcess": {
            "type": "string"
          },
          "useQualityControl": {
            "type": "string"
          },
          "useQualityControlRequire": {
            "type": "string"
          },
          "useQualityControlAutoAdd": {
            "type": "string"
          },
          "qualityControlPreRequire": {
            "type": "string"
          },
          "serviceApproveRequired": {
            "type": "boolean"
          }
        }
      },
      "TblCustomerSite": {
        "required": [
          "rowVer"
        ],
        "type": "object",
        "properties": {
          "customerSiteId": {
            "type": "integer",
            "format": "int32"
          },
          "customerSiteIdext": {
            "type": "string"
          },
          "customerSiteIdtext": {
            "type": "string"
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "customerIdext": {
            "type": "string"
          },
          "siteName": {
            "type": "string"
          },
          "siteAddress": {
            "type": "string"
          },
          "sitePostalNumber": {
            "type": "string"
          },
          "sitePostalPlace": {
            "type": "string"
          },
          "siteCountryCode": {
            "type": "string"
          },
          "gpspositionStatus": {
            "type": "integer",
            "format": "byte"
          },
          "gpspositionLat": {
            "type": "number",
            "format": "double"
          },
          "gpspositionLon": {
            "type": "number",
            "format": "double"
          },
          "gpspositionAlt": {
            "type": "number",
            "format": "double"
          },
          "gpspositionAccuracy": {
            "type": "number",
            "format": "double"
          },
          "gpspositionInfo": {
            "type": "string"
          },
          "contactFirstname": {
            "type": "string"
          },
          "contactLastname": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "municipalityNumber": {
            "type": "integer",
            "format": "int32"
          },
          "cadastralUnitNumber": {
            "type": "integer",
            "format": "int32"
          },
          "propertyUnitNumber": {
            "type": "integer",
            "format": "int32"
          },
          "leaseholdUnitNumber": {
            "type": "integer",
            "format": "int32"
          },
          "sectionUnitNumber": {
            "type": "integer",
            "format": "int32"
          },
          "edokNumber": {
            "type": "string"
          },
          "edokPlantId": {
            "type": "integer",
            "format": "int64"
          },
          "showRecord": {
            "type": "boolean"
          },
          "updateInfoExt": {
            "type": "integer",
            "format": "byte"
          },
          "lastSyncPocketPcid": {
            "type": "integer",
            "format": "int32"
          },
          "regEmployeeId": {
            "type": "integer",
            "format": "int32"
          },
          "regEmployeeIdext": {
            "type": "string"
          },
          "shareUnitNumber": {
            "type": "integer",
            "format": "int32"
          },
          "edokBuildingPlantId": {
            "type": "string"
          },
          "cooperativeOrganizationNumber": {
            "type": "string"
          },
          "rowVer": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "TblDepartment": {
        "required": [
          "rowVer"
        ],
        "type": "object",
        "properties": {
          "departmentId": {
            "type": "integer",
            "format": "int32"
          },
          "departmentIdext": {
            "type": "string"
          },
          "departmentIdtext": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "postalNumber": {
            "type": "string"
          },
          "postalPlace": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "gpspositionStatus": {
            "type": "integer",
            "format": "byte"
          },
          "gpspositionLat": {
            "type": "number",
            "format": "double"
          },
          "gpspositionLon": {
            "type": "number",
            "format": "double"
          },
          "gpspositionAlt": {
            "type": "number",
            "format": "double"
          },
          "gpspositionAccuracy": {
            "type": "number",
            "format": "double"
          },
          "gpspositionInfo": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "responsibleEmployeeId": {
            "type": "integer",
            "format": "int32"
          },
          "responsibleEmployeeIdext": {
            "type": "string"
          },
          "defaultStorageId": {
            "type": "integer",
            "format": "int32"
          },
          "defaultStorageIdext": {
            "type": "string"
          },
          "showRecord": {
            "type": "boolean"
          },
          "updateInfoExt": {
            "type": "integer",
            "format": "byte"
          },
          "rowVer": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "TblDimension": {
        "type": "object",
        "properties": {
          "dimensionId": {
            "type": "integer",
            "format": "int32"
          },
          "dimensionIdext": {
            "type": "string"
          },
          "dimensionIdtext": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "showRecord": {
            "type": "boolean"
          },
          "updateInfoExt": {
            "type": "integer",
            "format": "byte"
          },
          "parentDimensionId": {
            "type": "integer",
            "format": "int32"
          },
          "parentDimensionIdext": {
            "type": "string"
          },
          "passiveDimension": {
            "type": "integer",
            "format": "byte"
          },
          "useOnCustomer": {
            "type": "boolean"
          },
          "useOnAssignment": {
            "type": "boolean"
          },
          "useOnAssignmentProduct": {
            "type": "boolean"
          },
          "useOnAssignmentService": {
            "type": "boolean"
          },
          "subSelectMax": {
            "type": "integer",
            "format": "int32"
          },
          "subSelectMin": {
            "type": "integer",
            "format": "int32"
          },
          "useOnEmployee": {
            "type": "boolean"
          }
        }
      },
      "TblDimensionLink": {
        "required": [
          "rowVer"
        ],
        "type": "object",
        "properties": {
          "dimensionLinkId": {
            "type": "integer",
            "format": "int32"
          },
          "dimensionLinkIdext": {
            "type": "string"
          },
          "dimensionLinkIdtext": {
            "type": "string"
          },
          "dimensionId": {
            "type": "integer",
            "format": "int32"
          },
          "dimensionIdext": {
            "type": "string"
          },
          "linkTableType": {
            "type": "integer",
            "description": "Specifies which database table a link is connected to: 1 = Customer, 2 = Assignment, 3 = AssignmentProduct, 4 = AssignmentService, 5 = Employee",
            "format": "byte"
          },
          "linkTableId": {
            "type": "integer",
            "format": "int32"
          },
          "linkTableIdext": {
            "type": "string"
          },
          "regTime": {
            "type": "string",
            "format": "date-time"
          },
          "regEmployeeId": {
            "type": "integer",
            "format": "int32"
          },
          "regEmployeeIdext": {
            "type": "string"
          },
          "lastSyncPocketPcid": {
            "type": "integer",
            "format": "int32"
          },
          "showRecord": {
            "type": "boolean"
          },
          "updateInfoExt": {
            "type": "integer",
            "format": "byte"
          },
          "rowVer": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "TblPocketPc": {
        "type": "object",
        "properties": {
          "pocketPcid": {
            "type": "integer",
            "format": "int32"
          },
          "pocketPcserial": {
            "type": "string"
          },
          "employeeIdext": {
            "type": "string"
          },
          "employeeId": {
            "type": "integer",
            "format": "int32"
          },
          "softwareVersion": {
            "type": "string"
          },
          "syncDate": {
            "type": "string",
            "format": "date-time"
          },
          "syncStorage": {
            "type": "string"
          },
          "forceGenerate": {
            "type": "integer",
            "format": "byte"
          },
          "deviceType": {
            "type": "string"
          },
          "deviceOsversion": {
            "type": "string"
          },
          "softwarePlatform": {
            "type": "string"
          },
          "softwareType": {
            "type": "string"
          },
          "gcmtoken": {
            "type": "string"
          }
        }
      },
      "TblObject": {
        "required": [
          "rowVer"
        ],
        "type": "object",
        "properties": {
          "objectId": {
            "type": "integer",
            "format": "int32"
          },
          "objectIdext": {
            "type": "string"
          },
          "objectIdtext": {
            "type": "string"
          },
          "parentObjectId": {
            "type": "integer",
            "format": "int32"
          },
          "parentObjectIdext": {
            "type": "string"
          },
          "passiveObject": {
            "type": "boolean"
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "objectTypeIdext": {
            "type": "string"
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "customerIdext": {
            "type": "string"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "productIdext": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "additionalInfo": {
            "type": "string"
          },
          "objectTime": {
            "type": "string",
            "format": "date-time"
          },
          "serialnumber": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "objectDataDefinition": {
            "type": "string"
          },
          "objectDataResponse": {
            "type": "string"
          },
          "assignmentObjectDataDefinition": {
            "type": "string"
          },
          "regTime": {
            "type": "string",
            "format": "date-time"
          },
          "regEmployeeId": {
            "type": "integer",
            "format": "int32"
          },
          "regEmployeeIdext": {
            "type": "string"
          },
          "defaultOnline": {
            "type": "boolean"
          },
          "showRecord": {
            "type": "boolean"
          },
          "updateInfoExt": {
            "type": "integer",
            "format": "byte"
          },
          "gpspositionStatus": {
            "type": "integer",
            "format": "byte"
          },
          "gpspositionLat": {
            "type": "number",
            "format": "double"
          },
          "gpspositionLon": {
            "type": "number",
            "format": "double"
          },
          "gpspositionAlt": {
            "type": "number",
            "format": "double"
          },
          "gpspositionAccuracy": {
            "type": "number",
            "format": "double"
          },
          "gpspositionInfo": {
            "type": "string"
          },
          "storageId": {
            "type": "integer",
            "format": "int32"
          },
          "storageIdext": {
            "type": "string"
          },
          "geometryTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "readOnly": {
            "type": "integer",
            "format": "byte"
          },
          "lastSyncPocketPcid": {
            "type": "integer",
            "format": "int32"
          },
          "rowVer": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "TblOrder": {
        "required": [
          "rowVer"
        ],
        "type": "object",
        "properties": {
          "orderId": {
            "type": "integer",
            "format": "int32"
          },
          "orderIdext": {
            "type": "string"
          },
          "orderIdtext": {
            "type": "string"
          },
          "supplierId": {
            "type": "integer",
            "format": "int32"
          },
          "supplierIdext": {
            "type": "string"
          },
          "orderDate": {
            "type": "string",
            "format": "date-time"
          },
          "orderType": {
            "type": "integer",
            "format": "byte"
          },
          "destinationId": {
            "type": "integer",
            "format": "int32"
          },
          "destinationIdext": {
            "type": "string"
          },
          "ourReference": {
            "type": "string"
          },
          "ourReferenceCode": {
            "type": "string"
          },
          "deliveryName": {
            "type": "string"
          },
          "deliveryAddress": {
            "type": "string"
          },
          "deliveryPostalNumber": {
            "type": "string"
          },
          "deliveryPostalPlace": {
            "type": "string"
          },
          "deliveryDate": {
            "type": "string",
            "format": "date-time"
          },
          "packageText": {
            "type": "string"
          },
          "supplierTransportId": {
            "type": "integer",
            "format": "int32"
          },
          "supplierTransportDetail": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "checkStatus": {
            "type": "integer",
            "format": "byte"
          },
          "filename": {
            "type": "string"
          },
          "communicationStatus": {
            "type": "integer",
            "format": "byte"
          },
          "orderChief": {
            "type": "integer",
            "format": "byte"
          },
          "completelyCheckedInDate": {
            "type": "string",
            "format": "date-time"
          },
          "addOnAnswer": {
            "type": "string"
          },
          "regEmployeeId": {
            "type": "integer",
            "format": "int32"
          },
          "regEmployeeIdext": {
            "type": "string"
          },
          "showRecord": {
            "type": "boolean"
          },
          "updateInfoExt": {
            "type": "integer",
            "format": "byte"
          },
          "externalStatus": {
            "type": "integer",
            "format": "byte"
          },
          "supplierOrderConfigId": {
            "type": "integer",
            "format": "int32"
          },
          "supplierOrderConfigIdext": {
            "type": "string"
          },
          "supplierOrderId": {
            "type": "string"
          },
          "returning": {
            "type": "boolean"
          },
          "rowVer": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "TblOrderItem": {
        "required": [
          "rowVer"
        ],
        "type": "object",
        "properties": {
          "orderItemId": {
            "type": "integer",
            "format": "int32"
          },
          "orderItemIdext": {
            "type": "string"
          },
          "orderId": {
            "type": "integer",
            "format": "int32"
          },
          "orderIdext": {
            "type": "string"
          },
          "assignmentProductId": {
            "type": "integer",
            "format": "int32"
          },
          "assignmentProductIdext": {
            "type": "string"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "productIdext": {
            "type": "string"
          },
          "productIdtext": {
            "type": "string"
          },
          "modProductName": {
            "type": "string"
          },
          "orderQuantity": {
            "type": "number",
            "format": "double"
          },
          "deliveredQuantity": {
            "type": "number",
            "format": "double"
          },
          "restQuantity": {
            "type": "number",
            "format": "double"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "discount": {
            "type": "number",
            "format": "double"
          },
          "deliveryDate": {
            "type": "string",
            "format": "date-time"
          },
          "restDeliveryDate": {
            "type": "string",
            "format": "date-time"
          },
          "unit": {
            "type": "string"
          },
          "itemCheckStatus": {
            "type": "integer",
            "format": "byte"
          },
          "alreadyCheckedInQuantity": {
            "type": "number",
            "format": "double"
          },
          "checkInQuantityNow": {
            "type": "number",
            "format": "double"
          },
          "externalStatus": {
            "type": "integer",
            "format": "byte"
          },
          "regEmployeeId": {
            "type": "integer",
            "format": "int32"
          },
          "regEmployeeIdext": {
            "type": "string"
          },
          "showRecord": {
            "type": "boolean"
          },
          "updateInfoExt": {
            "type": "integer",
            "format": "byte"
          },
          "lineNumber": {
            "type": "integer",
            "format": "int32"
          },
          "rowVer": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "TblProduct": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "productIdext": {
            "type": "string"
          },
          "productIdtext": {
            "type": "string"
          },
          "eancode": {
            "type": "string"
          },
          "productName": {
            "type": "string"
          },
          "priceOut": {
            "type": "number",
            "format": "double"
          },
          "unit": {
            "type": "string"
          },
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "categoryIdext": {
            "type": "string"
          },
          "defaultSupplierId": {
            "type": "integer",
            "format": "int32"
          },
          "defaultSupplierIdext": {
            "type": "string"
          },
          "productType": {
            "type": "integer",
            "format": "byte"
          },
          "showRecord": {
            "type": "boolean"
          },
          "updateInfoExt": {
            "type": "integer",
            "format": "byte"
          },
          "myFavorite": {
            "type": "boolean"
          },
          "onStock": {
            "type": "integer",
            "format": "byte"
          },
          "qualityControlId": {
            "type": "integer",
            "format": "int32"
          },
          "qualityControlIdext": {
            "type": "string"
          },
          "qualityControlRequire": {
            "type": "integer",
            "format": "byte"
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "objectTypeIdext": {
            "type": "string"
          },
          "assignmentProductDataDefinition": {
            "type": "string"
          },
          "docLink": {
            "type": "string"
          },
          "blockUpdateInfoExt": {
            "type": "boolean"
          },
          "modifyPriceInNet": {
            "type": "boolean"
          }
        }
      },
      "TblProductSupplier": {
        "type": "object",
        "properties": {
          "productSupplierId": {
            "type": "integer",
            "format": "int32"
          },
          "productSupplierIdext": {
            "type": "string"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "productIdext": {
            "type": "string"
          },
          "supplierId": {
            "type": "integer",
            "format": "int32"
          },
          "supplierIdext": {
            "type": "string"
          },
          "priceIn": {
            "type": "number",
            "format": "double"
          },
          "priceInNet": {
            "type": "number",
            "format": "double"
          },
          "priceGroupId": {
            "type": "string"
          },
          "mergePack": {
            "type": "string"
          },
          "showRecord": {
            "type": "boolean"
          },
          "updateInfoExt": {
            "type": "integer",
            "format": "byte"
          },
          "onStockSupplier": {
            "type": "integer",
            "format": "byte"
          }
        }
      },
      "TblQualityControl": {
        "type": "object",
        "properties": {
          "qualityControlId": {
            "type": "integer",
            "format": "int32"
          },
          "qualityControlIdext": {
            "type": "string"
          },
          "qualityControlDescription": {
            "type": "string"
          },
          "qualityControlQuestion": {
            "type": "string"
          },
          "logoPicture": {
            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type": "string",
            "format": "byte"
          },
          "onlyEmployeeInCharge": {
            "type": "boolean"
          },
          "showRecord": {
            "type": "boolean"
          },
          "updateInfoExt": {
            "type": "integer",
            "format": "byte"
          },
          "schemaType": {
            "type": "integer",
            "format": "byte"
          },
          "qualityControlReport": {
            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type": "string",
            "format": "byte"
          },
          "guid": {
            "type": "string"
          },
          "image1": {
            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type": "string",
            "format": "byte"
          },
          "image2": {
            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type": "string",
            "format": "byte"
          },
          "image3": {
            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type": "string",
            "format": "byte"
          },
          "formatVersion": {
            "type": "string"
          },
          "xmlversion": {
            "type": "number",
            "format": "double"
          },
          "rptversion": {
            "type": "number",
            "format": "double"
          },
          "activated": {
            "type": "boolean"
          },
          "personal": {
            "type": "boolean"
          },
          "writeProtection": {
            "type": "integer",
            "format": "byte"
          },
          "reportType": {
            "type": "integer",
            "format": "byte"
          }
        }
      },
      "TblSchedule": {
        "required": [
          "rowVer"
        ],
        "type": "object",
        "properties": {
          "scheduleId": {
            "type": "integer",
            "format": "int32"
          },
          "scheduleIdext": {
            "type": "string"
          },
          "assignmentId": {
            "type": "integer",
            "format": "int32"
          },
          "assignmentIdext": {
            "type": "string"
          },
          "employeeId": {
            "type": "integer",
            "format": "int32"
          },
          "employeeIdext": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "comment": {
            "type": "string"
          },
          "showRecord": {
            "type": "boolean"
          },
          "updateInfoExt": {
            "type": "integer",
            "format": "byte"
          },
          "reminder": {
            "type": "integer",
            "format": "int32"
          },
          "timeLocked": {
            "type": "integer",
            "format": "byte"
          },
          "recurrence": {
            "type": "string"
          },
          "recurrenceEndTime": {
            "type": "string",
            "format": "date-time"
          },
          "exchangeId": {
            "type": "string"
          },
          "notificationEmail": {
            "type": "integer",
            "format": "byte"
          },
          "notificationSms": {
            "type": "integer",
            "format": "byte"
          },
          "rowVer": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "TblService": {
        "type": "object",
        "properties": {
          "serviceId": {
            "type": "integer",
            "format": "int32"
          },
          "serviceIdext": {
            "type": "string"
          },
          "serviceIdtext": {
            "type": "string"
          },
          "serviceDescription": {
            "type": "string"
          },
          "servicePrice": {
            "type": "number",
            "format": "double"
          },
          "serviceCostPrice": {
            "type": "number",
            "format": "double"
          },
          "quantification": {
            "type": "integer",
            "format": "byte"
          },
          "serviceSortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "requireServiceComment": {
            "type": "boolean"
          },
          "serviceType": {
            "type": "integer",
            "format": "byte"
          },
          "addOnQuestion": {
            "type": "string"
          },
          "showRecord": {
            "type": "boolean"
          },
          "updateInfoExt": {
            "type": "integer",
            "format": "byte"
          },
          "includeInTotal": {
            "type": "boolean"
          },
          "qualityControlId": {
            "type": "integer",
            "format": "int32"
          },
          "qualityControlIdext": {
            "type": "string"
          },
          "qualityControlRequire": {
            "type": "integer",
            "format": "byte"
          },
          "blockUpdateInfoExt": {
            "type": "boolean"
          }
        }
      },
      "TblStock": {
        "type": "object",
        "properties": {
          "stockId": {
            "type": "integer",
            "format": "int32"
          },
          "stockIdext": {
            "type": "string"
          },
          "storageId": {
            "type": "integer",
            "format": "int32"
          },
          "storageIdext": {
            "type": "string"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "productIdext": {
            "type": "string"
          },
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "updateInfoExt": {
            "type": "integer",
            "format": "byte"
          },
          "showRecord": {
            "type": "boolean"
          }
        }
      },
      "TblStorage": {
        "type": "object",
        "properties": {
          "storageId": {
            "type": "integer",
            "format": "int32"
          },
          "storageIdext": {
            "type": "string"
          },
          "storageIdtext": {
            "type": "string"
          },
          "storageDescription": {
            "type": "string"
          },
          "orderAutoEnabled": {
            "type": "boolean"
          },
          "orderAutoDefaultOrderCode": {
            "type": "string"
          },
          "showRecord": {
            "type": "boolean"
          },
          "updateInfoExt": {
            "type": "integer",
            "format": "byte"
          }
        }
      },
      "TblStorageTransfer": {
        "required": [
          "rowVer"
        ],
        "type": "object",
        "properties": {
          "storageTransferId": {
            "type": "integer",
            "format": "int32"
          },
          "storageTransferIdext": {
            "type": "string"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "productIdext": {
            "type": "string"
          },
          "fromStorageId": {
            "type": "integer",
            "format": "int32"
          },
          "fromStorageIdext": {
            "type": "string"
          },
          "toStorageId": {
            "type": "integer",
            "format": "int32"
          },
          "toStorageIdext": {
            "type": "string"
          },
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "transactionDate": {
            "type": "string",
            "format": "date-time"
          },
          "orderItemId": {
            "type": "integer",
            "format": "int32"
          },
          "orderItemIdext": {
            "type": "string"
          },
          "regEmployeeId": {
            "type": "integer",
            "format": "int32"
          },
          "regEmployeeIdext": {
            "type": "string"
          },
          "updateInfoExt": {
            "type": "integer",
            "format": "byte"
          },
          "rowVer": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "TblSupplier": {
        "type": "object",
        "properties": {
          "supplierId": {
            "type": "integer",
            "format": "int32"
          },
          "supplierIdext": {
            "type": "string"
          },
          "supplierIdtext": {
            "type": "string"
          },
          "supplierDescription": {
            "type": "string"
          },
          "supplierCustomerId": {
            "type": "string"
          },
          "ftpip": {
            "type": "string"
          },
          "ftpport": {
            "type": "integer",
            "format": "int32"
          },
          "ftpusername": {
            "type": "string"
          },
          "ftppassword": {
            "type": "string"
          },
          "ftpfilenamePrice": {
            "type": "string"
          },
          "ftpfilenameDiscount": {
            "type": "string"
          },
          "ftpuploadfolder": {
            "type": "string"
          },
          "ftpdownloadFolder": {
            "type": "string"
          },
          "orderFile": {
            "type": "integer",
            "format": "byte"
          },
          "confirmationFile": {
            "type": "integer",
            "format": "byte"
          },
          "showRecord": {
            "type": "boolean"
          },
          "updateInfoExt": {
            "type": "integer",
            "format": "byte"
          },
          "ftpdownloadFilter": {
            "type": "string"
          },
          "supplierGuid": {
            "type": "string"
          },
          "onlineService": {
            "type": "string"
          },
          "organizationNumber": {
            "type": "string"
          }
        }
      }
    }
  },
  "x-generator": "NSwag v13.1.6.0 (NJsonSchema v10.1.2.0 (Newtonsoft.Json v12.0.0.0))"
}
